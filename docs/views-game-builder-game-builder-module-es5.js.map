{"version":3,"sources":["webpack:///src/app/shared/enums/file-upload-type.enum.ts","webpack:///src/app/views/game-builder/game-builder-values.ts","webpack:///src/app/shared/components/input/input.module.ts","webpack:///src/app/shared/components/input/upload/upload.component.ts","webpack:///src/app/shared/components/input/upload/upload.component.html","webpack:///src/app/views/game-builder/game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component.html","webpack:///src/app/views/game-builder/game-builder-form/game-builder-form.component.ts","webpack:///src/app/views/game-builder/game-builder-form/game-builder-form.component.html","webpack:///src/app/shared/enums/media-src-type.enum.ts","webpack:///src/app/shared/components/input/abstract-input.component.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component.html","webpack:///src/app/views/game-builder/game-builder/game-builder.component.ts","webpack:///src/app/views/game-builder/game-builder/game-builder.component.html","webpack:///src/app/views/game-builder/game-builder-form/cards/card-urls/card-urls.component.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-urls/card-urls.component.html","webpack:///src/app/shared/components/input/select/select/select.component.ts","webpack:///src/app/shared/components/input/select/select/select.component.html","webpack:///src/app/views/game-builder/game-builder.module.ts","webpack:///src/app/shared/components/input/image/input-image-url/input-image-url.component.ts","webpack:///src/app/shared/components/input/image/input-image-url/input-image-url.component.html","webpack:///src/app/views/game-builder/game-builder-form/game-build-form-input.values.ts","webpack:///src/app/shared/components/input/input-label/input-label.component.html","webpack:///src/app/shared/components/input/input-label/input-label.component.ts","webpack:///src/app/shared/util/form.util.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-form/card-form.component.ts","webpack:///src/app/views/game-builder/game-builder-form/cards/card-form/card-form.component.html","webpack:///src/app/views/game-builder/game-builder-form/background-image-form/background-image-form.component.ts","webpack:///src/app/views/game-builder/game-builder-form/background-image-form/background-image-form.component.html","webpack:///src/app/shared/components/input/upload/upload-values.ts","webpack:///src/app/shared/components/input/select/select-yes-no/select-yes-no.component.ts","webpack:///src/app/shared/components/input/select/select-yes-no/select-yes-no.component.html","webpack:///src/app/shared/components/input/select/select-media-src-type/select-media-src-type-values.ts","webpack:///src/app/shared/components/input/input-number/input-number.component.ts","webpack:///src/app/shared/components/input/input-number/input-number.component.html","webpack:///src/app/shared/components/input/audio/input-audio-url/input-audio-url.component.ts","webpack:///src/app/shared/components/input/audio/input-audio-url/input-audio-url.component.html","webpack:///src/app/shared/components/input/select/select-media-src-type/select-media-src-type.component.ts","webpack:///src/app/shared/components/input/select/select-media-src-type/select-media-src-type.component.html","webpack:///src/app/shared/components/input/input-text/input-text.component.ts","webpack:///src/app/shared/components/input/input-text/input-text.component.html","webpack:///src/app/views/game-builder/game-builder-form/cards/url-pair-config.model.ts","webpack:///src/app/shared/components/input/image/image-preview/image-preview.component.ts","webpack:///src/app/shared/components/input/image/image-preview/image-preview.component.html"],"names":["FileUploadTypeEnum","IMG_FILENAME_SEP","upload","fileNameSeparator","DOWNLOAD_CONFIG_FILE","pt","en","GAME_BUILDER_TRANSLATION","pageTitle","gameBuilder","demoBuilder","instruction","uploadConfigFile","checkboxLabel","sectionTitle","mainData","backgroundImg","cards","cardImages","gameTitle","demo","input","singleCardPerPair","addCustomSoundsPerCard","numPairs","cardIdType","add","url","pair","getCardPair","ordinal","image","pairLink","getPairLink","audio","pickDirPath","diffImagesPerPair","warning","warningLink","btn","submit","createGame","playDemo","download","label","comment","diffImagesPerPairDialog","title","pairName","imageId","InputModule","UploadComponent","toastService","translationService","TRANSLATION","fileType","IMAGE","multiple","selectAllDir","onClearInput","onUpload","_numFiles","_setAccept","btnTranslation","nonMultiple","accept","AUDIO","JSON","_fileUploads","_clearInput","formControl","reset","singleChosedFileName","_inputElem","nativeElement","value","click","$event","fileList","target","files","length","item","emit","_extractFiles","typeOk","_showOutAcceptErrorMsg","sort","a","b","name","localeCompare","forEach","file","_readFile","replace","i","push","type","startsWith","translation","acceptErrorMsg","fileTypeTranslation","getTranslation","msg","error","reader","FileReader","onload","fileReaderEvent","result","_finishReadFiles","readAsDataURL","setValue","filename","openInputFile","CardPairUrlInputsComponent","fb","pairOrdinal","index","_initForm","form","group","required","_resetControls","parent","addSubForm","changes","urlPairConfig","firstChange","addCustomAudioPerPair","_addAudioControl","removeControl","addControl","$url","onInsertUrl","deleteUrl","GameBuilderFormComponent","gameService","FORM_INPUT","ACCEPT_IMG","options","flag","submitBtnTranslation","isDemo","_isDemo","_setOptions","_setSubmitBtn","NUMBERS","addBackgroundImg","backgroundImgSrc","card","cardSrcType","cardIdTypeNameTranslations","cardId","id","ROW_COLUMN","ICONS","$value","get","_isInvalidForm","showInvalidFormError","downloadGameConfig","_buildGameConfig","create","_buildGameConfigForDemo","markAllAsTouched","invalid","data","gameConfig","toUpperCase","srcType","UPLOAD","_getCardsFromUploads","_getCardsFromUrls","formValue","images","audios","buildCardsFromValidUploads","cardUrls","urls","map","obj","image2","audio2","imageDirPath","MediaSourceTypeEnum","AbstractInputComponent","flexDirectionRow","disabled","onChange","_originalRequired","isRequired","controlName","model","controls","hasError","errorKey","control","setErrors","markAsTouched","CardImageFilenameExampleDialogComponent","SEP","GameBuilderComponent","route","CONFIG_FILE_TYPE","pageTitleTranslation","subscribe","_initFlags","showForm","$doUpload","uploadFiles","uploadChild","createGameFromUploadedConfigFile","CardUrlsInputComponent","_CARD_URLS_INPUT","_cardImageMap","indices","Array","keys","_formArray","array","setTimeout","_numCardImages","numCards","ngOnInit","subForm","pairIndex","imageIndex","_buildCardImageKey","src","key","_updateFormControl","sumControlName","getSubForm","cardImageKey","Object","values","SelectComponent","ALL_OPTION","optionsTranslate","valueAttribute","labelAttribute","useFullOptionAsValue","onFinishedLoading","showLoadingOptionsError","_allSelected","checkForm","currentValue","option","$eventValue","allOptionLabel","_onChangeSelectionMultiple","includes","_allOption","selected","onChangeSelection","routes","path","component","GameBuilderModule","forChild","InputImageUrlComponent","GAME_BUILDER_FORM_INPUT","InputLabelComponent","FormUtil","setFormControlAsRequired","setFormControlAsNotRequired","setValidators","updateValueAndValidity","clearValidators","ANIMATION_TIMEOUT","STATE","show","hide","CardFormComponent","feedbackService","UploadFileType","FILENAME_SEP","MIN_NUM_PAIRS","stateUrlInputs","isUpload","showFilePatternWarning","showAudioUpload","_singleCardPerPair","$addCustomAudios","_addUploadAudioControl","receivePairConfigChange","$numPairs","_addCustomSoundsPerCard","some","_removeUrlInputs","min","siblingControlName","siblingFileUploadLen","cardUploadInput","imageControl","audioControl","validateCardUploads","invalidUploadMsg","setFormControlAsValid","handleError","setFormControlAsInvalid","dialog","openCustomDialog","changeAddCustomAudios","onChangeCardSrcType","overflow","height","opacity","BackgroundImageFormComponent","myControlName","valueChanges","_onUpload","$srcType","isUrl","URL","imgPreview","_setFormControlAsRequired","_setFormControlAsNotRequired","_setImage","_uploadChild","onChooseInputType","deleteFile","UPLOAD_TRANSLATION","noFileChosen","chosenFilesMsg","SelectYesNoComponent","SRC_TYPE_TRANSLATION_VALUES","InputNumberComponent","max","valueAsNumber","isNaN","sendValueChange","InputAudioUrlComponent","hasValue","isPlaying","_audio","Audio","load","play","pause","playPause","SelectMediaSrcTypeComponent","labelTranslate","InputTextComponent","placeholder","maxLength","inputType","sendChangeEvent","UrlPairConfig","ImagePreviewComponent","onDelete"],"mappings":"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","file":"views-game-builder-game-builder-module-es5.js","sourcesContent":["export enum FileUploadTypeEnum {\r\n    AUDIO,\r\n    IMAGE,\r\n    JSON\r\n}\r\n","import { VALUES } from \"src/app/shared/constants/global.values\";\r\n\r\nconst IMG_FILENAME_SEP = VALUES.upload.fileNameSeparator;\r\n\r\nconst DOWNLOAD_CONFIG_FILE = {\r\n    pt: 'Baixar arquivo',\r\n    en: 'Download game file'\r\n}\r\n\r\nexport const GAME_BUILDER_TRANSLATION = {\r\n    pageTitle: {\r\n        gameBuilder: {\r\n            pt: 'Monte o seu jogo',\r\n            en: 'Create your game'\r\n        },\r\n        demoBuilder: {\r\n            pt: 'Jogo Demonstração',\r\n            en: 'Demo Game'\r\n        }\r\n    },\r\n\r\n    instruction: {\r\n        pt: 'Preencha o formulário abaixo com as informações para o jogo',\r\n        en: 'Fill out the form below with the information for the game'\r\n    },\r\n\r\n    uploadConfigFile: {\r\n        checkboxLabel: {\r\n            pt: 'Prefiro enviar arquivo de configuração',\r\n            en: 'I prefer upload configuration file'\r\n        },\r\n        instruction: {\r\n            pt: `(gerado ao clicar em \"${DOWNLOAD_CONFIG_FILE.pt}\" no pé da página)`,\r\n            en: `(generated by clicking \"${DOWNLOAD_CONFIG_FILE.en}\" at page bottom)`\r\n        }\r\n    },\r\n\r\n    sectionTitle: {\r\n        mainData: {\r\n            pt: 'Dados Principais',\r\n            en: 'Main Data'\r\n        },\r\n\r\n        backgroundImg: {\r\n            pt: 'Imagem de Fundo',\r\n            en: 'Background image'\r\n        },\r\n\r\n        cards: {\r\n            pt: 'Cartas',\r\n            en: 'Cards'\r\n        },\r\n\r\n        cardImages: {\r\n            pt: 'Imagens das Cartas',\r\n            en: 'Card Images'\r\n        },\r\n    },\r\n\r\n    gameTitle: {\r\n        demo: {\r\n            pt: 'Jogo da Memória (Demo)',\r\n            en: 'Demo Memory Game'\r\n        }\r\n    },\r\n\r\n    input: {\r\n        gameTitle: {\r\n            pt: 'Título do jogo',\r\n            en: 'Game title'\r\n        },\r\n\r\n        singleCardPerPair: {\r\n            pt: 'Cada par possui cartas iguais?',\r\n            en: 'Does each pair have the same card?'\r\n        },\r\n\r\n        addCustomSoundsPerCard: {\r\n            pt: 'Adicionar sons customizados ao abrir cada carta',\r\n            en: 'Add custom sounds when opening each card'\r\n        },\r\n\r\n        numPairs: {\r\n            pt: 'Nº de pares',\r\n            en: 'Number of pairs'\r\n        },\r\n\r\n        cardIdType: {\r\n            pt: 'Como identificar as cartas',\r\n            en: 'How to identify the cards'\r\n        },\r\n\r\n        backgroundImg: {\r\n            add: {\r\n                pt: 'Inserir imagem de fundo?',\r\n                en: 'Insert background image?'\r\n            },\r\n            url: {\r\n                pt: 'Link da imagem',\r\n                en: 'Image link'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivo',\r\n                en: 'Upload image file'\r\n            }\r\n        },\r\n\r\n        cards: {\r\n            pair: {\r\n                pt: 'Par nº ',\r\n                en: 'Pair #'\r\n            },\r\n            getCardPair: (ordinal: any) => {\r\n                return {\r\n                    pt: `Carta ${ordinal} do Par `,\r\n                    en: `Card #${ordinal} of Pair #`\r\n                }\r\n            },\r\n\r\n            url: {\r\n                image: {\r\n                    pairLink: {\r\n                        pt: 'Link da Imagem do Par ',\r\n                        en: 'Image Link of Pair #'\r\n                    },\r\n\r\n                    getPairLink: (ordinal: any) => {\r\n                        return {\r\n                            pt: `Link da Imagem ${ordinal} do Par `,\r\n                            en: `Image Link #${ordinal} of Pair #`\r\n                        }\r\n                    },\r\n                },\r\n\r\n                audio: {\r\n                    pairLink: {\r\n                        pt: 'Link do Áudio do Par ',\r\n                        en: 'Audio Link of Pair #'\r\n                    },\r\n\r\n                    getPairLink: (ordinal: any) => {\r\n                        return {\r\n                            pt: `Link do Áudio ${ordinal} do Par `,\r\n                            en: `Audio Link #${ordinal} of Pair #`\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n\r\n            upload: {\r\n                pickDirPath: {\r\n                    pt: 'Selecione a pasta que contém as imagens das cartas',\r\n                    en: 'Select the folder containing the card images'\r\n                },\r\n                diffImagesPerPair: {\r\n                    warning: {\r\n                        pt: `Envio de arquivos diferentes por par: os nomes dos arquivos referentes ao mesmo par devem ter o mesmo prefixo seguido de ${IMG_FILENAME_SEP} . Veja um exemplo `,\r\n                        en: `Sending different files per pair: file names referring to the same pair must have the same prefix followed by ${IMG_FILENAME_SEP}. See an example `\r\n                    },\r\n                    warningLink: {\r\n                        pt: 'aqui',\r\n                        en: 'here'\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    },\r\n\r\n    btn: {\r\n        submit: {\r\n            createGame: {\r\n                pt: 'Criar jogo',\r\n                en: 'Create game'\r\n            },\r\n            playDemo: {\r\n                pt: 'Jogar',\r\n                en: 'Play'\r\n            }\r\n        },\r\n        download: {\r\n            label: DOWNLOAD_CONFIG_FILE,\r\n            comment: {\r\n                pt: 'Para jogar depois',\r\n                en: 'For play later'\r\n            }\r\n        }\r\n    },\r\n\r\n    diffImagesPerPairDialog: {\r\n        title: {\r\n            pt: 'Envio de arquivos diferentes por par',\r\n            en: 'Sending different files per pair'\r\n        },\r\n        instruction: {\r\n            pt: 'Exemplo de nome para arquivos de images para cada par',\r\n            en: 'Example name for image files for each pair'\r\n        },\r\n        pairName: {\r\n            pt: 'nome do par',\r\n            en: 'pair name'\r\n        },\r\n        imageId: {\r\n            pt: 'identificacao da imagem',\r\n            en: 'image identification'\r\n        }\r\n    },\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { ImagePreviewComponent } from './image/image-preview/image-preview.component';\r\nimport { InputLabelComponent } from './input-label/input-label.component';\r\nimport { InputNumberComponent } from './input-number/input-number.component';\r\nimport { InputTextComponent } from './input-text/input-text.component';\r\nimport { SelectMediaSrcTypeComponent } from './select/select-media-src-type/select-media-src-type.component';\r\nimport { SelectYesNoComponent } from './select/select-yes-no/select-yes-no.component';\r\nimport { SelectComponent } from './select/select/select.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { InputAudioUrlComponent } from './audio/input-audio-url/input-audio-url.component';\r\nimport { InputImageUrlComponent } from './image/input-image-url/input-image-url.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n        TranslateModule,\r\n    ],\r\n    declarations: [\r\n        InputLabelComponent,\r\n        InputNumberComponent,\r\n        InputTextComponent,\r\n        SelectComponent,\r\n        SelectMediaSrcTypeComponent,\r\n        SelectYesNoComponent,\r\n        ImagePreviewComponent,\r\n        UploadComponent,\r\n        InputAudioUrlComponent,\r\n        InputImageUrlComponent,\r\n    ],\r\n    exports: [\r\n        InputNumberComponent,\r\n        InputTextComponent,\r\n        SelectComponent,\r\n        SelectMediaSrcTypeComponent,\r\n        SelectYesNoComponent,\r\n        ImagePreviewComponent,\r\n        UploadComponent,\r\n        InputAudioUrlComponent,\r\n        InputImageUrlComponent,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class InputModule { }\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { FileUploadTypeEnum } from '../../../enums/file-upload-type.enum';\r\nimport { TranslationService } from '../../translation/translation.service';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\nimport { UPLOAD_TRANSLATION } from './upload-values';\r\n\r\n@Component({\r\n    selector: 'app-upload',\r\n    templateUrl: './upload.component.html',\r\n    styleUrls: ['./upload.component.scss', '../abstract-input.component.scss']\r\n})\r\nexport class UploadComponent extends AbstractInputComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = UPLOAD_TRANSLATION;\r\n\r\n    @Input() fileType: FileUploadTypeEnum = FileUploadTypeEnum.IMAGE;\r\n    @Input() multiple: boolean = false;\r\n    @Input() selectAllDir: boolean = false;\r\n\r\n    @Output() onClearInput = new EventEmitter();\r\n    @Output() onUpload = new EventEmitter();\r\n\r\n    accept: string;\r\n    btnTranslation: any;\r\n    singleChosedFileName: string;\r\n\r\n    @ViewChild('uploadInput') private _inputElem: ElementRef;\r\n    \r\n    private _numFiles: number = 0;\r\n    private _fileUploads: FileUpload[];\r\n\r\n    constructor(\r\n        private toastService: ToastService,\r\n        private translationService: TranslationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get numFiles() {\r\n        return this._numFiles;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._setAccept();\r\n        this.multiple = this.multiple || this.selectAllDir;\r\n        this.btnTranslation = (this.multiple ? \r\n            this.TRANSLATION.multiple.btn : \r\n            this.TRANSLATION.nonMultiple.btn\r\n        );\r\n    }\r\n\r\n    private _setAccept() {\r\n        this.accept = ({\r\n            [FileUploadTypeEnum.AUDIO]: 'audio/*',\r\n            [FileUploadTypeEnum.IMAGE]: 'image/*',\r\n            [FileUploadTypeEnum.JSON]:  'application/json',\r\n        })[this.fileType];\r\n    }\r\n\r\n    reset() {\r\n        this._fileUploads = [];\r\n        this._clearInput();\r\n        this.formControl?.reset();\r\n        this.singleChosedFileName = null;\r\n    }\r\n\r\n    private _clearInput() {\r\n        this._numFiles = 0;\r\n        this._inputElem.nativeElement.value = \"\";\r\n    }\r\n\r\n    openInputFile() {\r\n        this._inputElem.nativeElement.click();\r\n    }\r\n\r\n    onSelectFiles($event: any) {        \r\n        this._fileUploads = [];\r\n        let fileList: FileList = $event?.target?.files;\r\n\r\n        if ( !(fileList?.length) || fileList.item(0) == null ) {\r\n            this._clearInput();\r\n            this.onClearInput.emit();\r\n            return;\r\n        }\r\n        \r\n        let { files, typeOk } = this._extractFiles(fileList);\r\n        if (!typeOk) {\r\n            this._clearInput();\r\n            this._showOutAcceptErrorMsg();\r\n            return;\r\n        }\r\n\r\n        files.sort((a,b) => a.name.localeCompare(b.name))\r\n            .forEach(file => this._readFile(file));\r\n    }\r\n\r\n    private _extractFiles(fileList: FileList) {\r\n        this._numFiles = fileList.length ?? 0;\r\n        \r\n        const accept = this.accept.replace('*', '');\r\n        let files: File[] = [];\r\n        let typeOk = true;\r\n        let i = 0;\r\n        do {\r\n            let file = fileList.item(i++);\r\n            files.push(file);\r\n            typeOk = typeOk && file.type.startsWith(accept);\r\n        } while (typeOk && i < this._numFiles);\r\n        \r\n        return {\r\n            files: files, \r\n            typeOk: typeOk\r\n        };\r\n    }\r\n\r\n    private _showOutAcceptErrorMsg() {\r\n        let translation = (this.multiple ?\r\n            this.TRANSLATION.multiple.acceptErrorMsg :\r\n            this.TRANSLATION.nonMultiple.acceptErrorMsg\r\n        );\r\n        let fileTypeTranslation = this.translationService.getTranslation(this.TRANSLATION.fileType[this.fileType]);\r\n        let msg = this.translationService.getTranslation(translation, { \r\n            fileType: fileTypeTranslation,\r\n        });\r\n        this.toastService.error(msg, 7000);\r\n    }\r\n\r\n    private _readFile(file: File) {\r\n        const reader = new FileReader();\r\n        reader.onload = (fileReaderEvent: any) => {\r\n            this._fileUploads.push(new FileUpload(fileReaderEvent.target.result, file.name));\r\n            if (this._fileUploads.length == this._numFiles) {\r\n                this._finishReadFiles();\r\n            }\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    private _finishReadFiles() {\r\n        this.formControl?.setValue(this._fileUploads);\r\n        this.singleChosedFileName = this._fileUploads[0].filename;\r\n        this.onUpload.emit(this._fileUploads);\r\n    }\r\n\r\n}\r\n","<div class=\"input-file\">\r\n    <app-input-label *ngIf=\"label || labelTranslate\" [label]=\"label\" [labelTranslate]=\"labelTranslate\" \r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <div *ngIf=\"selectAllDir else regularInput\" >\r\n        <input type=\"file\" #uploadInput hidden (change)=\"onSelectFiles($event)\" [accept]=\"accept\" multiple webkitdirectory>\r\n    </div>\r\n    <ng-template #regularInput>\r\n        <input type=\"file\" #uploadInput hidden (change)=\"onSelectFiles($event)\" [accept]=\"accept\" [multiple]=\"multiple\">\r\n    </ng-template>\r\n\r\n    <div class=\"d-flex-row\">\r\n        <button mat-raised-button type=\"button\" color=\"primary\" (click)=\"openInputFile()\">\r\n            <mat-icon>upload</mat-icon>\r\n            {{ 'TRANSLATION' | translate: btnTranslation }}\r\n        </button>\r\n\r\n        <div *ngIf=\"numFiles == 0; else showChosenFiles\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.noFileChosen }}\r\n        </div>\r\n        <ng-template #showChosenFiles>\r\n            <div [ngSwitch]=\"multiple\">\r\n                <span *ngSwitchCase=\"false\">{{ singleChosedFileName }}</span>\r\n                <span *ngSwitchCase=\"true\">\r\n                    {{ numFiles }} {{ 'TRANSLATION' | translate: TRANSLATION.multiple.chosenFilesMsg }}\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GAME_BUILDER_TRANSLATION } from '../../../../game-builder-values';\nimport { CardUrlsInputComponent } from '../card-urls.component';\nimport { UrlPairConfig } from '../../url-pair-config.model';\n\n@Component({\n    selector: 'app-card-pair-url-inputs',\n    templateUrl: './card-pair-url-inputs.component.html',\n    styleUrls: []\n})\nexport class CardPairUrlInputsComponent implements OnInit, OnChanges {\n\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.cards;\n\n    @Input() parent: CardUrlsInputComponent;\n    @Input() index: number;\n    @Input() urlPairConfig: UrlPairConfig;\n\n    form: FormGroup;\n    pairOrdinal: number;\n\n    constructor(private fb: FormBuilder) { }\n    \n\n    ngOnInit(): void {\n        this.pairOrdinal = this.index + 1;\n        this._initForm();\n    }\n\n    private _initForm() {\n        this.form = this.fb.group({\n            image: new FormControl(null, Validators.required),\n        });\n\n        this._resetControls();\n        this.parent.addSubForm(this.form);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.urlPairConfig && !changes.urlPairConfig.firstChange) {\n            this._resetControls();\n        }\n    }\n\n    private _resetControls() {\n        if (this.urlPairConfig.addCustomAudioPerPair) {\n            this._addAudioControl();\n        } else {\n            this.form.removeControl('audio');\n        }\n\n        if (this.urlPairConfig.singleCardPerPair) {\n            this.form.removeControl('image2');\n            this.form.removeControl('audio2');\n        } else {\n            this.form.addControl('image2', new FormControl(null, Validators.required));\n            if (this.urlPairConfig.addCustomAudioPerPair) {\n                this.form.addControl('audio2', new FormControl(null, Validators.required));\n            }\n        }\n    }\n\n    private _addAudioControl() {\n        this.form.addControl('audio', new FormControl(null, Validators.required));\n    }\n\n    get firstPairImageLabelTranslation() {\n        return this.urlPairConfig?.singleCardPerPair ? \n            this.TRANSLATION.url.image.pairLink :\n            this.TRANSLATION.url.image.getPairLink(1)\n    }\n\n    get firstPairAudioLabelTranslation() {\n        return this.urlPairConfig?.singleCardPerPair ? \n            this.TRANSLATION.url.audio.pairLink :\n            this.TRANSLATION.url.audio.getPairLink(1)\n    }\n\n    onInsertUrl($url: string) {\n        this.parent.onInsertUrl($url, this.index);\n    }\n\n    deleteImgUrl() {\n        this.parent.deleteUrl(this.index);\n    }\n\n}\n","<div class=\"d-flex-col\">\n    <div class=\"mt-2 fst-italic fw-bold\">{{ 'TRANSLATION' | translate: TRANSLATION.pair }}{{pairOrdinal}}</div>\n\n    <div *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"mt-2 fst-italic\">{{ 'TRANSLATION' | translate: TRANSLATION.getCardPair(1) }}{{pairOrdinal}}</div>\n    </div>\n\n    <div class=\"d-flex-row\">\n        <div class=\"form-item\">\n            <app-input-image-url label=\"{{ 'TRANSLATION' | translate: firstPairImageLabelTranslation }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"image\">\n            </app-input-image-url>\n        </div>\n    \n        <div class=\"form-item\" *ngIf=\"urlPairConfig?.addCustomAudioPerPair\">\n            <app-input-audio-url label=\"{{ 'TRANSLATION' | translate: firstPairAudioLabelTranslation }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"audio\">\n            </app-input-audio-url>\n        </div>\n    </div>\n\n    <div *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"mt-2 fst-italic\">{{ 'TRANSLATION' | translate: TRANSLATION.getCardPair(2) }}{{pairOrdinal}}</div>\n    </div>\n\n    <div class=\"d-flex-row\" *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"form-item\">\n            <app-input-image-url label=\"{{ 'TRANSLATION' | translate:TRANSLATION.url.image.getPairLink(2) }}{{pairOrdinal}}\" \n                [form]=\"form\" controlName=\"image2\">\n            </app-input-image-url>\n        </div>\n    \n        <div *ngIf=\"urlPairConfig.addCustomAudioPerPair\" class=\"form-item\">\n            <app-input-audio-url label=\"{{ 'TRANSLATION' | translate: TRANSLATION.url.audio.getPairLink(2) }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"audio2\">\n            </app-input-audio-url>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { TranslationService } from 'src/app/shared/components/translation/translation.service';\r\nimport { CardIdTypeEnum, CardIdTypeNameTranslations } from 'src/app/shared/enums/card-id-type.enum';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { Card } from 'src/app/shared/model/card';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GameConfig } from 'src/app/shared/model/game-config.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../game-builder-values';\r\nimport { GameBuilderComponent } from '../game-builder/game-builder.component';\r\nimport { GAME_BUILDER_FORM_INPUT } from './game-build-form-input.values';\r\n\r\n@Component({\r\n    selector: 'app-game-builder-form',\r\n    templateUrl: './game-builder-form.component.html',\r\n    styleUrls: ['./game-builder-form.component.scss']\r\n})\r\nexport class GameBuilderFormComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION;\r\n    readonly FORM_INPUT = GAME_BUILDER_FORM_INPUT;\r\n    readonly ACCEPT_IMG = [ 'image/png', 'image/jpeg' ];\r\n\r\n    @Input() parent: GameBuilderComponent;\r\n\r\n    form: FormGroup;\r\n    options: { [key: string]: any[] } = {};\r\n    flag: any = {};\r\n    submitBtnTranslation: any = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private gameService: GameService,\r\n        private toastService: ToastService,\r\n        private translationService: TranslationService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.flag = {\r\n            isDemo: this._isDemo\r\n        }\r\n        this._initForm();\r\n        this._setOptions();\r\n        this._setSubmitBtn();\r\n    }\r\n\r\n    private get _isDemo() {\r\n        return this.parent.isDemo;\r\n    }\r\n\r\n    private _initForm() {\r\n        this.form = this.fb.group({\r\n            title: new FormControl('Memory Game', Validators.required),\r\n            [this.FORM_INPUT.cardIdType]: new FormControl(CardIdTypeEnum.NUMBERS, Validators.required),\r\n\r\n            [this.FORM_INPUT.addBackgroundImg]: new FormControl(false, Validators.required),\r\n            [this.FORM_INPUT.backgroundImgSrc]: new FormControl(null),\r\n\r\n            [this.FORM_INPUT.card.singleCardPerPair]: new FormControl(null, Validators.required),\r\n            [this.FORM_INPUT.card.addCustomSoundsPerCard]: new FormControl(null, Validators.required),\r\n            [this.FORM_INPUT.card.cardSrcType]: new FormControl(null, Validators.required),\r\n        });\r\n\r\n        if (this._isDemo) {\r\n            this.form.addControl(this.FORM_INPUT.card.numPairs, new FormControl(null, Validators.required));\r\n            this.form.removeControl(this.FORM_INPUT.addBackgroundImg);\r\n            this.form.removeControl(this.FORM_INPUT.backgroundImgSrc);\r\n            this.form.removeControl(this.FORM_INPUT.card.addCustomSoundsPerCard);\r\n            this.form.removeControl(this.FORM_INPUT.card.cardSrcType);\r\n        }\r\n    }\r\n\r\n    private _setOptions() {\r\n        const cardIdTypeNameTranslations = CardIdTypeNameTranslations;\r\n        this.options = {\r\n            cardId: [\r\n                { \r\n                    id: CardIdTypeEnum.NUMBERS, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.NUMBERS] \r\n                },\r\n                { \r\n                    id: CardIdTypeEnum.ROW_COLUMN, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.ROW_COLUMN] \r\n                },\r\n                { \r\n                    id: CardIdTypeEnum.ICONS, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.ICONS]\r\n                },\r\n            ],\r\n        }\r\n\r\n        if (this._isDemo) {\r\n            this.options.numPairs = [];\r\n            ([4, 6, 8, 10]).forEach(value => this.options.numPairs.push({ id: value, label: value }));\r\n        }\r\n    }\r\n\r\n    private _setSubmitBtn() {\r\n        this.submitBtnTranslation = (this._isDemo ? \r\n            this.TRANSLATION.btn.submit.playDemo :\r\n            this.TRANSLATION.btn.submit.createGame\r\n        );\r\n    }\r\n\r\n    onChangeAddBackgroundImg($value: boolean) {\r\n        this.flag.addBackgroundImg = $value;\r\n        this.form.get(this.FORM_INPUT.backgroundImgSrc).setValue(null);\r\n    }\r\n\r\n    download() {\r\n        if (this._isDemo) {\r\n            return;\r\n        }\r\n        if (this._isInvalidForm) {\r\n            return this.toastService.showInvalidFormError();\r\n        }\r\n        this.gameService.downloadGameConfig( this._buildGameConfig() );\r\n    }\r\n\r\n    submit() {\r\n        if (this._isInvalidForm) {\r\n            return this.toastService.showInvalidFormError();\r\n        }\r\n\r\n        if (this._isDemo) {\r\n            this.gameService.create(this._buildGameConfigForDemo());\r\n            return;\r\n        }\r\n\r\n        this.gameService.create(this._buildGameConfig());\r\n    }\r\n\r\n    private get _isInvalidForm() {\r\n        this.form.markAllAsTouched();\r\n        return this.form.invalid;\r\n    }\r\n\r\n    private _buildGameConfig() {\r\n        let data = {...this.form.value };\r\n        let gameConfig = new GameConfig();\r\n        gameConfig.title = data.title.toUpperCase();\r\n        gameConfig.singleCardPerPair = data.singleCardPerPair;\r\n        gameConfig.addCustomSoundsPerCard = data.addCustomSoundsPerCard;\r\n        gameConfig.cardIdType = data.cardIdType;\r\n        gameConfig.backgroundImgSrc = data.backgroundImgSrc;\r\n\r\n        let srcType = data[this.FORM_INPUT.card.cardSrcType] as MediaSourceTypeEnum;\r\n        gameConfig.cards = (srcType == MediaSourceTypeEnum.UPLOAD ?\r\n            this._getCardsFromUploads(data) :\r\n            this._getCardsFromUrls(data)\r\n        );\r\n\r\n        return gameConfig;\r\n    }\r\n\r\n    private _getCardsFromUploads(formValue: any) {\r\n        let images = formValue[this.FORM_INPUT.card.upload.images] as FileUpload[];\r\n        let audios = formValue[this.FORM_INPUT.card.upload.audios] as FileUpload[];\r\n        return this.gameService.buildCardsFromValidUploads(images, audios);\r\n    }\r\n\r\n    private _getCardsFromUrls(formValue: any) {\r\n        let cardUrls = formValue[this.FORM_INPUT.card.urls] as any[];\r\n        let index=1;\r\n\r\n        let singleCardPerPair = formValue[this.FORM_INPUT.card.singleCardPerPair] as boolean;\r\n        if (singleCardPerPair) {\r\n            return cardUrls.map((obj) => {\r\n                let image = new FileUpload(obj.image, `imageUrl${index}`);\r\n                let audio = obj.audio ? new FileUpload(obj.audio, `audioUrl${index}`) : null;\r\n                index++;\r\n                return new Card(null, image, audio);\r\n            });\r\n        }\r\n\r\n        let cards: Card[] = [];\r\n        cardUrls.forEach((obj) => {\r\n            let image = new FileUpload(obj.image, `imageUrl${index}_card1`);\r\n            let audio = obj.audio ? new FileUpload(obj.audio, `audioUrl${index}_card1`) : null;\r\n            cards.push(new Card(null, image, audio));\r\n\r\n            let image2 = new FileUpload(obj.image2, `imageUrl${index}_card2`);\r\n            let audio2 = obj.audio ? new FileUpload(obj.audio2, `audioUrl${index}_card2`) : null;\r\n            cards.push(new Card(null, image2, audio2));\r\n\r\n            index++;\r\n        });\r\n        return cards;\r\n    }\r\n\r\n\r\n    private _buildGameConfigForDemo() {\r\n        let data = this.form.value;\r\n\r\n        let gameConfig = new GameConfig();\r\n        gameConfig.title = this.translationService.getTranslation(this.TRANSLATION.gameTitle.demo);\r\n        gameConfig.singleCardPerPair = data[this.FORM_INPUT.card.singleCardPerPair] as boolean;\r\n        gameConfig.addCustomSoundsPerCard = false;\r\n        gameConfig.cards = [];\r\n\r\n        const imageDirPath = 'assets/images/demo-game-cards';\r\n\r\n        let numPairs: number = data.numPairs;\r\n\r\n        for (let i = 1; i <= numPairs; i++) {\r\n            let filename = `num${i}_draw.png`;\r\n            let image = new FileUpload(`${imageDirPath}/draw/${filename}`, filename);\r\n            gameConfig.cards.push(new Card(null, image, null));\r\n        }\r\n\r\n        if (!gameConfig.singleCardPerPair) {\r\n            for (let i = 1; i <= numPairs; i++) {\r\n                let filename = `num${i}_word.png`;\r\n                let image = new FileUpload(`${imageDirPath}/words/${filename}`, filename);\r\n                gameConfig.cards.push(new Card(null, image, null));\r\n            }\r\n        }\r\n\r\n        return gameConfig;\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"flag.isDemo; else showFullBuilderForm\">\r\n    <form [formGroup]=\"form\">\r\n        <div class=\"form-line\">\r\n            <app-select class=\"form-item\" \r\n                label=\"{{ 'TRANSLATION' | translate: TRANSLATION.input.cardIdType }}\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.cardIdType\" [optionsTranslate]=\"options.cardId\">\r\n            </app-select>\r\n\r\n            <app-select-yes-no class=\"form-item\" \r\n                [labelTranslate]=\"TRANSLATION.input.singleCardPerPair\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.card.singleCardPerPair\">\r\n            </app-select-yes-no>\r\n\r\n            <app-select class=\"form-item\" \r\n                [labelTranslate]=\"TRANSLATION.input.numPairs\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.card.numPairs\" [options]=\"options.numPairs\">\r\n            </app-select>\r\n        </div>\r\n    </form>\r\n</div>\r\n<ng-template #showFullBuilderForm>\r\n    <form [formGroup]=\"form\">\r\n        <span class=\"subtitle color-primary\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.mainData }}\r\n        </span>\r\n\r\n        <div class=\"form-line\">\r\n            <app-input-text class=\"input-title\" \r\n                [labelTranslate]=\"TRANSLATION.input.gameTitle\" \r\n                [form]=\"form\" controlName=\"title\">\r\n            </app-input-text>\r\n    \r\n            <app-select class=\"input-card-id\" \r\n                [labelTranslate]=\"TRANSLATION.input.cardIdType\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.cardIdType\" [optionsTranslate]=\"options.cardId\">\r\n            </app-select>\r\n        </div>\r\n    \r\n        <mat-divider></mat-divider>\r\n        <span class=\"subtitle color-primary\">{{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.backgroundImg }}</span>\r\n        <div class=\"form-line\">\r\n            <app-select-yes-no [labelTranslate]=\"TRANSLATION.input.backgroundImg.add\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.addBackgroundImg\" (onChange)=\"onChangeAddBackgroundImg($event)\">\r\n            </app-select-yes-no>\r\n    \r\n            <div *ngIf=\"flag.addBackgroundImg\" class=\"form-item\">\r\n                <app-background-image-form [form]=\"form\" [controlName]=\"FORM_INPUT.backgroundImgSrc\"></app-background-image-form>\r\n            </div>\r\n        </div>\r\n    \r\n        <mat-divider></mat-divider>\r\n        <span class=\"subtitle color-primary\">{{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.cards }}</span>\r\n        <app-card-form [parent]=\"this\"></app-card-form>\r\n    </form>\r\n</ng-template>\r\n\r\n<div class=\"d-flex-row mt-4\">\r\n    <div>\r\n        <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"submit()\">\r\n            <mat-icon>sports_esports</mat-icon>\r\n            {{ 'TRANSLATION' | translate: submitBtnTranslation }} \r\n        </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"!flag.isDemo\" class=\"download-btn\">\r\n        <button mat-stroked-button type=\"button\" color=\"primary\" (click)=\"download()\">\r\n            <mat-icon>download</mat-icon>\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.btn.download.label }}\r\n        </button>\r\n\r\n        <span>{{ 'TRANSLATION' | translate: TRANSLATION.btn.download.comment }}</span>\r\n    </div>\r\n</div>\r\n","export enum MediaSourceTypeEnum {\r\n    UPLOAD = 1,\r\n    URL = 2,\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-abstract-input',\r\n    template: '',\r\n    styleUrls: []\r\n})\r\nexport class AbstractInputComponent {\r\n\r\n    @Input() labelTranslate: any;\r\n    @Input() label: string;\r\n    @Input() labelComment: string;\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n    @Input() flexDirectionRow = false;\r\n    @Input() disabled = false;\r\n\r\n    @Output() onChange = new EventEmitter<any>();\r\n    \r\n    protected _originalRequired: boolean;\r\n\r\n    protected _setOriginalRequired() {\r\n        this._originalRequired = this.isRequired;\r\n    }\r\n\r\n    protected checkForm() {\r\n        if(!this.form) {\r\n            this.controlName = 'model';\r\n\r\n            this.form = new FormGroup({\r\n                model: new FormControl()\r\n            });\r\n        }\r\n    }\r\n\r\n    get formControl() {\r\n        return this.form?.controls[this.controlName];\r\n    }\r\n\r\n    get isRequired() {\r\n        return this.formControl?.hasError('required') || false;\r\n    }\r\n\r\n    get isInvalid() {\r\n        return this.hasError('invalid');\r\n    }\r\n\r\n    hasError(errorKey: string) {\r\n        let formControl = this.formControl;\r\n        return !this.isRequired && (formControl?.invalid || formControl?.hasError(errorKey));\r\n    }\r\n\r\n    get inputClass() {\r\n        return {\r\n            'd-flex-row': this.flexDirectionRow,\r\n            'd-flex-col': !this.flexDirectionRow,\r\n        }\r\n    }\r\n\r\n    get getSelectValue() {\r\n        try {\r\n            return this.formControl.value;\r\n        } \r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected _setAsInvalid() {\r\n        let control = this.formControl;\r\n        control.setErrors({'invalid': true});\r\n        control.markAsTouched();\r\n    }\r\n\r\n    protected _setAsValidByOriginalRequired() {\r\n        let control = this.formControl;\r\n        control.setErrors(this._originalRequired ? {'required': true} : null);\r\n        control.markAsTouched();\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-card-image-filename-example-dialog',\r\n    templateUrl: './card-image-filename-example-dialog.component.html',\r\n    styleUrls: ['./card-image-filename-example-dialog.component.scss']\r\n})\r\nexport class CardImageFilenameExampleDialogComponent {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.diffImagesPerPairDialog;\r\n    readonly SEP = VALUES.upload.fileNameSeparator;\r\n    \r\n}\r\n","<div class=\"dialog-header\">\r\n    <div mat-dialog-title>\r\n        <div>{{ 'TRANSLATION' | translate: TRANSLATION.title }}</div>\r\n        <button mat-icon-button mat-dialog-close id=\"modal-close-btn\" \r\n            matTooltip=\"{{ 'CLOSE' | translate }}\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n    <div>\r\n        {{ 'TRANSLATION' | translate: TRANSLATION.instruction }}: \r\n        <i>[{{ 'TRANSLATION' | translate: TRANSLATION.pairName }}]</i>\r\n        {{SEP}}\r\n        <i>[{{ 'TRANSLATION' | translate: TRANSLATION.imageId }}]</i>\r\n    </div>\r\n    <div class=\"image-cont\">\r\n        <img src=\"assets/images/upload_diff_images_per_pair_example.png\" alt=\"Image\">\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { UploadComponent } from 'src/app/shared/components/input/upload/upload.component';\r\nimport { FileUploadTypeEnum } from 'src/app/shared/enums/file-upload-type.enum';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-game-builder',\r\n    templateUrl: './game-builder.component.html',\r\n    styleUrls: ['./game-builder.component.scss']\r\n})\r\nexport class GameBuilderComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION;\r\n    readonly CONFIG_FILE_TYPE = FileUploadTypeEnum.JSON;\r\n\r\n    pageTitleTranslation: any = {};\r\n    flag: { [key: string]: boolean } = {};\r\n\r\n    private _isDemo: boolean;\r\n    \r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private gameService: GameService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.data?.subscribe(data => {\r\n            this._isDemo = data.demo ?? false;\r\n            this.pageTitleTranslation = (this._isDemo ? \r\n                this.TRANSLATION.pageTitle.demoBuilder :\r\n                this.TRANSLATION.pageTitle.gameBuilder\r\n            );\r\n            this._initFlags();\r\n        });\r\n    }\r\n\r\n    private _initFlags() {\r\n        this.flag = {\r\n            isDemo: this._isDemo,\r\n            uploadConfigFile: false,\r\n            showForm: true\r\n        }\r\n    }\r\n\r\n    get isDemo() {\r\n        return this._isDemo;\r\n    }\r\n\r\n    onChangeUploadConfigFile($doUpload: boolean) {\r\n        this.flag.uploadConfigFile = $doUpload;\r\n        this.flag.showForm = !$doUpload;\r\n    }\r\n\r\n    onUploadConfigFile(uploadFiles: FileUpload[], uploadChild: UploadComponent) {\r\n        try {\r\n            this.gameService.createGameFromUploadedConfigFile(uploadFiles[0]);\r\n        } catch (error) {\r\n            uploadChild.reset();\r\n        }\r\n    }\r\n    \r\n}","<h1 class=\"color-primary\">{{ 'TRANSLATION' | translate: pageTitleTranslation }}</h1>\r\n\r\n<div class=\"main-instructions mb-4\">\r\n    <mat-label>{{ 'TRANSLATION' | translate: TRANSLATION.instruction }}</mat-label>\r\n\r\n    <div *ngIf=\"!flag.isDemo\" class=\"upload-config-file\">\r\n        <mat-checkbox (change)=\"onChangeUploadConfigFile($event.checked)\" color=\"primary\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.uploadConfigFile.checkboxLabel }}\r\n        </mat-checkbox>\r\n        <span class=\"instruction\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.uploadConfigFile.instruction }}\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<app-game-builder-form *ngIf=\"flag.showForm\" [parent]=\"this\"></app-game-builder-form>\r\n\r\n<div *ngIf=\"flag.uploadConfigFile\">\r\n    <app-upload #upload [fileType]=\"CONFIG_FILE_TYPE\" (onUpload)=\"onUploadConfigFile($event, upload)\"></app-upload>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\nimport { UrlPairConfig } from '../url-pair-config.model';\r\n\r\n@Component({\r\n    selector: 'app-card-urls',\r\n    templateUrl: './card-urls.component.html',\r\n    styleUrls: ['./card-urls.component.scss']\r\n})\r\nexport class CardUrlsInputComponent implements OnInit, OnChanges  {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.cards;\r\n    private readonly _CARD_URLS_INPUT = 'cardUrls';\r\n\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n    @Input() urlPairConfig: UrlPairConfig;\r\n\r\n    indices: number[];\r\n\r\n    private _formArray: FormArray;\r\n    private _numCardImages: number;\r\n    private _cardImageMap: { [key: string]: FileUpload } = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n    ) {\r\n        // define hear to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n        this.indices = [...Array(2).keys()];\r\n        this._formArray = fb.array([]);\r\n    }\r\n    \r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.indices = [...Array(this.urlPairConfig.numPairs).keys()];\r\n            this._cardImageMap = {};\r\n            this._numCardImages = this.urlPairConfig.numCards;\r\n            this.form.addControl(this._CARD_URLS_INPUT, this._formArray);\r\n        }, 1);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.form.removeControl(this._CARD_URLS_INPUT);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.urlPairConfig && !changes.urlPairConfig.firstChange) {\r\n            this.ngOnInit();\r\n        }\r\n    }\r\n\r\n    addSubForm(subForm: FormGroup) {\r\n        this._formArray.push(subForm);\r\n    }\r\n\r\n    getSubForm(index: number) {\r\n        return this._formArray?.controls[index] as FormGroup;\r\n    }\r\n\r\n    getUrl(pairIndex: number, imageIndex: number = 0): string {\r\n        try {\r\n            return this._cardImageMap[this._buildCardImageKey(pairIndex, imageIndex)]?.src;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _buildCardImageKey(pairIndex: number, imageIndex: number): string {\r\n        return `${pairIndex}${imageIndex}`;\r\n    }\r\n\r\n    onInsertUrl($url: string, pairIndex: number, imageIndex: number = 0) {\r\n        let key = this._buildCardImageKey(pairIndex, imageIndex);\r\n        this._cardImageMap[key] = new FileUpload($url, `pair${pairIndex+1}_image${imageIndex+1}`);\r\n        this._updateFormControl();\r\n    }\r\n\r\n    deleteUrl(pairIndex: number, imageIndex: number = 0) {\r\n        let sumControlName = 'url';\r\n        if (imageIndex == 1) {\r\n            sumControlName = 'url2';\r\n        }\r\n        this.getSubForm(pairIndex).get(sumControlName).reset();\r\n\r\n        let cardImageKey = this._buildCardImageKey(pairIndex, imageIndex);\r\n        delete this._cardImageMap[cardImageKey];\r\n\r\n        this._updateFormControl();\r\n    }\r\n\r\n    private _updateFormControl() {\r\n        let cardImages = Object.values(this._cardImageMap);\r\n        if (cardImages.length === this._numCardImages) {\r\n            this.form.get(this.controlName).setValue(cardImages);\r\n            return;\r\n        }\r\n\r\n        this.form.get(this.controlName).setValue(null);\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"indices\">\r\n    <div *ngFor=\"let i of (indices || [])\" class=\"card-box\">\r\n        <app-card-pair-url-inputs [parent]=\"this\" [index]=\"i\" [urlPairConfig]=\"urlPairConfig\"></app-card-pair-url-inputs>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AbstractInputComponent } from '../../abstract-input.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-select',\r\n    templateUrl: './select.component.html',\r\n    styleUrls: ['./select.component.scss', '../../abstract-input.component.scss']\r\n})\r\nexport class SelectComponent extends AbstractInputComponent implements OnInit, OnChanges {\r\n\r\n    readonly ALL_OPTION = 'all';\r\n    \r\n    @Input() options: any[] = [];\r\n    @Input() optionsTranslate: any[] = [];\r\n    @Input() valueAttribute: string = 'id';\r\n    @Input() labelAttribute: string = 'label';\r\n    @Input() multiple = false;\r\n    @Input() allOptionLabel: string;\r\n    @Input() useFullOptionAsValue = false;\r\n\r\n    @Output() onFinishedLoading = new EventEmitter<boolean>();\r\n\r\n    showLoadingOptionsError: boolean = false;\r\n\r\n    @ViewChild('allOption') \r\n    private _allOption: MatOption;\r\n    \r\n    private _allSelected = false;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.showLoadingOptionsError = false;\r\n        this.checkForm();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.options && changes.options.currentValue == null) {\r\n            this.showLoadingOptionsError = true;\r\n        }\r\n    }\r\n\r\n    getOptionValue(option: any): any {\r\n        if (this.useFullOptionAsValue) {\r\n            return option;\r\n        }\r\n        return option[this.valueAttribute];\r\n    }\r\n\r\n    onChangeSelection($eventValue: any) {\r\n        if (this.allOptionLabel && this.multiple) {\r\n            this._onChangeSelectionMultiple($eventValue);\r\n        }\r\n\r\n        this.onChange.emit($eventValue);\r\n    }\r\n\r\n    private _onChangeSelectionMultiple($eventValue: any[]) {\r\n        if (this._allSelected) {\r\n            this.formControl.setValue([]);\r\n            this._allSelected = false;\r\n            return;\r\n        }\r\n\r\n        this._allSelected = $eventValue.includes(this.ALL_OPTION) || \r\n            $eventValue.length == this.options.length;\r\n\r\n        if (this._allSelected) {\r\n            this.formControl.setValue(\r\n                this.options.map(option => option[this.valueAttribute])\r\n            );\r\n        }\r\n    }\r\n\r\n    get allOptionSelected() {\r\n        return this._allOption?.selected || false;\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <mat-select [formControl]=\"formControl\" [multiple]=\"multiple\" \r\n            (selectionChange)=\"onChangeSelection($event.value)\">\r\n\r\n            <mat-option #allOption *ngIf=\"allOptionLabel\" [value]=\"ALL_OPTION\">\r\n                {{ allOptionLabel }}\r\n            </mat-option>            \r\n            \r\n            <div *ngIf=\"optionsTranslate?.length; else showRegularOptions\">\r\n                <mat-option *ngFor=\"let option of optionsTranslate\" [value]=\"getOptionValue(option)\" \r\n                    [disabled]=\"multiple && allOptionSelected\">\r\n                    {{ 'TRANSLATION' | translate: option[labelAttribute] }}\r\n                </mat-option>\r\n            </div>\r\n            <ng-template #showRegularOptions>\r\n                <mat-option *ngFor=\"let option of options\" [value]=\"getOptionValue(option)\" \r\n                    [disabled]=\"multiple && allOptionSelected\">\r\n                    {{ option[labelAttribute] }}\r\n                </mat-option>\r\n            </ng-template>           \r\n        </mat-select>\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingOptionsError\" class=\"loading-options-error\">\r\n    <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n    Erro ao buscar opções para {{ label }}\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { InputModule } from 'src/app/shared/components/input/input.module';\r\nimport { BackgroundImageFormComponent } from './game-builder-form/background-image-form/background-image-form.component';\r\nimport { CardFormComponent } from './game-builder-form/cards/card-form/card-form.component';\r\nimport { CardImageFilenameExampleDialogComponent } from './game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component';\r\nimport { CardPairUrlInputsComponent } from './game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component';\r\nimport { CardUrlsInputComponent } from './game-builder-form/cards/card-urls/card-urls.component';\r\nimport { GameBuilderFormComponent } from './game-builder-form/game-builder-form.component';\r\nimport { GameBuilderComponent } from './game-builder/game-builder.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameBuilderComponent,\r\n    },\r\n    {\r\n        path: 'demo',\r\n        component: GameBuilderComponent,\r\n        data: { demo: true }\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GameBuilderComponent,\r\n        GameBuilderFormComponent,\r\n        BackgroundImageFormComponent,\r\n        CardFormComponent,\r\n        CardImageFilenameExampleDialogComponent,\r\n        CardUrlsInputComponent,\r\n        CardPairUrlInputsComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MaterialModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        TranslateModule,\r\n        InputModule,\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class GameBuilderModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-image-url',\n    templateUrl: './input-image-url.component.html',\n    styleUrls: ['./input-image-url.component.scss']\n})\nexport class InputImageUrlComponent implements OnInit {\n\n    @Input() labelTranslate: any;\n    @Input() label: string;\n    @Input() form: FormGroup;\n    @Input() controlName: string;\n\n    formControl: AbstractControl;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.formControl = this.form.get(this.controlName);\n    }\n\n    deleteUrl() {\n        this.formControl.setValue(null);\n    }\n\n}\n","<div class=\"d-flex-row\">\n    <app-input-text  class=\"flex-8\" \n        [label]=\"label\" [form]=\"form\" [controlName]=\"controlName\">\n    </app-input-text>\n\n    <app-image-preview class=\"flex-4\" [src]=\"formControl?.value\" (onDelete)=\"deleteUrl()\"></app-image-preview>\n</div>","export const GAME_BUILDER_FORM_INPUT = {\r\n    cardIdType: 'cardIdType',\r\n    addBackgroundImg: 'addBackgroundImg',\r\n    backgroundImgSrc: 'backgroundImgSrc',\r\n    card: {\r\n        singleCardPerPair: 'singleCardPerPair',\r\n        addCustomSoundsPerCard: 'addCustomSoundsPerCard',\r\n        cardSrcType: 'cardSrcType',\r\n        // for srcType UPLOAD\r\n        upload: {\r\n            images: 'cardUploadImages',\r\n            audios: 'cardUploadAudios'\r\n        },\r\n        // for srcType URL        \r\n        numPairs: 'numPairs',\r\n        urls: 'cardUrls',\r\n    }\r\n}\r\n","<mat-label *ngIf=\"labelTranslate; else showRegularLabel\">\r\n    {{ 'TRANSLATION' | translate: labelTranslate }}\r\n    <span class=\"input-label-comment\" *ngIf=\"comment\">{{ comment }}</span>\r\n    <span class=\"input-label-required\"> {{ required ? '*' : '' }}</span>\r\n</mat-label>\r\n<ng-template #showRegularLabel>\r\n    {{ label }}\r\n    <span class=\"input-label-comment\" *ngIf=\"comment\">{{ comment }}</span>\r\n    <span class=\"input-label-required\"> {{ required ? '*' : '' }}</span>\r\n</ng-template>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-input-label',\r\n    templateUrl: './input-label.component.html',\r\n    styleUrls: ['./input-label.component.scss']\r\n})\r\nexport class InputLabelComponent {\r\n\r\n    @Input() labelTranslate: any;\r\n    @Input() label: string;\r\n    @Input() required = true;\r\n    @Input() comment: string;\r\n\r\n}\r\n","import { AbstractControl, Validators } from \"@angular/forms\";\r\n\r\nexport class FormUtil {\r\n\r\n    static setFormControlAsRequiredOrNot(control: AbstractControl, required: boolean) {\r\n        if (required) {\r\n            this.setFormControlAsRequired(control);\r\n        } else {\r\n            this.setFormControlAsNotRequired(control);\r\n        }\r\n    }\r\n\r\n    static setFormControlAsRequired(control: AbstractControl) {\r\n        control.reset();\r\n        control.setValidators(Validators.required);\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    static setFormControlAsNotRequired(control: AbstractControl) {\r\n        control.reset();\r\n        control.clearValidators();\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    static setFormControlAsInvalid(control: AbstractControl) {\r\n        control?.setErrors({'invalid': true});\r\n        control?.markAsTouched();\r\n    }\r\n\r\n    static setFormControlAsValid(control: AbstractControl, required: boolean) {\r\n        control?.setErrors(required ? {'required': true} : null);\r\n        control?.markAsTouched();\r\n    }\r\n\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FeedbackService } from 'src/app/services/feedback.service';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { FileUploadTypeEnum } from 'src/app/shared/enums/file-upload-type.enum';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { ITranslation } from 'src/app/shared/components/translation/translation.model';\r\nimport { FormUtil } from 'src/app/shared/util/form.util';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\nimport { GAME_BUILDER_FORM_INPUT } from '../../game-build-form-input.values';\r\nimport { GameBuilderFormComponent } from '../../game-builder-form.component';\r\nimport { CardImageFilenameExampleDialogComponent } from '../card-image-filename-example-dialog/card-image-filename-example-dialog.component';\r\nimport { UrlPairConfig } from '../url-pair-config.model';\r\n\r\nconst ANIMATION_TIMEOUT = 500;\r\nconst STATE = {\r\n    show: 'show',\r\n    hide: 'hide'\r\n};\r\n\r\n@Component({\r\n    selector: 'app-card-form',\r\n    templateUrl: './card-form.component.html',\r\n    styleUrls: ['./card-form.component.scss'],\r\n    animations: [\r\n        trigger('showContent', [\r\n            state(STATE.show, style({\r\n                overflow: 'hidden',\r\n                height: '*'\r\n            })),\r\n            state(STATE.hide, style({\r\n                overflow: 'hidden',\r\n                height: '0px',\r\n                opacity: '0'\r\n            })),\r\n            transition('*=>*', animate(`${ANIMATION_TIMEOUT}ms ease-in-out`))\r\n        ])\r\n    ]\r\n})\r\nexport class CardFormComponent implements OnInit {\r\n\r\n    readonly UploadFileType = FileUploadTypeEnum;\r\n    readonly FORM_INPUT = GAME_BUILDER_FORM_INPUT.card;\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input;\r\n    readonly FILENAME_SEP = VALUES.upload.fileNameSeparator;\r\n    readonly MIN_NUM_PAIRS = 2;\r\n\r\n    @Input() parent: GameBuilderFormComponent;\r\n\r\n    form: FormGroup;\r\n    stateUrlInputs = STATE.hide;\r\n    urlPairConfig: UrlPairConfig;\r\n    flag: { [key: string]: boolean };\r\n    invalidUploadMsg: ITranslation;\r\n\r\n    constructor(\r\n        private feedbackService: FeedbackService,\r\n        private gameService: GameService\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.parent.form;\r\n        this._initFlags();\r\n    }\r\n\r\n    private _initFlags() {\r\n        this.flag = {\r\n            isUpload: null,\r\n            showFilePatternWarning: false,\r\n            showAudioUpload: false,\r\n        }\r\n    }\r\n\r\n    private get _addCustomSoundsPerCard() {\r\n        return this.form.get(this.FORM_INPUT.addCustomSoundsPerCard).value as boolean;\r\n    }\r\n\r\n    private get _singleCardPerPair() {\r\n        return this.form.get(this.FORM_INPUT.singleCardPerPair).value as boolean;\r\n    }\r\n\r\n    get showFilePatternWarning(): boolean {\r\n        try {\r\n            return this.flag.isUpload && this._singleCardPerPair === false;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    changeAddCustomAudios($addCustomAudios: boolean) {\r\n        this.flag.showAudioUpload = (this.flag.isUpload && $addCustomAudios);\r\n        if (this.flag.showAudioUpload) {\r\n            this._addUploadAudioControl();\r\n        } else if (this.flag.isUpload) {\r\n            this.form.removeControl(this.FORM_INPUT.upload.audios);\r\n        }\r\n\r\n        this.receivePairConfigChange();\r\n    }\r\n\r\n    onChangeNumPairsForUrl($numPairs: number) {\r\n        if ($numPairs < this.MIN_NUM_PAIRS) {\r\n            return;\r\n        }\r\n        this.receivePairConfigChange();\r\n    }\r\n\r\n    receivePairConfigChange(numPairs?: number) {\r\n        let singleCardPerPair = this._singleCardPerPair;\r\n        let addCustomAudioPerPair = this._addCustomSoundsPerCard;\r\n        numPairs = numPairs ?? (this.form.get(this.FORM_INPUT.numPairs)?.value as number);\r\n\r\n        if (this.flag.isUpload || ([ singleCardPerPair, addCustomAudioPerPair, numPairs ]).some(value => value == null)) {\r\n            this._removeUrlInputs();\r\n            return;\r\n        }\r\n\r\n        this.urlPairConfig = new UrlPairConfig(singleCardPerPair, addCustomAudioPerPair, numPairs);\r\n        this.stateUrlInputs = STATE.show;\r\n    }\r\n\r\n    private _removeUrlInputs() {\r\n        this.stateUrlInputs = STATE.hide;\r\n        setTimeout(() => {\r\n            this.urlPairConfig = null;\r\n        }, ANIMATION_TIMEOUT);\r\n    }\r\n    \r\n\r\n    onChangeCardSrcType($value: MediaSourceTypeEnum) {\r\n        this.flag.isUpload = ($value === MediaSourceTypeEnum.UPLOAD);\r\n        this.flag.showAudioUpload = (this.flag.isUpload && this._addCustomSoundsPerCard);\r\n\r\n        if (this.flag.isUpload) {\r\n            this.form.addControl(this.FORM_INPUT.upload.images, new FormControl(null, Validators.required));\r\n            if (this.flag.showAudioUpload) {\r\n                this._addUploadAudioControl();\r\n            }           \r\n            this.form.removeControl(this.FORM_INPUT.numPairs);\r\n            this._removeUrlInputs();\r\n        } else {\r\n            this.form.removeControl(this.FORM_INPUT.upload.images);\r\n            this.form.removeControl(this.FORM_INPUT.upload.audios);\r\n            this.form.addControl(this.FORM_INPUT.numPairs, new FormControl(null, [Validators.required, Validators.min(this.MIN_NUM_PAIRS)]));\r\n        }\r\n    }\r\n\r\n    private _addUploadAudioControl() {\r\n        this.form.addControl(this.FORM_INPUT.upload.audios, new FormControl(null, Validators.required));\r\n    }\r\n    \r\n\r\n    receiveUploads(siblingControlName: string) {\r\n        let siblingFileUploadLen = (this.form.get(siblingControlName)?.value ?? []).length;\r\n        if (!siblingFileUploadLen) {\r\n            return;\r\n        }\r\n\r\n        const cardUploadInput = this.FORM_INPUT.upload;\r\n        let imageControl = this.form.get(cardUploadInput.images);\r\n        let audioControl = this.form.get(cardUploadInput.audios);\r\n\r\n        try {\r\n            this.gameService.validateCardUploads(imageControl.value, audioControl.value);\r\n            this.invalidUploadMsg = null;\r\n            FormUtil.setFormControlAsValid(imageControl, false);\r\n            FormUtil.setFormControlAsValid(audioControl, false);\r\n        } \r\n        catch (error) {\r\n            this.invalidUploadMsg = this.feedbackService.handleError(error);\r\n            FormUtil.setFormControlAsInvalid(imageControl);\r\n            FormUtil.setFormControlAsInvalid(audioControl);\r\n        }\r\n    }\r\n\r\n    openExample() {\r\n        this.feedbackService.dialog.openCustomDialog(CardImageFilenameExampleDialogComponent, 80);\r\n    }\r\n\r\n}\r\n","<div class=\"form-line\">\r\n    <app-select-yes-no label=\"{{ 'TRANSLATION' | translate: TRANSLATION.singleCardPerPair }}\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.singleCardPerPair\" (onChange)=\"receivePairConfigChange()\">\r\n    </app-select-yes-no>\r\n\r\n    <app-select-yes-no label=\"{{ 'TRANSLATION' | translate: TRANSLATION.addCustomSoundsPerCard }}\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.addCustomSoundsPerCard\" (onChange)=\"changeAddCustomAudios($event)\">\r\n    </app-select-yes-no>\r\n\r\n    <app-select-media-src-type [form]=\"form\" [controlName]=\"FORM_INPUT.cardSrcType\" [multiple]=\"true\"\r\n        (onChange)=\"onChangeCardSrcType($event)\">\r\n    </app-select-media-src-type>\r\n</div>\r\n\r\n<div [ngSwitch]=\"flag.isUpload\" class=\"form-line mt-3 mb-3\">\r\n    <div *ngSwitchCase=\"true\" class=\"d-flex-col\">\r\n        <div class=\"upload-inputs\">\r\n            <app-upload\r\n                [fileType]=\"UploadFileType.IMAGE\" [labelTranslate]=\"TRANSLATION.cards.upload.pickDirPath\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.upload.images\" [selectAllDir]=\"true\"\r\n                (onUpload)=\"receiveUploads(FORM_INPUT.upload.audios)\">\r\n            </app-upload>\r\n\r\n            <app-upload *ngIf=\"flag.showAudioUpload\"\r\n                [fileType]=\"UploadFileType.AUDIO\" [labelTranslate]=\"TRANSLATION.cards.upload.pickDirPath\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.upload.audios\" [selectAllDir]=\"true\"\r\n                (onUpload)=\"receiveUploads(FORM_INPUT.upload.images)\">\r\n            </app-upload>\r\n        </div>\r\n        <div *ngIf=\"invalidUploadMsg\" class=\"mat-custom-error\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'TRANSLATION' | translate: invalidUploadMsg }}</strong>\r\n        </div>\r\n\r\n        <div *ngIf=\"showFilePatternWarning\" class=\"file-warning\">\r\n            <mat-icon>warning</mat-icon>\r\n            <span>\r\n                {{ 'TRANSLATION' | translate: TRANSLATION.cards.upload.diffImagesPerPair.warning }}\r\n                <a class=\"example-link\" (click)=\"openExample()\">\r\n                    {{ 'TRANSLATION' | translate: TRANSLATION.cards.upload.diffImagesPerPair.warningLink }}\r\n                </a>.\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <app-input-number *ngSwitchCase=\"false\"\r\n        [labelTranslate]=\"TRANSLATION.numPairs\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.numPairs\" [min]=\"MIN_NUM_PAIRS\"\r\n        (onChange)=\"onChangeNumPairsForUrl($event)\">\r\n    </app-input-number>\r\n</div>\r\n\r\n<div [@showContent]=\"stateUrlInputs\">\r\n    <div *ngIf=\"urlPairConfig\" class=\"form-line\">\r\n        <div class=\"form-item mt-3\">\r\n            <app-card-urls [form]=\"form\" [controlName]=\"FORM_INPUT.urls\" [urlPairConfig]=\"urlPairConfig\">\r\n            </app-card-urls>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UploadComponent } from 'src/app/shared/components/input/upload/upload.component';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { FormUtil } from 'src/app/shared/util/form.util';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-background-image-form',\r\n    templateUrl: './background-image-form.component.html',\r\n    styleUrls: ['./background-image-form.component.scss']\r\n})\r\nexport class BackgroundImageFormComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.backgroundImg;\r\n\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n\r\n    @ViewChild('upload') private _uploadChild: UploadComponent;\r\n\r\n    myControlName: { [key: string]: string } = {};\r\n    isUrl: boolean;\r\n    imgPreview: any;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.myControlName = {\r\n            srcType: `${this.controlName}SrcType`,\r\n            url:     `${this.controlName}Url`,\r\n            upload:  `${this.controlName}Upload`\r\n        }\r\n\r\n        this.form.addControl(this.myControlName.srcType, new FormControl(null, Validators.required));\r\n        this.form.addControl(this.myControlName.url, new FormControl());\r\n        this.form.addControl(this.myControlName.upload, new FormControl());\r\n\r\n        this.form.get(this.myControlName.upload).valueChanges.subscribe(value => this._onUpload(value));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        Object.values(this.myControlName).forEach(controlName => this.form.removeControl(controlName));\r\n    }\r\n\r\n    onChooseInputType($srcType: MediaSourceTypeEnum) {\r\n        this.isUrl = ($srcType == MediaSourceTypeEnum.URL);\r\n        this.imgPreview = null;\r\n        this.form.get(this.controlName).setValue(null);\r\n\r\n        if (this.isUrl) {\r\n            this._setFormControlAsRequired(this.myControlName.url);\r\n            this._setFormControlAsNotRequired(this.myControlName.upload);\r\n        } \r\n        else {\r\n            this._setFormControlAsRequired(this.myControlName.upload);\r\n            this._setFormControlAsNotRequired(this.myControlName.url);\r\n        }\r\n    }\r\n\r\n    private _setFormControlAsRequired(controlName: string) {\r\n        FormUtil.setFormControlAsRequired(this.form.get(controlName));\r\n    }\r\n\r\n    private _setFormControlAsNotRequired(controlName: string) {\r\n        FormUtil.setFormControlAsNotRequired(this.form.get(controlName));\r\n    }\r\n\r\n\r\n    private _onUpload(cardImages: FileUpload[]) {\r\n        if ( !(cardImages?.length) ) {\r\n            this._setImage(null);\r\n            return;\r\n        }\r\n        this._setImage(cardImages[0].src);\r\n    }\r\n\r\n    onInsertUrl($url: string) {\r\n        let value = $url;\r\n        if (!$url) {\r\n            value = null;\r\n        }\r\n        this._setImage(value);\r\n    }\r\n\r\n    private _setImage(src: string) {\r\n        this.imgPreview = src;\r\n        this.form.get(this.controlName).setValue(src);\r\n    }\r\n\r\n\r\n    deleteFile() {\r\n        ([\r\n            this.myControlName.url,\r\n            this.myControlName.upload\r\n        ])\r\n        .forEach(controlName => this.form.get(controlName).setValue(null));\r\n        \r\n        this._setImage(null);\r\n        this._uploadChild?.reset();\r\n    }\r\n\r\n}\r\n","<div class=\"input-image\">\r\n    <app-select-media-src-type [form]=\"form\" [controlName]=\"myControlName.srcType\"\r\n        (onChange)=\"onChooseInputType($event)\">\r\n    </app-select-media-src-type>\r\n\r\n    <div class=\"form-item\">\r\n        <div class=\"input-preview\">\r\n            <div [ngSwitch]=\"isUrl\" [ngClass]=\"isUrl ? 'form-item' : ''\">\r\n                <div *ngSwitchCase=\"true\">\r\n                    <app-input-text [labelTranslate]=\"TRANSLATION.url\" \r\n                        [form]=\"form\" [controlName]=\"myControlName.url\" (onChange)=\"onInsertUrl($event)\">\r\n                    </app-input-text>\r\n                </div>\r\n\r\n                <div *ngSwitchCase=\"false\">\r\n                    <app-upload #upload [labelTranslate]=\"TRANSLATION.upload\" \r\n                        [form]=\"form\" [controlName]=\"myControlName.upload\" (onClearInput)=\"deleteFile()\">\r\n                    </app-upload>\r\n                </div>\r\n            </div>\r\n\r\n            <app-image-preview [src]=\"imgPreview\" (onDelete)=\"deleteFile()\"></app-image-preview>\r\n        </div>\r\n    </div>\r\n</div>","import { FileUploadTypeEnum } from \"../../../enums/file-upload-type.enum\";\r\n\r\nexport const UPLOAD_TRANSLATION = {\r\n    noFileChosen: {\r\n        pt: 'Nenhum arquivo escolhido',\r\n        en: 'No file chosen'\r\n    },\r\n\r\n    nonMultiple: {\r\n        btn: {\r\n            pt: 'Escolher arquivo',\r\n            en: 'Choose file'\r\n        },\r\n        acceptErrorMsg: {\r\n            pt: 'O arquivo selecionado não é {{ fileType }}. Tente novamente!',\r\n            en: 'The selected file is not {{ fileType }}. Try again!'\r\n        }\r\n    },\r\n\r\n    multiple: {\r\n        btn: {\r\n            pt: 'Escolher arquivos',\r\n            en: 'Choose files'\r\n        },\r\n        acceptErrorMsg: {\r\n            pt: 'Pelo menos 1 arquivo da pasta selecionada não é {{ fileType }}. Tente novamente!',\r\n            en: 'At least 1 file in the selected folder is not {{ fileType }} type. Try again!'\r\n        },\r\n        chosenFilesMsg: {\r\n            pt: 'arquivo(s)',\r\n            en: 'file(s)'\r\n        }\r\n    },\r\n\r\n    fileType: {\r\n        [FileUploadTypeEnum.IMAGE]: {\r\n            pt: 'uma imagem',\r\n            en: 'an image'\r\n        },\r\n        [FileUploadTypeEnum.AUDIO]: {\r\n            pt: 'um áudio',\r\n            en: 'an audio'\r\n        },\r\n        [FileUploadTypeEnum.JSON]: {\r\n            pt: 'válido',\r\n            en: 'valid'\r\n        },\r\n    },\r\n    \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectComponent } from '../select/select.component';\r\n\r\n@Component({\r\n    selector: 'app-select-yes-no',\r\n    templateUrl: './select-yes-no.component.html',\r\n    styleUrls: []\r\n})\r\nexport class SelectYesNoComponent extends SelectComponent implements OnInit {\r\n\r\n    ngOnInit(): void {\r\n        this.options = [\r\n            { \r\n                id: true, \r\n                label: { \r\n                    pt: 'Sim', \r\n                    en: 'Yes' \r\n                } \r\n            },\r\n            { \r\n                id: false, \r\n                label: {\r\n                    pt: 'Não',\r\n                    en: 'No'\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n}\r\n","<app-select [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n    [form]=\"form\" [controlName]=\"controlName\" [optionsTranslate]=\"options\" \r\n    (onChange)=\"onChangeSelection($event)\">\r\n</app-select>","export const SRC_TYPE_TRANSLATION_VALUES = {\r\n\r\n    nonMultiple: {\r\n        input: {\r\n            pt: 'Como deseja inserir a imagem?',\r\n            en: 'How do you want to insert the image?'\r\n        },\r\n        options: {\r\n            url: {\r\n                pt: 'Link da imagem',\r\n                en: 'Image link'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivo',\r\n                en: 'Upload image file'\r\n            }\r\n        },\r\n    },\r\n\r\n    multiple: {\r\n        input: {\r\n            pt: 'Como deseja inserir as cartas (imagens e sons)?',\r\n            en: 'How do you want to insert the cards (images and sounds)?'\r\n        },\r\n        options: {\r\n            url: {\r\n                pt: 'Links (URLs)',\r\n                en: 'Links (URLs)'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivos',\r\n                en: 'Upload files'\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-number',\r\n    templateUrl: './input-number.component.html',\r\n    styleUrls: [\r\n        './input-number.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputNumberComponent extends AbstractInputComponent {\r\n\r\n    @Input() min: number = null;\r\n    @Input() max: number = null;\r\n\r\n    sendValueChange($event: any) {\r\n        let value: number = $event?.target?.valueAsNumber;\r\n        if(isNaN(value)) {\r\n            value = null;\r\n        }\r\n        this.onChange.emit(value);\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label *ngIf=\"label || labelTranslate\" \r\n        [label]=\"label\" [labelTranslate]=\"labelTranslate\" [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput \r\n            type=\"number\" \r\n            [formControl]=\"formControl\" \r\n            (change)=\"sendValueChange($event)\" \r\n            [min]=\"min\"\r\n            [max]=\"max\"\r\n        >\r\n    \r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min!=null && formControl.hasError('min')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MIN_VALUE' | translate: { min: min } }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"max!=null && formControl.hasError('max')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MAX_VALUE' | translate: { max: max } }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min==null && max==null && isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.INVALID' | translate }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-audio-url',\n    templateUrl: './input-audio-url.component.html',\n    styleUrls: ['./input-audio-url.component.scss']\n})\nexport class InputAudioUrlComponent implements OnInit {\n\n    @Input() labelTranslate: any;\n    @Input() label: string;\n    @Input() form: FormGroup;\n    @Input() controlName: string;\n\n    flag: { [key: string]: boolean } = {};\n\n    private _audio: HTMLAudioElement;\n\n    ngOnInit(): void {\n        this.flag = {\n            hasValue: false,\n            isPlaying: false,\n        }\n\n        this._audio = new Audio();\n\n        this.form.get(this.controlName).valueChanges.subscribe(value => {\n            this.flag.hasValue = !!value;\n            this._audio.src = value;\n            if (value) {\n                this._audio.load();\n            }\n        });\n    }\n\n    playPause() {\n        this.flag.isPlaying = !this.flag.isPlaying;\n        if (this.flag.isPlaying) {\n            this._audio.play();\n        } else {\n            this._audio.pause();\n        }\n    }\n\n    delete() {\n        this.flag.isPlaying = false;\n        this.form.get(this.controlName).setValue(null);\n    }\n\n}\n","<div class=\"d-flex-row\">\n    <app-input-text class=\"flex-8\" [labelTranslate]=\"labelTranslate\" [label]=\"label\" [form]=\"form\" [controlName]=\"controlName\"></app-input-text>\n    \n    <div class=\"flex-4\">\n        <div class=\"d-flex-row mt-2\">\n            <button mat-icon-button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"playPause()\" [disabled]=\"!flag.hasValue\">\n                <mat-icon>{{flag.isPlaying ? 'pause' : 'play_arrow'}}</mat-icon>\n            </button>\n    \n            <button mat-icon-button mat-stroked-button color=\"accent\" type=\"button\" (click)=\"delete()\" [disabled]=\"!flag.hasValue\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </div>        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SelectComponent } from '../select/select.component';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { SRC_TYPE_TRANSLATION_VALUES } from './select-media-src-type-values';\r\n\r\n@Component({\r\n    selector: 'app-select-media-src-type',\r\n    templateUrl: './select-media-src-type.component.html',\r\n    styleUrls: []\r\n})\r\nexport class SelectMediaSrcTypeComponent extends SelectComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = SRC_TYPE_TRANSLATION_VALUES;\r\n\r\n    ngOnInit(): void {\r\n        let translation = (this.multiple ? \r\n            this.TRANSLATION.multiple : \r\n            this.TRANSLATION.nonMultiple\r\n        );\r\n\r\n        this.labelTranslate = translation.input;\r\n        \r\n        this.options = [\r\n            { \r\n                id: MediaSourceTypeEnum.UPLOAD, \r\n                label: translation.options.upload\r\n            },\r\n            { \r\n                id: MediaSourceTypeEnum.URL, \r\n                label: translation.options.url\r\n            },\r\n        ];\r\n    }\r\n\r\n    // override\r\n    onChangeSelection($eventValue: any) {\r\n        this.onChange.emit($eventValue);\r\n    }\r\n\r\n}\r\n","<app-select [labelTranslate]=\"labelTranslate\" \r\n    [form]=\"form\" [controlName]=\"controlName\" [optionsTranslate]=\"options\" \r\n    (onChange)=\"onChangeSelection($event)\">\r\n</app-select>","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-text',\r\n    templateUrl: './input-text.component.html',\r\n    styleUrls: [\r\n        './input-text.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputTextComponent extends AbstractInputComponent {\r\n\r\n    @Input() placeholder = '';\r\n    @Input() minLength: number;\r\n    @Input() maxLength = 100;\r\n    @Input() title = '';\r\n    \r\n    clear() {\r\n        this.formControl.setValue(null);\r\n    }\r\n\r\n    sendChangeEvent($event) {\r\n        if( !($event?.target) ) {\r\n            return;\r\n        }\r\n        this.onChange.emit($event.target.value);\r\n    }\r\n\r\n    protected _eventTypeDeleteContent($event: any) {\r\n        return $event?.inputType === 'deleteContentBackward';\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput\r\n            type=\"text\"\r\n            [formControl]=\"formControl\"\r\n            [id]=\"controlName\"\r\n            [name]=\"controlName\"\r\n            [minLength]=\"minLength\"\r\n            [maxLength]=\"maxLength\"\r\n            [title]=\"title\"\r\n            [placeholder]=\"placeholder\"\r\n            [readonly]=\"disabled\"\r\n            (change)=\"sendChangeEvent($event)\"\r\n        >\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.INVALID' | translate }}</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"minLength && hasError('minLength')\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MIN_LENGTH' | translate: { minLength: minLength } }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","export class UrlPairConfig {\r\n    \r\n    constructor(\r\n        public singleCardPerPair: boolean,\r\n        public addCustomAudioPerPair: boolean,\r\n        public numPairs: number,\r\n    ) {}\r\n\r\n    get numCards(): number {\r\n        return this.numPairs * (this.singleCardPerPair ? 1 : 2);\r\n    }\r\n    \r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-image-preview',\n    templateUrl: './image-preview.component.html',\n    styleUrls: ['./image-preview.component.scss']\n})\nexport class ImagePreviewComponent {\n\n    @Input() src: string;\n\n    @Output() onDelete = new EventEmitter();\n\n    deleteFile() {\n        this.src = null;\n        this.onDelete.emit();\n    }\n\n}\n","<div *ngIf=\"src\" class=\"form-line\">\r\n    <img [src]=\"src\" alt=\"Image\">\r\n\r\n    <div class=\"delete-btn\">\r\n        <button mat-icon-button mat-stroked-button type=\"button\" (click)=\"deleteFile()\" \r\n            matTooltip=\"{{ 'DELETE_IMAGE' | translate }}\" color=\"accent\">\r\n            <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n"]}
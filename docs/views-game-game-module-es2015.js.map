{"version":3,"sources":["./src/app/views/game/game/game.component.ts","./src/app/views/game/game/game.component.html","./src/app/shared/components/dialog/dialog.module.ts","./src/app/views/game/game.module.ts","./src/app/views/game/memory-card/memory-card.component.ts","./src/app/views/game/memory-card/memory-card.component.html","./src/app/views/game/game/game-values.ts"],"names":[],"mappings":";;;;;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAEf;;;;;;;;;;;;;;ICMrC,qFAA4F;IAAlC,4VAAiC;IAC3F,4DAAkB;;;IAD0B,yEAAa;;ADJrE,gDAAgD;AAChD,MAAM,KAAK,GAAG;IACV,cAAc,EAAE,GAAG;IACnB,SAAS,EAAE,GAAG;IACd,UAAU,EAAE,EAAE;IACd,eAAe,EAAE,EAAE;CACtB;AAOM,MAAM,aAAa;IAWtB,YACY,MAAc,EACd,WAAwB,EACxB,aAA4B,EAC5B,kBAAsC;;QAHtC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAbzC,gBAAW,GAAG,6DAAgB,CAAC;QAExC,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,eAAU,GAAO,EAAE,CAAC;QACpB,cAAS,GAAQ,EAAE,CAAC;QAEZ,WAAM,GAAW,EAAE,CAAC;QACpB,aAAQ,GAAW,CAAC,CAAC;QAQzB,IAAI,CAAC,MAAM,2BAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,0CAAE,MAAM,0CAAE,KAAK,0CAAE,KAAK,mCAAI,EAAE,CAAC;IACjF,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,QAAQ;;QACJ,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,UAAU,IAAI,CAAC,OAAC,IAAI,CAAC,MAAM,0CAAE,MAAM,CAAC,EAAE;YACvC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;YAC1B,OAAO;SACV;QAED,IAAI,UAAU,CAAC,gBAAgB,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,OAAO,UAAU,CAAC,gBAAgB,GAAG,CAAC;SACjE;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,SAAS,CAAC,WAAmB;QACjC,IAAI,WAAW,GAAG,KAAK,CAAC,cAAc,EAAE;YACpC,IAAI,CAAC,UAAU,GAAG;gBACd,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;aACX;YACD,OAAO;SACV;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,GAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAC,CAAC,CAAC,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;QACxH,IAAI,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE,GAAG,UAAU,IAAI,EAAE,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAGD,QAAQ,CAAC,MAAM;QACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IAEO,aAAa;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC1C,EAAE,IAAI,EAAE,WAAW,EAAG,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;YAC3E,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,EAAE,CAC7E,CAAC;IACN,CAAC;IAED,aAAa;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACH,MAAM,QAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;YAClC,OAAO,IAAI,CAAC,aAAa,CAAC,8BAA8B,CACpD,QAAQ,EACR,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CACpF,CAAC;SACL;QACD,QAAQ,EAAE,CAAC;IACf,CAAC;IAEO,aAAa;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClE,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED,YAAY,CAAC,KAAW;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,GAAG,EAAE;YACL,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC9B,CAAC,EAAE,6EAAM,CAAC,sBAAsB,CAAC,CAAC;SACrC;IACL,CAAC;IAEO,kBAAkB;QACtB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC;YACtC,MAAM,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,WAAW;gBACtB,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,eAAe,CAAC;aAC7F;YACD,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC;YACvF,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;SACzC,CAAC,CAAC;IACP,CAAC;;0EA/GQ,aAAa;6FAAb,aAAa;6IAAb,oBAAgB;;QCtB7B,yEAA0E;QACtE,yEAAqB;QACjB,4EACoE;QAD5C,qIAAS,mBAAe,IAAC;;QAE7C,2EAAU;QAAA,uDAAoB;QAAA,4DAAW;QAC7C,4DAAS;QACT,4EAA+D;QAApC,qIAAS,aAAS,IAAC;QAC1C,2EAAU;QAAA,kEAAO;QAAA,4DAAW;QAAC,uDACjC;;QAAA,4DAAS;QACb,4DAAM;QAEN,0EAA0C;QACtC,0EAAmB;QACf,mIACkB;QACtB,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjBwB,mGAA2C;QAG7D,0DAA+D;QAA/D,wLAA+D;QACrD,0DAAoB;QAApB,mFAAoB;QAGD,0DACjC;QADiC,yLACjC;QAGe,0DAAsB;QAAtB,mFAAsB;QAEC,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;ACbtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEO;AACG;AACyC;;AAY3F,MAAM,YAAY;;wEAAZ,YAAY;2FAAZ,YAAY;+FANZ;YACL,4DAAY;YACZ,sEAAc;YACd,mEAAe;SAClB;mIAEQ,YAAY,mBARjB,8GAA2B,aAG3B,4DAAY;QACZ,sEAAc;QACd,mEAAe;;;;;;;;;;;;;ACbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEQ;AACc;AACZ;AACqB;AACxB;AACoB;AACpB;;;AAEtD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KAC3B;CACJ;AAgBM,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FAbV;YACL,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,kFAAiB;YACjB,sEAAc;YACd,mEAAe;YACf,2FAAY;SACf;mIAMQ,UAAU,mBAJf,kEAAa;QACb,sFAAmB,aATnB,4DAAY,gEAEZ,kFAAiB;QACjB,sEAAc;QACd,mEAAe;QACf,2FAAY;;;;;;;;;;;;;ACxBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAEP;;;;;;ICC5D,oEAA0D;;;IAAlC,mJAAsB;;;IAI9C,wEAAyF;;;IAAvC,kFAAkB;;;IAEhE,yEAAsC;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;ADC5D,MAAM,mBAAmB;IAU5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QANlC,aAAQ,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAME,CAAC;IAEjD,IAAI,SAAS;QACf,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEE,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,KAAK,qFAAc,CAAC,KAAK,CAAC,CAAC;QAErF,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CACxD,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAClG,CAAC;IACN,CAAC;IAED,OAAO;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;;sFA3BQ,mBAAmB;mGAAnB,mBAAmB;QCVhC,yEAAuE;QAApB,wIAAS,aAAS,IAAC;QAClE,yEAAwB;QACpB,yEAAmB;QACf,+GAA0D;QAC9D,4DAAM;QAEN,yEAA6B;QACzB,uHAAyF;QACzF,2MAEc;QAClB,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QAbY,yJAAgC;QAGhC,0DAAgB;QAAhB,gFAAgB;QAIZ,0DAAuB;QAAvB,qFAAuB;;;;;;;;;;;;;;ACP7C;AAAA;AAAO,MAAM,gBAAgB,GAAG;IAC5B,GAAG,EAAE;QACD,KAAK,EAAE;YACH,aAAa,EAAE;gBACX,EAAE,EAAE,eAAe;gBACnB,EAAE,EAAE,iBAAiB;aACxB;YACD,cAAc,EAAE;gBACZ,EAAE,EAAE,YAAY;gBAChB,EAAE,EAAE,gBAAgB;aACvB;SACJ;QAED,OAAO,EAAE;YACL,EAAE,EAAE,WAAW;YACf,EAAE,EAAE,UAAU;SACjB;KACJ;IAED,wBAAwB,EAAE;QACtB,EAAE,EAAE,2CAA2C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IAED,UAAU,EAAE;QACR,eAAe,EAAE;YACb,EAAE,EAAE,WAAW;YACf,EAAE,EAAE,kBAAkB;SACzB;QACD,SAAS,EAAE;YACP,EAAE,EAAE,yBAAyB;YAC7B,EAAE,EAAE,4BAA4B;SACnC;KACJ;CACJ","file":"views-game-game-module-es2015.js","sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { TranslationService } from 'src/app/shared/components/translation/translation.service';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { Card } from 'src/app/shared/model/card';\r\nimport { GAME_TRANSLATION } from './game-values';\r\n\r\n/* Values in pixels defined at component scss */\r\nconst STYLE = {\r\n    minWindowWidth: 768,\r\n    cardWidth: 100,\r\n    cardMargin: 10,\r\n    gapBetweenCards: 16, /* 1rem */\r\n}\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    templateUrl: './game.component.html',\r\n    styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_TRANSLATION;\r\n\r\n    backgroundImgSrc: any = '';\r\n    boardStyle: any= {};\r\n    soundIcon: any = {};\r\n\r\n    private _cards: Card[] = [];\r\n    private _numCols: number = 0;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private gameService: GameService,\r\n        private dialogService: DialogService,\r\n        private translationService: TranslationService,\r\n    ) {\r\n        this._cards = this.router.getCurrentNavigation()?.extras?.state?.cards ?? [];\r\n    }\r\n\r\n    get cards() {\r\n        return this._cards;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let gameConfig = this.gameService.config;\r\n        if (!gameConfig || !(this._cards?.length)) {\r\n            this.gameService.goHome();\r\n            return;\r\n        }\r\n\r\n        if (gameConfig.backgroundImgSrc) {\r\n            this.backgroundImgSrc = `url(${gameConfig.backgroundImgSrc})`;\r\n        }\r\n        this._setWidth(window.screen.width);\r\n        this._setSoundIcon();\r\n    }\r\n\r\n    private _setWidth(windowWidth: number) {\r\n        if (windowWidth < STYLE.minWindowWidth) {\r\n            this.boardStyle = {\r\n                board: {},\r\n                card: {}\r\n            }\r\n            return;\r\n        }\r\n\r\n        let numCards = this._cards.length;\r\n        this._numCols = ([5,4,3]).filter(n => numCards % n == 0)[0];\r\n        let boardWidth = ((STYLE.cardWidth + 2*STYLE.cardMargin) * this._numCols) + ((this._numCols-1) * STYLE.gapBetweenCards);\r\n        this.boardStyle = { width: `${boardWidth}px` };\r\n\r\n        this.gameService.setIdAsRowColumn(this._cards, this._numCols);\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize($event) {\r\n        this._setWidth($event.target.innerWidth);\r\n    }\r\n\r\n    private _setSoundIcon() {\r\n        this.soundIcon = (this.gameService.playSound ? \r\n            { icon: 'volume_up',  tooltip: this.TRANSLATION.btn.sound.turnOnTooltip } :\r\n            { icon: 'volume_off', tooltip: this.TRANSLATION.btn.sound.turnOffTooltip }\r\n        );\r\n    }\r\n\r\n    swapPlaySound() {\r\n        this.gameService.swapPlaySound();\r\n        this._setSoundIcon();\r\n    }\r\n\r\n    newGame() {\r\n        const callback = () => this._startNewGame();\r\n        if (!this.gameService.isGameFinished) {\r\n            return this.dialogService.openLiveGameConfirmationDialog(\r\n                callback, \r\n                this.translationService.getTranslation(this.TRANSLATION.startNewGameConfirmation)\r\n            );\r\n        }\r\n        callback();\r\n    }\r\n\r\n    private _startNewGame() {\r\n        let cards = this._cards;\r\n        this._cards = [];\r\n        setTimeout(() => {\r\n            this._cards = this.gameService.restartGame(cards);\r\n            this.gameService.setIdAsRowColumn(this._cards, this._numCols);\r\n        }, 1);\r\n    }\r\n\r\n    onChooseCard($card: Card) {\r\n        let win = this.gameService.onChooseCard($card);\r\n        if (win) {\r\n            setTimeout(() => {\r\n                this._openNewGameDialog();\r\n            }, VALUES.winNotificationTimeout);\r\n        }\r\n    }\r\n\r\n    private _openNewGameDialog() {\r\n        this.dialogService.openConfirmationDialog({\r\n            header: {\r\n                icon: 'mood',\r\n                iconColor: 'limegreen',\r\n                title: this.translationService.getTranslation(this.TRANSLATION.finishGame.congratulations)\r\n            },\r\n            bodyText: this.translationService.getTranslation(this.TRANSLATION.finishGame.playAgain),\r\n            okCallback: () => this._startNewGame()\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"board-background\" [style.background-image]=\"backgroundImgSrc\">\r\n    <div class=\"buttons\">\r\n        <button mat-icon-button (click)=\"swapPlaySound()\" color=\"primary\" \r\n            matTooltip=\"{{ 'TRANSLATION' | translate: soundIcon.tooltip }}\">\r\n            <mat-icon>{{ soundIcon.icon }}</mat-icon>\r\n        </button>\r\n        <button mat-stroked-button (click)=\"newGame()\" color=\"primary\">\r\n            <mat-icon>refresh</mat-icon> {{ 'TRANSLATION' | translate: TRANSLATION.btn.newGame }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"board\" [ngStyle]=\"boardStyle\">\r\n        <div class=\"cards\">\r\n            <app-memory-card *ngFor=\"let card of cards\" [card]=\"card\" (onSelect)=\"onChooseCard($event)\">\r\n            </app-memory-card>\r\n        </div>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ConfirmationDialogComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        TranslateModule,\r\n    ]\r\n})\r\nexport class DialogModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { DialogModule } from 'src/app/shared/components/dialog/dialog.module';\r\nimport { GameComponent } from './game/game.component';\r\nimport { MemoryCardComponent } from './memory-card/memory-card.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        FontAwesomeModule,\r\n        MaterialModule,\r\n        TranslateModule,\r\n        DialogModule,\r\n    ],\r\n    declarations: [\r\n        GameComponent,\r\n        MemoryCardComponent,\r\n    ],\r\n})\r\nexport class GameModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\nimport { CardIdTypeEnum } from 'src/app/shared/enums/card-id-type.enum';\nimport { Card } from 'src/app/shared/model/card';\n\n@Component({\n    selector: 'app-memory-card',\n    templateUrl: './memory-card.component.html',\n    styleUrls: ['./memory-card.component.scss']\n})\nexport class MemoryCardComponent implements OnInit {\n\n    @Input() card!: Card;\n\n    @Output() onSelect = new EventEmitter<Card>();\n\n    showFrontAsIcon: boolean;\n\n    private _isRotated: boolean;\n\n    constructor(private gameService: GameService) { }\n\n    get isRotated(): boolean {\n\t\treturn this._isRotated;\n\t}\n\n    ngOnInit(): void {\n        this.showFrontAsIcon = (this.gameService.config.cardIdType === CardIdTypeEnum.ICONS);\n\n        this.gameService.getCoveredCards().subscribe(coveredCards => \n            coveredCards.map(card => this._isRotated = (card.id == this.card.id) ? false : this._isRotated)\n        );\n    }\n\n    onClick() {\n        this._isRotated = true;\n        this.onSelect.emit(this.card);\n    }\n\n}\n","<div class=\"card\" [ngClass]=\"{rotated: isRotated}\" (click)=\"onClick()\">\r\n    <div class=\"card-inner\">\r\n        <div class=\"front\">\r\n            <img *ngIf=\"card.image\" [src]=\"card.image.src\" alt=\"card\">\r\n        </div>\r\n\r\n        <div class=\"back bg-primary\">\r\n            <fa-icon *ngIf=\"showFrontAsIcon; else showCardId\" [icon]=\"card.icon\" size=\"3x\"></fa-icon>\r\n            <ng-template #showCardId>\r\n                <div class=\"card-id-number quicksand\">{{ card.id }}</div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</div>","export const GAME_TRANSLATION = {\r\n    btn: {\r\n        sound: {\r\n            turnOnTooltip: {\r\n                pt: 'Desligar sons',\r\n                en: 'Turn off sounds'\r\n            },\r\n            turnOffTooltip: {\r\n                pt: 'Ligar sons',\r\n                en: 'Turn on sounds'\r\n            }\r\n        },\r\n\r\n        newGame: {\r\n            pt: 'Novo jogo',\r\n            en: 'New game'\r\n        }\r\n    },\r\n\r\n    startNewGameConfirmation: {\r\n        pt: 'Tem certeza que deseja iniciar novo jogo?',\r\n        en: 'Are you sure you want to start a new game?'\r\n    },\r\n\r\n    finishGame: {\r\n        congratulations: {\r\n            pt: 'Parabéns!',\r\n            en: 'Congratulations!'\r\n        },\r\n        playAgain: {\r\n            pt: 'Deseja jogar novamente?',\r\n            en: 'Do you want to play again?'\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}
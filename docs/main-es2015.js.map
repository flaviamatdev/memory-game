{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/app/services/audio.service.ts","./src/app/services/dialog.service.ts","./src/app/services/game.service.ts","./src/app/services/toast.service.ts","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog-data.ts","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog.component.html","./src/app/shared/components/dialog/dialog.module.ts","./src/app/shared/components/input/abstract-input.component.ts","./src/app/shared/components/input/input-label/input-label.component.ts","./src/app/shared/components/input/input-label/input-label.component.html","./src/app/shared/components/input/input-number/input-number.component.ts","./src/app/shared/components/input/input-number/input-number.component.html","./src/app/shared/components/input/input-text/input-text.component.ts","./src/app/shared/components/input/input-text/input-text.component.html","./src/app/shared/components/input/input.module.ts","./src/app/shared/components/input/select/select.component.ts","./src/app/shared/components/input/select/select.component.html","./src/app/shared/components/input/upload-image/upload-image.component.ts","./src/app/shared/components/input/upload-image/upload-image.component.html","./src/app/shared/constants/global.values.ts","./src/app/shared/constants/icons.ts","./src/app/shared/enums/audio.enum.ts","./src/app/shared/enums/card-position-id-type.enum.ts","./src/app/shared/model/card-image.model.ts","./src/app/shared/model/card.ts","./src/app/shared/model/game-config.model.ts","./src/app/shared/util/array.util.ts","./src/app/views/game/game.module.ts","./src/app/views/game/game/game.component.ts","./src/app/views/game/game/game.component.html","./src/app/views/game/memory-card/memory-card.component.ts","./src/app/views/game/memory-card/memory-card.component.html","./src/app/views/game/navbar/navbar.component.ts","./src/app/views/game/navbar/navbar.component.html","./src/app/views/home/game-config-form/game-config-form.component.ts","./src/app/views/home/game-config-form/game-config-form.component.html","./src/app/views/home/home.module.ts","./src/app/views/home/home/home.component.ts","./src/app/views/home/home/home.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: () => import('./views/home/home.module').then(m => m.HomeModule)\r\n    },\r\n    {\r\n        path: 'game',\r\n        loadChildren: () => import('./views/game/game.module').then(m => m.GameModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { GameModule } from './views/game/game.module';\nimport { HomeModule } from './views/home/home.module';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MaterialModule,\n        HomeModule,\n        GameModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    imports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ],\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ],\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AudioEnum } from '../shared/enums/audio.enum';\n\nconst AUDIO_DIR_PATH = 'assets/audio';\nconst AUDIO_SRC = {\n    [AudioEnum.CORRECT]: 'correct.mp3',\n    [AudioEnum.TURN_CARD]: 'page-turn.mp3',\n    [AudioEnum.WIN]: 'tada.mp3',\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioService {\n\n    private _audioMap: { [key: number]: HTMLAudioElement };\n    private _allLoaded: boolean = false;\n\n    load() {\n        if (this._allLoaded) {\n            return;\n        }\n        this._audioMap = {};\n        Object.entries(AUDIO_SRC).forEach(([key,src]) => {\n            this._audioMap[key] = this._load(src);\n        });\n        this._allLoaded = true;\n    }\n\n    private _load(src: string) {\n        let audio = new Audio(`${AUDIO_DIR_PATH}/${src}`);\n        audio.load();\n        return audio;\n    }\n\n    play(audioKey: AudioEnum) {\n        (this._audioMap[audioKey]).play();\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmationDialogData } from '../shared/components/dialog/confirmation-dialog/confirmation-dialog-data';\r\nimport { ConfirmationDialogComponent } from '../shared/components/dialog/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n    ) { }\r\n\r\n    private _getWidthAccordingScreen(widthPercent?: number) {\r\n        return (window.screen.width < 700 ? \r\n            90 : \r\n            widthPercent || 60\r\n        ) + '%';\r\n    }\r\n\r\n    openConfirmationDialog(data: ConfirmationDialogData) {\r\n        const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: this._getWidthAccordingScreen(40),\r\n            data: data\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(confirm => {\r\n            if (!confirm) {\r\n                return;\r\n            }\r\n            data.okCallback();\r\n        });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { delay } from \"rxjs/operators\";\r\nimport { VALUES } from '../shared/constants/global.values';\r\nimport { ICONS } from '../shared/constants/icons';\r\nimport { AudioEnum } from '../shared/enums/audio.enum';\r\nimport { Card } from '../shared/model/card';\r\nimport { CardImage } from '../shared/model/card-image.model';\r\nimport { GameConfig } from '../shared/model/game-config.model';\r\nimport { ArrayUtil } from '../shared/util/array.util';\r\nimport { AudioService } from './audio.service';\r\nimport { CardPositionIdTypeEnum } from '../shared/enums/card-position-id-type.enum';\r\n\r\nconst IMG_FILENAME_SEP = '_';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n    private _gameConfig: GameConfig;\r\n    private _pairCount: number = 0;\r\n    private _coverCards = new BehaviorSubject<Card[]>([]);\r\n    private _selectedCard1: Card = null;\r\n    private _selectedCard2: Card = null;\r\n\r\n    constructor(\r\n        library: FaIconLibrary,\r\n        private router: Router,\r\n        private audioService: AudioService,\r\n    ) {\r\n        library.addIcons(...ICONS);\r\n    }\r\n\r\n    get config() {\r\n        return this._gameConfig;\r\n    }\r\n\r\n    get isGameFinished() {\r\n        return this._pairCount == 0;\r\n    }\r\n\r\n    goHome() {\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    create(gameConfig: GameConfig) {\r\n        this._gameConfig = gameConfig;\r\n        this.audioService.load();\r\n        this.router.navigate(['game']);\r\n    }\r\n\r\n    getCards(): Card[] {\r\n        if (!this._gameConfig) {\r\n            this.goHome();\r\n            return [];\r\n        }\r\n\r\n        this._pairCount = this._gameConfig.numPairs;\r\n\r\n        if (!this._gameConfig.singleImgPerPair) {\r\n            return this._getCardsForDifferentImagesPerPair();\r\n        }\r\n        return this._getCardsForSameImagePerPair();\r\n    }\r\n\r\n    private _getCardsForSameImagePerPair(): Card[] {\r\n        let cards = this._gameConfig.cardImages.map((img, i) => new Card(`${i + 1}`, img));\r\n\r\n        return this._getFinalShuffledCardsWithId([\r\n            ...this._shuffleCards(cards),\r\n            ...this._shuffleCards(JSON.parse(JSON.stringify(cards)))\r\n        ]);\r\n    }\r\n\r\n    private _getFinalShuffledCardsWithId(cards: Card[]) {\r\n        cards.forEach((card, i) => card.id = i + 1);\r\n\r\n        if (this._gameConfig.cardPositionIdType === CardPositionIdTypeEnum.IMAGES) {\r\n            cards.forEach((card, i) => card.icon = ICONS[i]);\r\n        }\r\n\r\n        return cards;\r\n    }\r\n\r\n    private _getCardsForDifferentImagesPerPair(): Card[] {\r\n        // Espera-se que as imagens dos mesmos pares tenham o nome com o mesmo prefixo antes do SEP\r\n        let cardImages = this._gameConfig.cardImages;\r\n        let keys = this._getFilenamePrefixForDiffImagesPerPair(cardImages);\r\n        let cards: Card[] = [];\r\n\r\n        keys.forEach(key => {\r\n            cardImages\r\n                .filter(img => this._getCardImageFilenamePrefix(img) === key)\r\n                .forEach(img => cards.push(new Card(key, img)));\r\n        });\r\n\r\n        return this._getFinalShuffledCardsWithId(this._shuffleCards(cards));\r\n    }\r\n\r\n    private _getFilenamePrefixForDiffImagesPerPair(cardImages: CardImage[]) {\r\n        let filenames = cardImages.map(img => this._getCardImageFilenamePrefix(img));\r\n        let occurrences = ArrayUtil.getNumOccurrences(filenames);\r\n        let keys = Object.keys(occurrences);\r\n\r\n        if (keys.length !== filenames.length / 2 ||\r\n            Object.values(occurrences).some(count => count != 2)\r\n        ) {\r\n            throw new Error('Em caso de imagens diferentes por par, os nomes dos arquivos devem seguir o padrão informado');\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    private _getCardImageFilenamePrefix(cardImage: CardImage) {\r\n        return cardImage.filename.split(IMG_FILENAME_SEP)[0];\r\n    }\r\n\r\n    private _shuffleCards(cards: Card[]) {\r\n        for (let index = 0; index < cards.length; index++) {\r\n            const temp = cards[index];\r\n            const newIdx = Math.floor(Math.random() * cards.length);\r\n            cards[index] = cards[newIdx];\r\n            cards[newIdx] = temp;\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    onChooseCard(choosen: Card): boolean {\r\n        if (this.isGameFinished) {\r\n            return;\r\n        }\r\n\r\n        this.audioService.play(AudioEnum.TURN_CARD);\r\n\r\n        if (this._selectedCard1 === null) {\r\n            this._selectedCard1 = choosen;\r\n            return;\r\n        }\r\n\r\n        if (choosen.id === this._selectedCard1.id) {\r\n            return;\r\n        }\r\n\r\n        this._selectedCard2 = choosen;\r\n        if (this._selectedCard1.code == this._selectedCard2.code) {\r\n            this._pairCount--;\r\n            setTimeout(() => {\r\n                this.audioService.play(AudioEnum.CORRECT);\r\n            }, 100);\r\n        }\r\n        else {\r\n            this._coverCards.next([this._selectedCard1, this._selectedCard2]);\r\n        }\r\n\r\n        this._selectedCard1 = null;\r\n        this._selectedCard2 = null;\r\n\r\n        let win = this.isGameFinished;\r\n\r\n        setTimeout(() => {\r\n            if (win) {\r\n                this.audioService.play(AudioEnum.WIN);\r\n            }\r\n        }, VALUES.winNotificationTimeout / 2);\r\n\r\n        return win;\r\n    }\r\n\r\n    getCoveredCards() {\r\n        return this._coverCards.asObservable().pipe(delay(1200));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n    success(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'success', '#51A351', milliseconds);\r\n    }\r\n\r\n    error(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'error', '#BD362F', milliseconds);\r\n    }\r\n\r\n    info(message: string, milliseconds: number = 5000) {\r\n        this._showToast(message, 'info', '#389BB7', milliseconds);\r\n    }\r\n\r\n    warning(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'warning', '#F89406', milliseconds);\r\n    }\r\n\r\n    close() {\r\n        Swal.close();\r\n    }\r\n\r\n    showing() {\r\n        return Swal.isVisible();\r\n    }\r\n\r\n    private _showToast(message: string, type: SweetAlertIcon, backgroundColor: string, milliseconds: number) {\r\n        Swal.mixin({\r\n            toast: true,\r\n            position: 'top',\r\n            timer: milliseconds,\r\n            showConfirmButton: false,\r\n            showCloseButton: !milliseconds,\r\n            customClass : {\r\n                title: 'custom-toast-title'\r\n            },\r\n            background: backgroundColor,\r\n        })\r\n        .fire(message, '', type);\r\n    }\r\n\r\n    showInvalidFormError() {\r\n        this.error('Preencha todos os campos obrigatórios');\r\n    }\r\n    \r\n}\r\n","export class ConfirmationDialogData {\r\n    header: DialogHeader;\r\n    bodyText: string;\r\n    okCallback: Function;\r\n}\r\n\r\nexport class DialogHeader {\r\n    icon: string;\r\n    iconColor: string;\r\n    title: string;\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmationDialogData } from './confirmation-dialog-data';\r\n\r\n@Component({\r\n    selector: 'app-confirmation-dialog',\r\n    templateUrl: './confirmation-dialog.component.html',\r\n    styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent {\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData\r\n    ) { }\r\n\r\n}\r\n","<div class=\"dialog-header\">\r\n    <mat-icon [style.color]=\"data.header.iconColor\">{{ data.header.icon }}</mat-icon>\r\n    <div mat-dialog-title>{{ data.header.title }}</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n    <div class=\"text-center mb-2\">\r\n        {{ data.bodyText }}\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-stroked-button mat-dialog-close id=\"modal-cancel-btn\" color=\"primary\">\r\n        <mat-icon>thumb_down</mat-icon> Não\r\n    </button>\r\n\r\n    <button mat-raised-button mat-dialog-close=\"ok\" id=\"modal-ok-btn\" color=\"primary\">\r\n        <mat-icon>thumb_up</mat-icon> Sim\r\n    </button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n@NgModule({\n    declarations: [\n        ConfirmationDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        MaterialModule,\n    ]\n})\nexport class DialogModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-abstract-input',\r\n    template: '',\r\n    styleUrls: []\r\n})\r\nexport class AbstractInputComponent {\r\n\r\n    @Input() label: string;\r\n    @Input() labelComment: string;\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n    @Input() flexDirectionRow = false;\r\n    @Input() disabled = false;\r\n\r\n    @Output() onChange = new EventEmitter<any>();\r\n    \r\n    protected _originalRequired: boolean;\r\n\r\n    protected _setOriginalRequired() {\r\n        this._originalRequired = this.isRequired;\r\n    }\r\n\r\n    protected checkForm() {\r\n        if(!this.form) {\r\n            this.controlName = 'model';\r\n\r\n            this.form = new FormGroup({\r\n                model: new FormControl()\r\n            });\r\n        }\r\n    }\r\n\r\n    get formControl() {\r\n        return this.form.controls[this.controlName];\r\n    }\r\n\r\n    get isRequired() {\r\n        return this.formControl?.hasError('required') || false;\r\n    }\r\n\r\n    get isInvalid() {\r\n        return this.hasError('invalid');\r\n    }\r\n\r\n    hasError(errorKey: string) {\r\n        let formControl = this.formControl;\r\n        return !this.isRequired && (formControl.invalid || formControl.hasError(errorKey));\r\n    }\r\n\r\n    get inputClass() {\r\n        return {\r\n            'd-flex-row': this.flexDirectionRow,\r\n            'd-flex-col': !this.flexDirectionRow,\r\n        }\r\n    }\r\n\r\n    get getSelectValue() {\r\n        try {\r\n            return this.formControl.value;\r\n        } \r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected _setAsInvalid() {\r\n        this._setFormControlAsInvalid(this.formControl);\r\n    }\r\n\r\n    protected _setFormControlAsInvalid(control: AbstractControl) {\r\n        control.setErrors({'invalid': true});\r\n        control.markAsTouched();\r\n    }\r\n\r\n    protected _setAsValidByOriginalRequired() {\r\n        if (!this._originalRequired) {\r\n            this._setAsValid();\r\n            return;\r\n        }\r\n\r\n        this._setAsRequired();\r\n    }\r\n\r\n    protected _setAsValid() {\r\n        this._setFormControlAsValid(this.formControl);\r\n    }\r\n\r\n    protected _setFormControlAsValid(control: AbstractControl) {\r\n        control.setErrors(null);\r\n        control.markAsTouched();\r\n    }\r\n\r\n    protected _setAsRequired(){\r\n        this._setFormControlAsRequired(this.formControl);\r\n    }\r\n\r\n    protected _setFormControlAsRequired(control: AbstractControl){\r\n        control.setErrors({'required': true});\r\n        control.markAsTouched();\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-input-label',\r\n    templateUrl: './input-label.component.html',\r\n    styleUrls: ['./input-label.component.scss']\r\n})\r\nexport class InputLabelComponent {\r\n\r\n    @Input() label: string;\r\n    @Input() required = true;\r\n    @Input() comment: string;\r\n\r\n}\r\n","<mat-label>\r\n    {{ label }}\r\n    <span class=\"input-label-comment\" *ngIf=\"comment\">{{ comment }}</span>\r\n    <span class=\"input-label-required\"> {{ required ? '*' : '' }}</span>\r\n</mat-label>","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-number',\r\n    templateUrl: './input-number.component.html',\r\n    styleUrls: [\r\n        './input-number.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputNumberComponent extends AbstractInputComponent {\r\n\r\n    @Input() min: number = null;\r\n    @Input() max: number = null;\r\n\r\n    sendValueChange($event: any) {\r\n        let value: number = $event?.target?.valueAsNumber;\r\n        if(isNaN(value)) {\r\n            value = null;\r\n        }\r\n        this.onChange.emit(value);\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label *ngIf=\"label\" [label]=\"label\" [comment]=\"labelComment\" [required]=\"isRequired\"></app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput \r\n            type=\"number\" \r\n            [formControl]=\"formControl\" \r\n            (change)=\"sendValueChange($event)\" \r\n            [min]=\"min\"\r\n            [max]=\"max\"\r\n        >\r\n    \r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            Campo <strong>obrigatório</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min!=null && formControl.hasError('min')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            Valor mínimo é <strong>{{ min }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"max!=null && formControl.hasError('max')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            Valor máximo é <strong>{{ max }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min==null && max==null && isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            Valor inserido <strong>inválido</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-text',\r\n    templateUrl: './input-text.component.html',\r\n    styleUrls: [\r\n        './input-text.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputTextComponent extends AbstractInputComponent {\r\n\r\n    @Input() placeholder = '';\r\n    @Input() minLength: number;\r\n    @Input() maxLength = 100;\r\n    @Input() title = '';\r\n    \r\n    clear() {\r\n        this.formControl.setValue(null);\r\n    }\r\n\r\n    sendChangeEvent($event) {\r\n        if($event || !$event.target) {\r\n            return;\r\n        }\r\n\r\n        this.onChange.emit($event.target.value);\r\n    }\r\n\r\n    protected _eventTypeDeleteContent($event: any) {\r\n        return $event?.inputType === 'deleteContentBackward';\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [comment]=\"labelComment\" [required]=\"isRequired\"></app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput\r\n            type=\"text\"\r\n            [formControl]=\"formControl\"\r\n            [id]=\"controlName\"\r\n            [name]=\"controlName\"\r\n            [minLength]=\"minLength\"\r\n            [maxLength]=\"maxLength\"\r\n            [title]=\"title\"\r\n            [placeholder]=\"placeholder\"\r\n            [readonly]=\"disabled\"\r\n            (change)=\"sendChangeEvent($event)\"\r\n        >\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            Campo <strong>obrigatório</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            Valor inserido <strong>inválido</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"hasError('minLength')\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            Tamanho mínimo: <strong>{{ minLength }}</strong> caracteres\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputLabelComponent } from './input-label/input-label.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputNumberComponent } from './input-number/input-number.component';\nimport { InputTextComponent } from './input-text/input-text.component';\nimport { SelectComponent } from './select/select.component';\nimport { UploadImageComponent } from './upload-image/upload-image.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MaterialModule,\n    ],\n    declarations: [\n        InputLabelComponent,\n        InputNumberComponent,\n        InputTextComponent,\n        SelectComponent,\n        UploadImageComponent,\n    ],\n    exports: [\n        InputNumberComponent,\n        InputTextComponent,\n        SelectComponent,\n        UploadImageComponent,\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class InputModule { }\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-select',\r\n    templateUrl: './select.component.html',\r\n    styleUrls: ['./select.component.scss']\r\n})\r\nexport class SelectComponent extends AbstractInputComponent implements OnInit, OnChanges {\r\n\r\n    readonly ALL_OPTION = 'all';\r\n    \r\n    @Input() options: any[] = [];\r\n    @Input() valueAttribute: string = 'id';\r\n    @Input() labelAttribute: string = 'label';\r\n    @Input() multiple = false;\r\n    @Input() allOptionLabel: string;\r\n    @Input() useFullOptionAsValue = false;\r\n\r\n    @Output() onFinishedLoading = new EventEmitter<boolean>();\r\n\r\n    showLoadingOptionsError: boolean = false;\r\n\r\n    @ViewChild('allOption') \r\n    private _allOption: MatOption;\r\n    \r\n    private _allSelected = false;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.showLoadingOptionsError = false;\r\n        this.checkForm();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.options && changes.options.currentValue == null) {\r\n            this.showLoadingOptionsError = true;\r\n        }\r\n    }\r\n\r\n    getOptionValue(option: any): any {\r\n        if (this.useFullOptionAsValue) {\r\n            return option;\r\n        }\r\n        return option[this.valueAttribute];\r\n    }\r\n\r\n    onChangeSelection($eventValue: any) {\r\n        if (this.allOptionLabel && this.multiple) {\r\n            this._onChangeSelectionMultiple($eventValue);\r\n        }\r\n\r\n        this.onChange.emit($eventValue);\r\n    }\r\n\r\n    private _onChangeSelectionMultiple($eventValue: any[]) {\r\n        if (this._allSelected) {\r\n            this.formControl.setValue([]);\r\n            this._allSelected = false;\r\n            return;\r\n        }\r\n\r\n        this._allSelected = $eventValue.includes(this.ALL_OPTION) || \r\n            $eventValue.length == this.options.length;\r\n\r\n        if (this._allSelected) {\r\n            this.formControl.setValue(\r\n                this.options.map(option => option[this.valueAttribute])\r\n            );\r\n        }\r\n    }\r\n\r\n    get allOptionSelected() {\r\n        return this._allOption?.selected || false;\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [comment]=\"labelComment\" [required]=\"isRequired\"></app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <mat-select [formControl]=\"formControl\" [multiple]=\"multiple\" \r\n            (selectionChange)=\"onChangeSelection($event.value)\">\r\n\r\n            <mat-option #allOption *ngIf=\"allOptionLabel\" [value]=\"ALL_OPTION\">\r\n                {{ allOptionLabel }}\r\n            </mat-option>\r\n\r\n            <mat-option *ngFor=\"let option of options\" [value]=\"getOptionValue(option)\" \r\n                [disabled]=\"multiple && allOptionSelected\">\r\n                {{ option[labelAttribute] }}\r\n            </mat-option>\r\n        </mat-select>\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            Campo <strong>obrigatório</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingOptionsError\" class=\"loading-options-error\">\r\n    <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n    Erro ao buscar opções para {{ label }}\r\n</div>","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { AbstractInputComponent } from '../abstract-input.component';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { CardImage } from 'src/app/shared/model/card-image.model';\n\n@Component({\n    selector: 'app-upload-image',\n    templateUrl: './upload-image.component.html',\n    styleUrls: ['./upload-image.component.scss']\n})\nexport class UploadImageComponent extends AbstractInputComponent {\n\n    readonly ACCEPT_IMG = [ 'image/png', 'image/jpeg' ];\n\n    @Input() multiple: boolean = false;\n    @Input() selectAllDir: boolean = false;\n\n    @ViewChild('uploadInput') private _inputElem: ElementRef;\n    private _numFiles: number = 0;\n    private _images: CardImage[];\n\n    constructor(\n        private toastService: ToastService\n    ) {\n        super();\n    }\n\n\n    onSelectFiles($event: any) {\n        this._images = [];\n        let { files, allOk } = this._extractFiles($event?.target?.files);\n\n        if (!allOk) {\n            this._inputElem.nativeElement.value = \"\";\n            const accept = this.ACCEPT_IMG.map(x => x.replace('image/', '')).join(', ');\n            this.toastService.error(`Pelo menos 1 arquivo selecionado está fora dos formatos de imagem aceitos: ${accept}. Tente novamente!`);\n            return;\n        }\n\n        files.forEach(file => this._readFile(file));\n    }\n\n    private _extractFiles(fileList: FileList) {\n        this._numFiles = fileList?.length ?? 0;\n\n        let files: File[] = [];\n        let allOk = true;\n        let i = 0;\n        do {\n            let file = fileList.item(i++);\n            files.push(file);\n            allOk = allOk && this.ACCEPT_IMG.includes(file.type);\n        } while (allOk && i < this._numFiles);\n        \n        return {\n            files: files, \n            allOk: allOk\n        };\n    }\n\n    private _readFile(file: File) {\n        const reader = new FileReader();\n        reader.onload = (fileReaderEvent: any) => {\n            this._images.push(new CardImage(fileReaderEvent.target.result, file.name));\n            if (this._images.length == this._numFiles) {\n                this.formControl.setValue(this._images);\n            }\n        }\n        reader.readAsDataURL(file);\n    }\n\n}\n","<div class=\"input-file\">\n    <app-input-label *ngIf=\"label\" [label]=\"label\" [comment]=\"labelComment\" [required]=\"isRequired\"></app-input-label>\n\n    <div *ngIf=\"selectAllDir else regularInput\" >\n        <input type=\"file\" #uploadInput (change)=\"onSelectFiles($event)\" [accept]=\"ACCEPT_IMG\" multiple webkitdirectory>\n    </div>\n    <ng-template #regularInput>\n        <input type=\"file\" #uploadInput (change)=\"onSelectFiles($event)\" [accept]=\"ACCEPT_IMG\" [multiple]=\"multiple\">\n    </ng-template>\n</div>","export const VALUES = {\r\n    winNotificationTimeout: 500,\r\n}\r\n","import {\r\n    faApple,\r\n    faEvernote,\r\n    faGulp,\r\n    faRedhat,\r\n    faTwitter\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n    faBug,\r\n    faCar,\r\n    faCircle,\r\n    faCloud,\r\n    faFutbol,\r\n    faGhost,\r\n    faHandPaper,\r\n    faHeart,\r\n    faHippo,\r\n    faMoon,\r\n    faPlane,\r\n    faRocket,\r\n    faSquareFull,\r\n    faSun,\r\n    faTree,\r\n    faTruckMonster\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const ICONS = [\r\n    faSun,\r\n    faCloud,\r\n    faMoon,\r\n    faHeart,\r\n    faCircle,\r\n    faSquareFull,\r\n    faApple,\r\n    faBug,\r\n    faTwitter,\r\n    faHippo,\r\n    faTree,\r\n    faCar,\r\n    faTruckMonster,\r\n    faPlane,\r\n    faRocket,\r\n    faFutbol,\r\n    faHandPaper,\r\n    faGhost,\r\n    faGulp,\r\n    faEvernote,\r\n    faRedhat,\r\n];\r\n","export enum AudioEnum {\r\n    CORRECT,\r\n    TURN_CARD,\r\n    WIN\r\n}\r\n","export enum CardPositionIdTypeEnum {\r\n    NUMBERS = 1,\r\n    IMAGES,\r\n    ROW_COLUMN\r\n}\r\n","export class CardImage {\r\n    constructor(\r\n        public base64: string,\r\n        public filename?: string\r\n    ) {}\r\n}\r\n","import { CardImage } from \"./card-image.model\";\n\nexport class Card {\n    id: number;\n    icon?: any;\n\n    constructor(\n        public code: string,\n        public img?: CardImage\n    ) {}\n}\n","import { CardPositionIdTypeEnum } from \"../enums/card-position-id-type.enum\";\r\nimport { CardImage } from \"./card-image.model\";\r\n\r\nexport class GameConfig {\r\n\r\n    title: string;\r\n    backgroundImgSrc?: string;\r\n    singleImgPerPair: boolean;\r\n    cardImages: CardImage[];\r\n    cardPositionIdType: CardPositionIdTypeEnum;\r\n\r\n    get numPairs(): number {\r\n        let numPairImages = this.cardImages.length;\r\n        if (!this.singleImgPerPair) {\r\n            numPairImages /= 2;\r\n        }\r\n        return numPairImages;\r\n    }\r\n\r\n}\r\n","export class ArrayUtil {\r\n\r\n    static equals<T>(arr1: T[], arr2: T[]): boolean {\r\n        return (\r\n            arr1.length === arr2.length &&\r\n            arr1.every(x => arr2.includes(x)) &&\r\n            arr2.every(x => arr1.includes(x))\r\n        );\r\n    }\r\n\r\n    static getNumOccurrences<T>(arr: T[]): any { /* keys: elements, values: num occurrences */\r\n        return arr.reduce(function (acc: any, curr) {\r\n            return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc\r\n        }, {});\r\n    }\r\n    \r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { DialogModule } from 'src/app/shared/components/dialog/dialog.module';\r\nimport { GameComponent } from './game/game.component';\r\nimport { MemoryCardComponent } from './memory-card/memory-card.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        FontAwesomeModule,\r\n        MaterialModule,\r\n        DialogModule,\r\n    ],\r\n    declarations: [\r\n        GameComponent,\r\n        MemoryCardComponent,\r\n        NavbarComponent\r\n    ],\r\n})\r\nexport class GameModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { CardPositionIdTypeEnum } from 'src/app/shared/enums/card-position-id-type.enum';\r\nimport { Card } from 'src/app/shared/model/card';\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    templateUrl: './game.component.html',\r\n    styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent implements OnInit {\r\n\r\n    title: string;\r\n    backgroundStyle: any = '';\r\n    cardRows: Card[][] = [];\r\n    grid: any;\r\n\r\n    private _boardDim: BoardDim;\r\n\r\n    constructor(\r\n        private gameService: GameService,\r\n        private dialogService: DialogService,\r\n        private toastService: ToastService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        let gameConfig = this.gameService.config;\r\n        if (!gameConfig) {\r\n            this._goHome();\r\n            return;\r\n        }\r\n\r\n        this.title = gameConfig.title.toUpperCase();\r\n        if (gameConfig.backgroundImgSrc) {\r\n            this.backgroundStyle = `url(${gameConfig.backgroundImgSrc})`;\r\n        }\r\n        this._setBoardDim(gameConfig.numPairs * 2);\r\n        this._startNewGame();\r\n    }\r\n\r\n    private _goHome() {\r\n        this.gameService.goHome();\r\n    }\r\n\r\n    private _setBoardDim(numCards: number) {\r\n        let numCols = (numCards % 5 == 0 ? 5 : 4);\r\n        let numRows = numCards / numCols\r\n        this._boardDim = new BoardDim(numRows, numCols);\r\n\r\n        if (this.gameService.config.cardPositionIdType == CardPositionIdTypeEnum.ROW_COLUMN) {\r\n            this.grid = {\r\n                rows:    [...Array(numRows).keys()].map(r => String.fromCharCode('A'.charCodeAt(0) + r)),\r\n                columns: [...Array(numCols).keys()].map(c => c+1)\r\n            }\r\n        }\r\n    }\r\n\r\n    private _startNewGame() {\r\n        this.cardRows = [];\r\n        let cards: Card[] = [];\r\n        try {\r\n            cards = this.gameService.getCards();\r\n        } catch (error) {\r\n            this.toastService.error(error?.message || 'Ops!');\r\n            return this._goHome();\r\n        }\r\n\r\n        const numCols = this._boardDim.numCols;\r\n        for (let r = 0; r < this._boardDim.numRows; r++) {\r\n            let idx = r*numCols;\r\n            this.cardRows.push(cards.slice(idx, idx+numCols));\r\n        }\r\n\r\n        this._printPairs();//.\r\n    }\r\n\r\n    // TODO remover\r\n    private _printPairs() {\r\n        let numCards = this.cardRows.length;\r\n        if (!numCards) {\r\n            return;\r\n        }\r\n\r\n        let indices: number[] = [];\r\n        let pairs: number[][] = [];\r\n\r\n        let cards: Card[] = [];\r\n        this.cardRows.forEach(rowCards => cards.push(...rowCards));\r\n\r\n        cards.forEach( (card, i) => {\r\n            if (indices.includes(i)) {\r\n                return;\r\n            }\r\n            let j = cards.findIndex((c,j) => c.code === card.code && j != i);\r\n            indices.push(...[i,j]);\r\n            pairs.push([i+1, j+1]);\r\n        })\r\n\r\n        console.log('pairs', pairs);\r\n    }\r\n\r\n\r\n    newGame() {\r\n        this._checkGameFinishedAndDoIt(\r\n            'Tem certeza que deseja iniciar novo jogo?',\r\n            () => this._startNewGame()\r\n        );\r\n    }\r\n\r\n    goHome() {\r\n        this._checkGameFinishedAndDoIt(\r\n            'Tem certeza que deseja sair do jogo?', \r\n            () => this._goHome()\r\n        );\r\n    }\r\n\r\n    private _checkGameFinishedAndDoIt(confirmQuestion: string, callback: Function) {\r\n        if (!this.gameService.isGameFinished) {\r\n            this._openConfirmationDialog(confirmQuestion, callback);\r\n            return;\r\n        }\r\n\r\n        callback();\r\n    }\r\n\r\n    private _openConfirmationDialog(confirmQuestion: string, callback: Function) {\r\n        this.dialogService.openConfirmationDialog({\r\n            header: {\r\n                icon: 'pan_tool',\r\n                iconColor: 'darkorange',\r\n                title: 'Espere! O jogo ainda não acabou!'\r\n            },\r\n            bodyText: confirmQuestion,\r\n            okCallback: callback\r\n        });\r\n    }\r\n\r\n    onChooseCard($card: Card) {\r\n        let win = this.gameService.onChooseCard($card);\r\n        if (win) {\r\n            setTimeout(() => {\r\n                this._openNewGameDialog();\r\n            }, VALUES.winNotificationTimeout);\r\n        }\r\n    }\r\n\r\n    private _openNewGameDialog() {\r\n        this.dialogService.openConfirmationDialog({\r\n            header: {\r\n                icon: 'mood',\r\n                iconColor: 'limegreen',\r\n                title: 'Parabéns!'\r\n            },\r\n            bodyText: 'Deseja jogar novamente?',\r\n            okCallback: () => this._startNewGame()\r\n        });\r\n    }\r\n\r\n}\r\n\r\nclass BoardDim {\r\n    constructor(\r\n        public numRows: number,\r\n        public numCols: number,\r\n    ) {}\r\n}\r\n","<app-navbar [parent]=\"this\"></app-navbar>\r\n\r\n<div class=\"board-background\" [style.background-image]=\"backgroundStyle\">\r\n    <div>\r\n        <div class=\"board\">\r\n            <div class=\"board-row\" *ngIf=\"grid\">\r\n                <div class=\"board-grid-space\"></div>\r\n                <div class=\"board-grid-header board-grid-col\" *ngFor=\"let col of grid.columns\">\r\n                    {{ col }}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"board-row\" *ngFor=\"let cardRow of cardRows; let r=index\">\r\n                <div *ngIf=\"grid\">\r\n                    <div class=\"board-grid-header board-grid-row\">\r\n                        {{ grid.rows[r] }}\r\n                    </div>\r\n                </div>\r\n\r\n                <app-memory-card *ngFor=\"let card of cardRow\" [card]=\"card\" (onSelect)=\"onChooseCard($event)\">\r\n                </app-memory-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\nimport { CardPositionIdTypeEnum } from 'src/app/shared/enums/card-position-id-type.enum';\nimport { Card } from 'src/app/shared/model/card';\n\n@Component({\n    selector: 'app-memory-card',\n    templateUrl: './memory-card.component.html',\n    styleUrls: ['./memory-card.component.scss']\n})\nexport class MemoryCardComponent implements OnInit {\n\n    readonly FRONT_ID_TYPE = CardPositionIdTypeEnum;\n\n    @Input() card!: Card;\n\n    @Output() onSelect = new EventEmitter<Card>();\n\n    frontIdType: CardPositionIdTypeEnum;\n\n    private _isRotated: boolean;\n\n    constructor(private gameService: GameService) { }\n\n    get isRotated(): boolean {\n\t\treturn this._isRotated;\n\t}\n\n    ngOnInit(): void {\n        this.frontIdType = this.gameService.config.cardPositionIdType;\n        this.gameService.getCoveredCards().subscribe(coveredCards => \n            coveredCards.map(card => this._isRotated = (card.id == this.card.id) ? false : this._isRotated)\n        );\n    }\n\n    onClick() {\n        this._isRotated = true;\n        this.onSelect.emit(this.card);\n    }\n\n}\n","<div class=\"card\" [ngClass]=\"{rotated: isRotated}\" (click)=\"onClick()\">\r\n    <div class=\"card-inner\">\r\n        <div  class=\"front\">\r\n            <img *ngIf=\"card.img\" [src]=\"card.img.base64\" alt=\"card\">\r\n        </div>\r\n\r\n        <div class=\"back bg-primary-2\">\r\n            <div [ngSwitch]=\"frontIdType\">\r\n                <div *ngSwitchCase=\"FRONT_ID_TYPE.NUMBERS\" class=\"card-id-number quicksand\">{{ card.id }}</div>\r\n                \r\n                <fa-icon *ngSwitchCase=\"FRONT_ID_TYPE.IMAGES\" [icon]=\"card.icon\" size=\"3x\"></fa-icon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { GameComponent } from '../game/game.component';\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: []\r\n})\r\nexport class NavbarComponent {\r\n\r\n    @Input() parent: GameComponent;\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n        <button mat-icon-button aria-label=\"Home\" matTooltip=\"Home\" (click)=\"parent.goHome()\">\r\n            <mat-icon>home</mat-icon>\r\n        </button>\r\n\r\n        <span class=\"title\">{{ parent.title }}</span>\r\n\r\n        <button mat-icon-button aria-label=\"New Game\" matTooltip=\"New Game\" (click)=\"parent.newGame()\">\r\n            <mat-icon>refresh</mat-icon>\r\n        </button>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { CardPositionIdTypeEnum } from 'src/app/shared/enums/card-position-id-type.enum';\r\nimport { GameConfig } from 'src/app/shared/model/game-config.model';\r\n\r\nenum InputTypeEnum {\r\n    MANUALLY = 1,\r\n    CONFIG_FILE = 2\r\n}\r\n\r\n@Component({\r\n    selector: 'app-game-config-form',\r\n    templateUrl: './game-config-form.component.html',\r\n    styleUrls: ['./game-config-form.component.scss']\r\n})\r\nexport class GameConfigFormComponent implements OnInit {\r\n\r\n    readonly INPUT_TYPE = InputTypeEnum;\r\n    readonly ACCEPT_IMG = [ 'image/png', 'image/jpeg' ];\r\n\r\n    form: FormGroup;\r\n    inputType = InputTypeEnum.MANUALLY;\r\n    numImagesPerPairOptions: any[] = [];\r\n    cardPositionOptions: any[] = [];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private gameService: GameService,\r\n        private toastService: ToastService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.onChangeInputType();\r\n    }\r\n\r\n    onChangeInputType() {\r\n        if (this.inputType == InputTypeEnum.CONFIG_FILE) {\r\n            this.form = this.fb.group({});\r\n            return;\r\n        }\r\n        \r\n        this._initForm();\r\n        this._setOptions();\r\n    }\r\n\r\n    private _initForm() {\r\n        this.form = this.fb.group({\r\n            title: new FormControl('Memory Game', Validators.required),\r\n            backgroundImgSrc: new FormControl(null),\r\n            singleImgPerPair: new FormControl(null, Validators.required),\r\n            cardImages: new FormControl(null, Validators.required),\r\n            cardPositionIdType: new FormControl(CardPositionIdTypeEnum.NUMBERS, Validators.required),\r\n        });\r\n    }\r\n\r\n    private _setOptions() {\r\n        this.cardPositionOptions = [\r\n            { id: CardPositionIdTypeEnum.NUMBERS, label: 'Números' },\r\n            { id: CardPositionIdTypeEnum.IMAGES, label: 'Imagens' },\r\n            { id: CardPositionIdTypeEnum.ROW_COLUMN, label: 'Linhas e colunas (Batalha Naval)' },\r\n        ]\r\n\r\n        this.numImagesPerPairOptions = [\r\n            { id: true, label: 'Sim' },\r\n            { id: false, label: 'Não' },\r\n        ]\r\n    }\r\n\r\n    onSelectConfigFile($event: any) {\r\n        let file: File = $event?.target?.files[0];\r\n        // TODO\r\n        debugger\r\n    }\r\n\r\n    submit() {\r\n        this.form.markAllAsTouched();\r\n        if (this.form.invalid) {\r\n            return this.toastService.showInvalidFormError();\r\n        }\r\n        this.gameService.create(Object.assign(new GameConfig(), this.form.value));\r\n    }\r\n\r\n}\r\n","<div>\r\n    <mat-label>Selecione como deseja inserir as informações para o jogo:</mat-label>\r\n\r\n    <div class=\"form-line mt-2 ms-4\">\r\n        <mat-radio-group aria-label=\"label\" [(ngModel)]=\"inputType\" (change)=\"onChangeInputType()\">\r\n            <mat-radio-button [value]=\"INPUT_TYPE.MANUALLY\" color=\"primary\">Inserir manualmente</mat-radio-button>\r\n            <mat-radio-button [value]=\"INPUT_TYPE.CONFIG_FILE\" color=\"primary\">Inserir arquivo de configuração</mat-radio-button>\r\n        </mat-radio-group>\r\n    </div>\r\n</div>\r\n\r\n<div [ngSwitch]=\"inputType\" class=\"mt-4\">\r\n    <div *ngSwitchCase=\"INPUT_TYPE.MANUALLY\">\r\n        <form *ngIf=\"form\" [formGroup]=\"form\">\r\n            <div class=\"form-line\">\r\n                <app-input-text label=\"Título\" [form]=\"form\" controlName=\"title\"></app-input-text>\r\n                <app-upload-image label=\"Imagem de fundo\" [form]=\"form\" controlName=\"backgroundImgSrc\"></app-upload-image>\r\n            </div>\r\n\r\n            <div class=\"form-line\">\r\n                <app-select label=\"Cada par possui imagens iguais?\" \r\n                    [form]=\"form\" controlName=\"singleImgPerPair\" [options]=\"numImagesPerPairOptions\">\r\n                </app-select>\r\n\r\n                <app-upload-image label=\"Pasta contendo as imagens das cartas\" \r\n                    [form]=\"form\" controlName=\"cardImages\" [selectAllDir]=\"true\">\r\n                </app-upload-image>\r\n            </div>\r\n\r\n            <div class=\"form-line\">\r\n                <app-select label=\"Tipo de identificação das posições das cartas\" \r\n                    [form]=\"form\" controlName=\"cardPositionIdType\" [options]=\"cardPositionOptions\">\r\n                </app-select>\r\n            </div>\r\n        </form>\r\n\r\n        <div>\r\n            <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"submit()\">Criar jogo</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"INPUT_TYPE.CONFIG_FILE\">\r\n        <input type=\"file\" #inputFile hidden (change)=\"onSelectConfigFile($event)\" accept=\"txt\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"inputFile.click()\">Selecionar arquivo</button>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterialModule } from 'src/app/material.module';\nimport { InputModule } from 'src/app/shared/components/input/input.module';\nimport { GameConfigFormComponent } from './game-config-form/game-config-form.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n]\n\n@NgModule({\n    declarations: [\n        HomeComponent, \n        GameConfigFormComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MaterialModule,\n        ReactiveFormsModule,\n        FormsModule,\n        InputModule,\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class HomeModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span class=\"title\">MEMORY GAME</span>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"content\">\n    <app-game-config-form></app-game-config-form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
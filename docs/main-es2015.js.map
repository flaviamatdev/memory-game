{"version":3,"sources":["./src/app/shared/components/translation/translation.module.ts","./src/app/services/toast.service.ts","./src/app/shared/model/game-config.model.ts","./src/app/shared/components/translation/translation-menu/translation-values.ts","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog-data.ts","./src/app/shared/components/translation/translation.service.ts","./src/environments/environment.ts","./src/app/services/game-config-file.service.ts","./src/app/services/dialog.service.ts","./src/app/shared/util/array.util.ts","./src/app/shared/components/dialog/dialog-values.ts","./src/app/shared/constants/icons.ts","./src/app/menu-values.ts","./src/app/shared/model/card.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/constants/error-message.values.ts","./src/app/services/game.service.ts","./src/app/shared/enums/card-id-type.enum.ts","./src/app/app.module.ts","./src/app/shared/error/game-config-error.ts","./src/app/shared/enums/audio.enum.ts","./src/app/shared/components/translation/translation-menu/translation-menu.component.ts","./src/app/shared/components/translation/translation-menu/translation-menu.component.html","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/components/dialog/confirmation-dialog/confirmation-dialog.component.html","./src/app/services/audio.service.ts","./src/app/services/feedback.service.ts","./src/app/shared/util/file.util.ts","./src/app/shared/constants/global.values.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/shared/model/file-upload.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { TranslationMenuComponent } from './translation-menu/translation-menu.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TranslationMenuComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        TranslateModule,\r\n    ],\r\n    exports: [\r\n        TranslationMenuComponent\r\n    ]\r\n})\r\nexport class TranslationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n    success(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'success', '#51A351', milliseconds);\r\n    }\r\n\r\n    error(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'error', '#BD362F', milliseconds);\r\n    }\r\n\r\n    info(message: string, milliseconds: number = 5000) {\r\n        this._showToast(message, 'info', '#389BB7', milliseconds);\r\n    }\r\n\r\n    warning(message: string, milliseconds = 5000) {\r\n        this._showToast(message, 'warning', '#F89406', milliseconds);\r\n    }\r\n\r\n    close() {\r\n        Swal.close();\r\n    }\r\n\r\n    showing() {\r\n        return Swal.isVisible();\r\n    }\r\n\r\n    private _showToast(message: string, type: SweetAlertIcon, backgroundColor: string, milliseconds: number) {\r\n        Swal.mixin({\r\n            toast: true,\r\n            position: 'top',\r\n            timer: milliseconds,\r\n            showConfirmButton: false,\r\n            showCloseButton: !milliseconds,\r\n            customClass : {\r\n                title: 'custom-toast-title'\r\n            },\r\n            background: backgroundColor,\r\n        })\r\n        .fire(message, '', type);\r\n    }\r\n\r\n    showInvalidFormError() {\r\n        this.error('Preencha todos os campos obrigatórios');\r\n    }\r\n    \r\n}\r\n","import { CardIdTypeEnum, CardIdTypeHelper } from \"../enums/card-id-type.enum\";\r\nimport { Card } from \"./card\";\r\nimport { FileUpload } from \"./file-upload.model\";\r\n\r\nexport class GameConfig {\r\n\r\n    title: string;\r\n    cardIdType: CardIdTypeEnum;\r\n    backgroundImgSrc?: string;\r\n    singleCardPerPair: boolean;\r\n    addCustomSoundsPerCard: boolean;\r\n    cards: Card[];\r\n    cardImages: FileUpload[]; // TODO remover\r\n\r\n    get numPairs(): number {\r\n        let numPairImages = this.cards.length;\r\n        if (!this.singleCardPerPair) {\r\n            numPairImages /= 2;\r\n        }\r\n        return numPairImages;\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return this._hasAllRequiredValues() && \r\n            CardIdTypeHelper.isValid(this.cardIdType) &&\r\n            this._isValidBackgroundImgSrc() && \r\n            this._isValidCards();\r\n    }\r\n\r\n    private _hasAllRequiredValues(): boolean {\r\n        return !!(this.title?.trim()) && ([\r\n            this.cardIdType,\r\n            this.singleCardPerPair,\r\n            this.addCustomSoundsPerCard,\r\n            this.cards,\r\n        ]).every(value => value !== null && value !== undefined);\r\n    }\r\n\r\n    private _isValidBackgroundImgSrc(): boolean {\r\n        return !this.backgroundImgSrc || FileUpload.isValidImageSrc(this.backgroundImgSrc);\r\n    }\r\n\r\n    private _isValidCards(): boolean {\r\n        return this.cards.length > 0 && this.cards.every(card => Card.hasValidFiles(card));\r\n    }\r\n\r\n}\r\n","export const TRANSLATION_VALUES = {\r\n    menuBtn: {\r\n        tooltip: {\r\n            pt: 'Escolher idioma',\r\n            en: 'Choose language'\r\n        }\r\n    },\r\n    \r\n    language: {\r\n        pt: {\r\n            pt: 'Português',\r\n            en: 'Inglês'\r\n        },\r\n        en: {\r\n            pt: 'Portuguese',\r\n            en: 'English'\r\n        },\r\n    }\r\n}\r\n","export class ConfirmationDialogData {\r\n    header: DialogHeader;\r\n    bodyText: string;\r\n    okCallback: Function;\r\n}\r\n\r\nexport class DialogHeader {\r\n    icon: string;\r\n    iconColor: string;\r\n    title: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ITranslation } from './translation.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n\r\n    private _browserLang: any;\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n    ) { \r\n        translate.addLangs(['en', 'pt']);\r\n        this._browserLang = this._getBrowserLang();\r\n        translate.use(this._browserLang?.match(/pt|en/) ? this._browserLang : 'en');\r\n    }\r\n\r\n    private _getBrowserLang() {\r\n        return this._storedLang || this.translate.getBrowserLang();\r\n    }\r\n\r\n    getTranslationByKey(key: any) {\r\n        return this.translate.get(key);\r\n    }\r\n\r\n    getTranslation(translation: ITranslation, params?: Object): string {\r\n        return this.translate.getParsedResult(translation, this._getBrowserLang(), params);\r\n    }\r\n\r\n    getLang(): string {\r\n        return (this._storedLang || this._browserLang);\r\n    }\r\n\r\n    getAllLanguages() {\r\n        return this.translate.getLangs();\r\n    }\r\n\r\n    private get _storedLang() {\r\n        return localStorage.getItem(\"language\");\r\n    }\r\n\r\n    setLang(lang: string) {\r\n        localStorage.setItem(\"language\", lang);\r\n        this.translate.use(lang);\r\n        this._browserLang = this._getBrowserLang();\r\n    }\r\n}\r\n","export const environment = {\r\n    production: false\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { GameConfigError } from '../shared/error/game-config-error';\r\nimport { FileUpload } from '../shared/model/file-upload.model';\r\nimport { GameConfig } from '../shared/model/game-config.model';\r\nimport { FileUtil } from '../shared/util/file.util';\r\nimport { ERROR_MSG_TRANSLATION } from '../shared/constants/error-message.values';\r\n\r\nconst ERROR_TRANSLATION = ERROR_MSG_TRANSLATION.configFile;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GameConfigFileService {\r\n\r\n    downloadGameConfig(gameConfig: GameConfig) {\r\n        FileUtil.downloadJson(gameConfig, gameConfig.title);\r\n    }\r\n\r\n    readUploadedConfigFile(uploadFile: FileUpload): GameConfig {\r\n        let json = this._readUploadedFile(uploadFile);\r\n        let gameConfig: GameConfig = Object.assign(new GameConfig(), json);\r\n        if (!gameConfig.isValid()) {\r\n            throw new GameConfigError(ERROR_TRANSLATION.invalid);\r\n        }\r\n        return gameConfig;\r\n    }\r\n\r\n    private _readUploadedFile(uploadFile: FileUpload): any {\r\n        try {\r\n            return FileUtil.uploadJson(uploadFile.src);\r\n        } catch (error) {\r\n            throw new GameConfigError(ERROR_TRANSLATION.upload);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmationDialogData } from '../shared/components/dialog/confirmation-dialog/confirmation-dialog-data';\r\nimport { ConfirmationDialogComponent } from '../shared/components/dialog/confirmation-dialog/confirmation-dialog.component';\r\nimport { DIALOG_TRANSLATION } from '../shared/components/dialog/dialog-values';\r\nimport { TranslationService } from '../shared/components/translation/translation.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private translationService: TranslationService,\r\n    ) { }\r\n\r\n    private _getWidthAccordingScreen(widthPercent?: number) {\r\n        return (window.screen.width < 700 ? \r\n            90 : \r\n            widthPercent || 60\r\n        ) + '%';\r\n    }\r\n\r\n    openConfirmationDialog(data: ConfirmationDialogData) {\r\n        const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: this._getWidthAccordingScreen(40),\r\n            data: data\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(confirm => {\r\n            if (!confirm) {\r\n                return;\r\n            }\r\n            data.okCallback();\r\n        });\r\n    }\r\n\r\n    openLiveGameConfirmationDialog(callback: Function, confirmQuestion?: string) {\r\n        this.openConfirmationDialog({\r\n            header: {\r\n                icon: 'pan_tool',\r\n                iconColor: 'darkorange',\r\n                title: this.translationService.getTranslation(DIALOG_TRANSLATION.gameIsNotOverWarning)\r\n            },\r\n            bodyText: confirmQuestion ?? this.translationService.getTranslation(DIALOG_TRANSLATION.liveGameConfirmation),\r\n            okCallback: callback\r\n        });\r\n    }\r\n\r\n    openCustomDialog(component: any, width: number, data: any = {}) {\r\n        this.dialog.open(component, {\r\n            width: this._getWidthAccordingScreen(width),\r\n            data: data\r\n        });\r\n    }\r\n\r\n}\r\n","export class ArrayUtil {\r\n\r\n    static equals<T>(arr1: T[], arr2: T[]): boolean {\r\n        return (\r\n            arr1.length === arr2.length &&\r\n            arr1.every(x => arr2.includes(x)) &&\r\n            arr2.every(x => arr1.includes(x))\r\n        );\r\n    }\r\n\r\n    static getNumOccurrences<T>(arr: T[]): any { /* keys: elements, values: num occurrences */\r\n        return arr.reduce(function (acc: any, curr) {\r\n            return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc\r\n        }, {});\r\n    }\r\n    \r\n}\r\n","export const DIALOG_TRANSLATION = {\r\n\r\n    gameIsNotOverWarning: {\r\n        pt: 'Espere! O jogo ainda não acabou!',\r\n        en: 'Hang on! The game is not over yet!'\r\n    },\r\n\r\n    liveGameConfirmation: {\r\n        pt: 'Tem certeza que deseja sair do jogo?',\r\n        en: 'Are you sure you want to exit the game?'\r\n    },\r\n    \r\n}\r\n","import {\r\n    faApple,\r\n    faTwitter\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n    faBug,\r\n    faCar,\r\n    faChild,\r\n    faCloud,\r\n    faFutbol,\r\n    faGamepad,\r\n    faGhost,\r\n    faHandPaper,\r\n    faHeart,\r\n    faHippo,\r\n    faHome,\r\n    faLeaf,\r\n    faMoon,\r\n    faMusic,\r\n    faPaintBrush,\r\n    faPencilAlt,\r\n    faPlane,\r\n    faRocket,\r\n    faStar,\r\n    faSun,\r\n    faTree,\r\n    faTruckMonster\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const ICONS = [\r\n    faSun,\r\n    faCloud,\r\n    faMoon,\r\n    faStar,\r\n    faBug,\r\n    faTwitter,\r\n    faHippo,\r\n    faTree,\r\n    faCar,\r\n    faTruckMonster,\r\n    faPlane,\r\n    faRocket,\r\n    faHeart,\r\n    faFutbol,\r\n    faHandPaper,\r\n    faApple,\r\n    faLeaf,\r\n    faHome,\r\n    faPencilAlt,\r\n    faMusic,\r\n    faChild,\r\n    faGamepad,\r\n    faPaintBrush,\r\n    faGhost,\r\n];\r\n\r\nexport const NUM_ICONS = ICONS.length;\r\n","export const MENUS = [\r\n    {\r\n        icon: 'home',\r\n        text: {\r\n            pt: 'Início',\r\n            en: 'Home'\r\n        },\r\n        routerLink: '/',\r\n    },\r\n    {\r\n        icon: 'construction',\r\n        text:{\r\n            pt: 'Crie seu jogo',\r\n            en: 'Create your game'\r\n        },\r\n        routerLink: '/game-builder',\r\n    },\r\n    {\r\n        icon: 'sports_esports',\r\n        text: {\r\n            pt: 'Demo',\r\n            en: 'Demo'\r\n        },\r\n        routerLink: '/game-builder/demo',\r\n    },\r\n    {\r\n        icon: 'copyright',\r\n        text: {\r\n            pt: 'Créditos',\r\n            en: 'Credits'\r\n        },\r\n        routerLink: '/credits',\r\n    },\r\n];","import { FileUpload } from \"./file-upload.model\";\r\n\r\nexport class Card {\r\n    id: string;\r\n    icon?: any;\r\n\r\n    constructor(\r\n        public code: string,\r\n        public image: FileUpload,\r\n        public audio?: FileUpload\r\n    ) {}\r\n\r\n    static hasValidFiles(card: Card) {\r\n        return FileUpload.isValidImage(card.image) && (!card.audio || FileUpload.isValidAudio(card.audio));\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MENUS } from './menu-values';\r\nimport { DialogService } from './services/dialog.service';\r\nimport { GameService } from './services/game.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    readonly MENU_LIST = MENUS;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private gameService: GameService,\r\n        private dialogService: DialogService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this._resetToolbarTitle();\r\n    }\r\n\r\n    onChangeLanguage() {\r\n        this._resetToolbarTitle();\r\n    }\r\n\r\n    private _resetToolbarTitle() {\r\n        this.gameService.setToolbarTitleDefault();\r\n    }\r\n\r\n    get toolbarTitle() {\r\n        return this.gameService.toolbarTitle;\r\n    }\r\n\r\n    goTo(menuItem: any) {        \r\n        if (this.gameService.isPlaying) {\r\n            return this.dialogService.openLiveGameConfirmationDialog(() => {\r\n                this.gameService.liveGame();\r\n                this.router.navigateByUrl(menuItem.routerLink);\r\n            });\r\n        }\r\n\r\n        this._resetToolbarTitle();\r\n        this.router.navigateByUrl(menuItem.routerLink);\r\n    }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n        <button mat-icon-button (click)=\"sidenav.toggle()\" matTooltip=\"Menu\" matTooltipPosition=\"right\" aria-label=\"Menu\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n\r\n        <div class=\"toolbar-title\">{{ toolbarTitle }}</div>\r\n\r\n        <app-translation-menu (onChange)=\"onChangeLanguage()\"></app-translation-menu>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n    <mat-sidenav #sidenav class=\"sidenav\">\r\n        <mat-nav-list>\r\n            <mat-list-item *ngFor=\"let menu of MENU_LIST\" (click)=\"sidenav.close(); goTo(menu)\">\r\n                <mat-icon color=\"primary\">{{ menu.icon }}</mat-icon>\r\n                <span class=\"mb-0 ms-1\">{{ 'TRANSLATION' | translate: menu.text }}</span>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NUM_ICONS } from \"./icons\";\r\nimport { CardIdTypeEnum, CardIdTypeNameTranslations } from \"../enums/card-id-type.enum\";\r\n\r\nconst ICONS = CardIdTypeNameTranslations[CardIdTypeEnum.ICONS];\r\n\r\nexport const ERROR_MSG_TRANSLATION = {\r\n\r\n    unexpectedError: {\r\n        pt: 'Ops! Ocorreu um erro inesperado. Tente novamente.',\r\n        en: 'Oops! An unexpected error has occurred. Try again.'\r\n    },\r\n\r\n    diffImagesPerPairFilename: {\r\n        pt: 'Em caso de imagens diferentes por par, os nomes dos arquivos devem seguir o padrão informado.',\r\n        en: 'In case of different images per pair, the file names must follow the pattern informed.'\r\n    },\r\n\r\n    configFile: {\r\n        upload: {\r\n            pt: 'Erro ao processar arquivo de configuração.',\r\n            en: 'Error processing configuration file.'\r\n        },\r\n        invalid: {\r\n            pt: 'O arquivo de configuração enviado é inválido.',\r\n            en: 'The uploaded configuration file is invalid.'\r\n        }\r\n    },\r\n\r\n    exceededMaxNumIcons: {\r\n        pt: `Para identificar cartas com ${ICONS.pt}, o número máximo de cartas é ${NUM_ICONS}.`,\r\n        en: `To identify cards with ${ICONS.en}, the maximum number of cards is ${NUM_ICONS}.`\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { delay } from \"rxjs/operators\";\r\nimport { TranslationService } from '../shared/components/translation/translation.service';\r\nimport { ERROR_MSG_TRANSLATION } from '../shared/constants/error-message.values';\r\nimport { VALUES } from '../shared/constants/global.values';\r\nimport { ICONS, NUM_ICONS } from '../shared/constants/icons';\r\nimport { AudioEnum } from '../shared/enums/audio.enum';\r\nimport { CardIdTypeEnum } from '../shared/enums/card-id-type.enum';\r\nimport { GameConfigError } from '../shared/error/game-config-error';\r\nimport { Card } from '../shared/model/card';\r\nimport { FileUpload } from '../shared/model/file-upload.model';\r\nimport { GameConfig } from '../shared/model/game-config.model';\r\nimport { ArrayUtil } from '../shared/util/array.util';\r\nimport { AudioService } from './audio.service';\r\nimport { FeedbackService } from './feedback.service';\r\nimport { GameConfigFileService } from './game-config-file.service';\r\n\r\nconst IMG_FILENAME_SEP = VALUES.upload.fileNameSeparator;\r\nconst ERROR_TRANSLATION = ERROR_MSG_TRANSLATION;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n    private _toolbarTitle: string;\r\n    private _playSound: boolean = true;\r\n    private _gameConfig: GameConfig;\r\n    private _pairCount: number = 0;\r\n    private _foundPairCodes: string[] = []\r\n    private _coverCards = new BehaviorSubject<Card[]>([]);\r\n    private _selectedCard1: Card = null;\r\n    private _selectedCard2: Card = null;\r\n\r\n    constructor(\r\n        library: FaIconLibrary,\r\n        private router: Router,\r\n        private feedbackService: FeedbackService,\r\n        private translationService: TranslationService,\r\n        private audioService: AudioService,\r\n        private configFileService: GameConfigFileService,\r\n    ) {\r\n        library.addIcons(...ICONS);\r\n    }\r\n\r\n    get toolbarTitle() {\r\n        return this._toolbarTitle;\r\n    }\r\n\r\n    setToolbarTitleDefault() {\r\n        if (!this.isPlaying) {\r\n            this._setDefaultToolbarTitle();\r\n        }\r\n    }\r\n\r\n    private _setDefaultToolbarTitle() {\r\n        this.translationService.getTranslationByKey('TOOLBAR_TITLE')\r\n            .subscribe(toolbarTitle => this._toolbarTitle = toolbarTitle);\r\n    }\r\n\r\n    get config() {\r\n        return this._gameConfig;\r\n    }\r\n\r\n    get isGameFinished(): boolean {\r\n        return this._pairCount == 0;\r\n    }\r\n\r\n    get isPlaying(): boolean {\r\n        return !!this._gameConfig && !this.isGameFinished;\r\n    }\r\n\r\n    liveGame() {\r\n        this._setDefaultToolbarTitle();\r\n        this._gameConfig = null;\r\n        this._pairCount = 0;\r\n        this._foundPairCodes = [];\r\n    }\r\n\r\n    goHome() {\r\n        this.liveGame();\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    downloadGameConfig(gameConfig: GameConfig) {\r\n        this.configFileService.downloadGameConfig(gameConfig);\r\n    }\r\n\r\n    createGameFromUploadedConfigFile(uploadFile: FileUpload) {\r\n        let gameConfig: GameConfig = null;\r\n        try {\r\n            gameConfig = this.configFileService.readUploadedConfigFile(uploadFile);\r\n        } \r\n        catch (error) {\r\n            this._handleCreateError(error);\r\n            throw error;\r\n        }\r\n\r\n        this.create(gameConfig);\r\n    }\r\n\r\n    create(gameConfig: GameConfig) {\r\n        this._gameConfig = gameConfig;\r\n        try {\r\n            let cards = this._getCards();\r\n            this._toolbarTitle = gameConfig.title;\r\n            this._loadAudios(cards);\r\n            this.router.navigate(['game'], {\r\n                state: {\r\n                    cards: cards\r\n                }\r\n            });\r\n        } \r\n        catch (error) {\r\n            this._handleCreateError(error);\r\n        }\r\n    }\r\n\r\n    private _loadAudios(cards: Card[]) {\r\n        let cardAudios: FileUpload[] = null;\r\n        if (this._gameConfig.addCustomSoundsPerCard) {\r\n            cardAudios = cards.map(card => card.audio);\r\n        }\r\n        this.audioService.load(cardAudios);\r\n    }\r\n\r\n    private _handleCreateError(error: any) {\r\n        this._gameConfig = null;\r\n        this.feedbackService.handleError(error);\r\n    }\r\n\r\n    private _getCards(): Card[] {\r\n        this._reset();\r\n\r\n        if (this._gameConfig.cardIdType === CardIdTypeEnum.ICONS && this._pairCount * 2 > NUM_ICONS) {\r\n            throw new GameConfigError(ERROR_TRANSLATION.exceededMaxNumIcons);\r\n        }\r\n\r\n        if (!this._gameConfig.singleCardPerPair) {\r\n            return this._getCardsForDifferentImagesPerPair();\r\n        }\r\n        return this._getCardsForSameImagePerPair();\r\n    }\r\n\r\n    private _reset() {\r\n        this._pairCount = this._gameConfig.numPairs;\r\n        this._foundPairCodes = [];\r\n        this._coverCards.next([]);\r\n    }\r\n\r\n    private _getCardsForSameImagePerPair(): Card[] {\r\n        let cards = this._gameConfig.cards.map((card, i) => new Card(`${i+1}`, card.image, card.audio));\r\n\r\n        return this._getFinalShuffledCardsWithId([\r\n            ...this._shuffleCards(cards),\r\n            ...this._shuffleCards(JSON.parse(JSON.stringify(cards)))\r\n        ]);\r\n    }\r\n\r\n    private _getFinalShuffledCardsWithId(cards: Card[]) {\r\n        cards.forEach((card, i) => card.id = `${i + 1}`);\r\n\r\n        if (this._gameConfig.cardIdType === CardIdTypeEnum.ICONS) {\r\n            cards.forEach((card, i) => card.icon = ICONS[i]);\r\n        }\r\n\r\n        return cards;\r\n    }\r\n\r\n    private _getCardsForDifferentImagesPerPair(): Card[] {\r\n        /* Espera-se que as imagens dos mesmos pares tenham o nome com o mesmo prefixo antes do SEP */\r\n        let originalCards = this._gameConfig.cards;\r\n        let keys = this._getFilenamePrefixForDiffImagesPerPair(originalCards.map(card => card.image));\r\n        let cards: Card[] = [];\r\n\r\n        keys.forEach(key => {\r\n            originalCards\r\n                .filter(card => this._getCardImageFilenamePrefix(card.image) === key)\r\n                .forEach(card => cards.push(new Card(key, card.image, card.audio)));\r\n        });\r\n\r\n        return this._getFinalShuffledCardsWithId(this._shuffleCards(cards));\r\n    }\r\n\r\n    private _getFilenamePrefixForDiffImagesPerPair(cardImages: FileUpload[]) {\r\n        let filenames = cardImages.map(cardImage => this._getCardImageFilenamePrefix(cardImage));\r\n        let occurrences = ArrayUtil.getNumOccurrences(filenames);\r\n        let keys = Object.keys(occurrences);\r\n\r\n        if (keys.length !== filenames.length / 2 ||\r\n            Object.values(occurrences).some(count => count != 2)\r\n        ) {\r\n            throw new GameConfigError(ERROR_TRANSLATION.diffImagesPerPairFilename);\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    private _getCardImageFilenamePrefix(cardImage: FileUpload) {\r\n        return cardImage.filename.split(IMG_FILENAME_SEP)[0];\r\n    }\r\n\r\n    private _shuffleCards(cards: Card[]) {\r\n        for (let index = 0; index < cards.length; index++) {\r\n            const temp = cards[index];\r\n            const newIdx = Math.floor(Math.random() * cards.length);\r\n            cards[index] = cards[newIdx];\r\n            cards[newIdx] = temp;\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    setIdAsRowColumn(cards: Card[], numCols: number) {\r\n        if (this._gameConfig.cardIdType == CardIdTypeEnum.ROW_COLUMN) {\r\n            let numRows = cards.length / numCols;\r\n            for (let r = 0; r < numRows; r++) {\r\n                let idx = r * numCols;\r\n                let currCardRow = cards.slice(idx, idx + numCols);\r\n                currCardRow.forEach((card, col) => card.id = `${this._getLetter(r)}${col+1}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getLetter(index: number) {\r\n        return String.fromCharCode('A'.charCodeAt(0) + index);\r\n    }\r\n\r\n\r\n    onChooseCard(choosen: Card): boolean {\r\n        if (this.isGameFinished || this._foundPairCodes.includes(choosen.code)) {\r\n            if (this._playSound && choosen.audio) {\r\n                this.audioService.play(choosen.audio.filename);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this._playSound) {\r\n            this.audioService.play(choosen.audio?.filename ?? AudioEnum.TURN_CARD);\r\n        }\r\n\r\n        if (this._selectedCard1 === null) {\r\n            this._selectedCard1 = choosen;\r\n            return;\r\n        }\r\n\r\n        if (choosen.id === this._selectedCard1.id) {\r\n            return;\r\n        }\r\n\r\n        this._selectedCard2 = choosen;\r\n        if (this._selectedCard1.code == this._selectedCard2.code) {\r\n            this._handleFoundPair(choosen);\r\n        } else {\r\n            this._coverCards.next([this._selectedCard1, this._selectedCard2]);\r\n        }\r\n\r\n        this._selectedCard1 = null;\r\n        this._selectedCard2 = null;\r\n\r\n        let win = this.isGameFinished;\r\n\r\n        if (win && this.playSound) {\r\n            setTimeout(() => {\r\n                this.audioService.play(AudioEnum.WIN);\r\n            }, VALUES.winNotificationTimeout / 2);\r\n        }\r\n\r\n        return win;\r\n    }\r\n\r\n    private _handleFoundPair(choosen: Card) {\r\n        this._pairCount--;\r\n        this._foundPairCodes.push(choosen.code);\r\n        if (this._playSound) {\r\n            setTimeout(() => {\r\n                this.audioService.play(AudioEnum.CORRECT);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n\r\n    restartGame(cards: Card[]) {\r\n        this._reset();\r\n        return this._getFinalShuffledCardsWithId( this._shuffleCards(cards) );\r\n    }\r\n\r\n    getCoveredCards() {\r\n        return this._coverCards.asObservable().pipe(delay(1200));\r\n    }\r\n\r\n    get playSound() {\r\n        return this._playSound;\r\n    }\r\n\r\n    swapPlaySound() {\r\n        this._playSound = !this._playSound;\r\n    }\r\n\r\n    /* Game Config Building */\r\n\r\n    validateCardUploads(images: FileUpload[], audios: FileUpload[]) { \r\n        if (images.length !== audios.length) {\r\n            throw new GameConfigError({\r\n                pt: 'A quantidade de arquivos de Imagem e Áudio não são iguais',\r\n                en: 'The number of Image and Audio files are not the same'\r\n            });\r\n        }\r\n\r\n        let numMismatch = images.filter(image => !audios.some(audio => audio.hasSameName(image)));\r\n        if (numMismatch.length) {\r\n            throw new GameConfigError({\r\n                pt: `Existe(m) ${numMismatch} arquivo(s) de imagem sem arquivo de audio com mesmo nome.`,\r\n                en: `There are ${numMismatch} image files without an audio file with the same name.`\r\n            });\r\n        }\r\n    }\r\n\r\n    buildCardsFromValidUploads(images: FileUpload[], audios?: FileUpload[]): Card[] {\r\n        if (!(audios?.length)) {\r\n            return images.map(image => new Card(null, image, null));\r\n        }\r\n        \r\n        return images.map(image => {\r\n            let audio = audios.find(x => x.hasSameName(image));\r\n            return new Card(null, image, audio);\r\n        });\r\n    }\r\n\r\n}\r\n","export enum CardIdTypeEnum {\r\n    NUMBERS = 1,\r\n    ROW_COLUMN,\r\n    ICONS    \r\n}\r\n\r\nexport class CardIdTypeHelper {\r\n\r\n    static isValid(cardIdType: any): boolean {\r\n        return typeof cardIdType == 'number' && Object.values(CardIdTypeEnum).includes(cardIdType);\r\n    }\r\n    \r\n}\r\n\r\nexport const CardIdTypeNameTranslations = {\r\n    [CardIdTypeEnum.NUMBERS]: {\r\n        pt: 'Números',\r\n        en: 'Numbers'\r\n    },\r\n\r\n    [CardIdTypeEnum.ROW_COLUMN]: { \r\n        pt: 'Linha/Coluna',\r\n        en: 'Row/Column'\r\n    },\r\n\r\n    [CardIdTypeEnum.ICONS]: { \r\n        pt: 'Ícones',\r\n        en: 'Icons'\r\n    },\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { TranslationModule } from './shared/components/translation/translation.module';\r\n\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n    return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        TranslationModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ITranslation } from \"../components/translation/translation.model\";\r\n\r\nexport class GameConfigError extends Error {\r\n    constructor(public translation: ITranslation) {\r\n        super('Game Config Error');\r\n    }\r\n}\r\n","export enum AudioEnum {\r\n    CORRECT = 'correct',\r\n    TURN_CARD = 'turnCard',\r\n    WIN = 'win'\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { TranslationService } from '../translation.service';\r\nimport { TRANSLATION_VALUES } from './translation-values';\r\n\r\n@Component({\r\n    selector: 'app-translation-menu',\r\n    templateUrl: './translation-menu.component.html',\r\n    styleUrls: ['./translation-menu.component.scss']\r\n})\r\nexport class TranslationMenuComponent implements OnInit {\r\n\r\n    readonly VALUES = TRANSLATION_VALUES;\r\n\r\n    @Output() onChange = new EventEmitter();\r\n\r\n    languages: any[] = [];\r\n    selectedLanguage: string;\r\n\r\n    constructor(\r\n        private service: TranslationService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._setSelectedLang();\r\n        this.languages = this.service.getAllLanguages().map(lang => this._getLangObj(lang));\r\n    }\r\n\r\n    private _setSelectedLang() {\r\n        this.selectedLanguage = this.service.getLang().toUpperCase();\r\n    }\r\n\r\n    private _getLangObj(lang: string) {\r\n        return {\r\n            lang: lang,\r\n            title: lang.toUpperCase(),\r\n            flag: `assets/images/lang-flags/${lang}-icon-lang.png`,\r\n            tooltip: `TRANSLATION_ACRONYM.${lang}`\r\n        }\r\n    }\r\n\r\n    changeLanguage(lang: string) {\r\n        this.service.setLang(lang);\r\n        this._setSelectedLang();\r\n        this.onChange.emit(lang);\r\n    }\r\n\r\n}\r\n","<button mat-button [matMenuTriggerFor]=\"langMenu\" class=\"material-icons-outlined\" aria-label=\"Choose Lang\"\r\n    matTooltip=\"{{ 'TRANSLATION' | translate: VALUES.menuBtn.tooltip }}\" matTooltipPosition=\"right\">\r\n    <mat-icon>language</mat-icon> {{ selectedLanguage }}\r\n\r\n    <mat-menu #langMenu>\r\n        <button *ngFor=\"let langBtn of languages\" mat-menu-item (click)=\"changeLanguage(langBtn.lang)\"\r\n            matTooltip=\"{{ langBtn.tooltip | translate: VALUES.language }}\" matTooltipPosition=\"right\">\r\n            <div class=\"lang-menu-item-list\">\r\n                <mat-icon>\r\n                    <img width=\"100%\" [src]=\"langBtn.flag\" [alt]=\"langBtn.lang\">\r\n                </mat-icon>\r\n                <span>{{ langBtn.title }}</span>\r\n            </div>\r\n        </button>\r\n    </mat-menu>\r\n</button>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DIALOG_TRANSLATION } from '../dialog-values';\r\nimport { ConfirmationDialogData } from './confirmation-dialog-data';\r\n\r\n@Component({\r\n    selector: 'app-confirmation-dialog',\r\n    templateUrl: './confirmation-dialog.component.html',\r\n    styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent {\r\n\r\n    readonly TRANSLATION = DIALOG_TRANSLATION;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData\r\n    ) { }\r\n\r\n}\r\n","<div class=\"dialog-header\">\r\n    <mat-icon [style.color]=\"data.header.iconColor\">{{ data.header.icon }}</mat-icon>\r\n    <div mat-dialog-title>{{ data.header.title }}</div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n    <div class=\"text-center mb-2\">\r\n        {{ data.bodyText }}\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-stroked-button mat-dialog-close id=\"modal-cancel-btn\" color=\"primary\">\r\n        <mat-icon>thumb_down</mat-icon> {{ 'ANSWER.NO' | translate }}\r\n    </button>\r\n\r\n    <button mat-raised-button mat-dialog-close=\"ok\" id=\"modal-ok-btn\" color=\"primary\">\r\n        <mat-icon>thumb_up</mat-icon> {{ 'ANSWER.YES' | translate }}\r\n    </button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { AudioEnum } from '../shared/enums/audio.enum';\nimport { FileUpload } from '../shared/model/file-upload.model';\n\nconst AUDIO_DIR_PATH = 'assets/audio';\nconst AUDIO_SRC = {\n    [AudioEnum.CORRECT]: 'correct.mp3',\n    [AudioEnum.TURN_CARD]: 'page-turn.mp3',\n    [AudioEnum.WIN]: 'tada.mp3',\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioService {\n\n    private _audioMap: { [key: string]: HTMLAudioElement };\n\n\n    load(cardAudios?: FileUpload[]) {\n        this._audioMap = {};\n        Object.entries(AUDIO_SRC).forEach(([key,src]) => {\n            this._audioMap[key] = this._load(`${AUDIO_DIR_PATH}/${src}`);\n        });\n\n        if (cardAudios) {\n            delete this._audioMap[AudioEnum.TURN_CARD];\n            cardAudios.forEach(cardAudio => {\n                this._audioMap[cardAudio.filename] = this._load(cardAudio.src);\n            });\n        }\n    }\n\n    private _load(src: string) {\n        let audio = new Audio(src);\n        audio.load();\n        return audio;\n    }\n\n    play(audioEnumOrFilename: AudioEnum | string) {\n        (this._audioMap[audioEnumOrFilename])?.play();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastService } from './toast.service';\nimport { DialogService } from './dialog.service';\nimport { TranslationService } from '../shared/components/translation/translation.service';\nimport { GameConfigError } from '../shared/error/game-config-error';\nimport { ERROR_MSG_TRANSLATION } from '../shared/constants/error-message.values';\nimport { ITranslation } from '../shared/components/translation/translation.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FeedbackService {\n\n    constructor(\n        private toastService: ToastService,\n        private dialogService: DialogService,\n        private translationService: TranslationService\n    ) { }\n\n    get dialog() {\n        return this.dialogService;\n    }\n\n    handleError(error: any): ITranslation {\n        if ( !(error instanceof GameConfigError) ) {\n            return this.handleUnexpectedError();\n        }\n\n        this.toastErrorTranslation(error.translation);\n        return error.translation;\n    }\n\n    handleUnexpectedError() {\n        const errorTranslation = ERROR_MSG_TRANSLATION.unexpectedError;\n        this.toastErrorTranslation(errorTranslation);\n        return errorTranslation;\n    }\n\n    toastErrorTranslation(translation: ITranslation) {\n        this.toastService.error(\n            this.translationService.getTranslation(translation)\n        );\n    }\n}\n","import { Buffer } from 'buffer';\r\n\r\nexport class FileUtil {\r\n\r\n    static downloadJson(data: any, filenameNoExtension: string) {\r\n        let link = document.createElement('a');\r\n        link.href = URL.createObjectURL(\r\n            new Blob([JSON.stringify(data, null, 4)], { type: 'application/json' })\r\n        );\r\n        link.download = `${filenameNoExtension}.json`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    static uploadJson(base64: string): any {\r\n        const base64SubStr = ';base64,';\r\n        let base64Index = base64.indexOf(base64SubStr) + base64SubStr.length;\r\n        return JSON.parse(\r\n            Buffer.from(base64.substring(base64Index), 'base64').toString()\r\n        );\r\n    }\r\n    \r\n}\r\n","export const VALUES = {\r\n    winNotificationTimeout: 500,\r\n    \r\n    upload: {\r\n        fileNameSeparator: '_',\r\n    },\r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: () => import('./views/home/home.module').then(m => m.HomeModule)\r\n    },\r\n    {\r\n        path: 'game-builder',\r\n        loadChildren: () => import('./views/game-builder/game-builder.module').then(m => m.GameBuilderModule)\r\n    },\r\n    {\r\n        path: 'game',\r\n        loadChildren: () => import('./views/game/game.module').then(m => m.GameModule)\r\n    },\r\n    {\r\n        path: 'credits',\r\n        loadChildren: () => import('./views/credits/credits.module').then(m => m.CreditsModule)\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    imports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ],\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ],\r\n})\r\nexport class MaterialModule {\r\n}\r\n","const IMAGE_BASE_64_REGEX = new RegExp('data\\:image\\/(png|jpeg)\\;base64,([^\\\"]+)');\r\nconst AUDIO_BASE_64_REGEX = new RegExp('data\\:audio\\/(.+)\\;base64,([^\\\"]+)');\r\n\r\nexport class FileUpload {\r\n\r\n    constructor(\r\n        public src: string, /* base64 or url */\r\n        public filename: string\r\n    ) { }\r\n\r\n    hasSameName(fileUpload: FileUpload): boolean {\r\n        let name = this.filename.split('.')[0];\r\n        let name2 = fileUpload.filename.split('.')[0];\r\n        return name === name2;\r\n    }\r\n\r\n    static isValidAudio(fileUpload: FileUpload) {\r\n        return this._isValidSrc(fileUpload.src, AUDIO_BASE_64_REGEX) && !!(fileUpload.filename?.trim());\r\n    }\r\n\r\n    static isValidImage(fileUpload: FileUpload) {\r\n        return this.isValidImageSrc(fileUpload.src) && !!(fileUpload.filename?.trim());\r\n    }\r\n\r\n    static isValidImageSrc(src: string) {\r\n        return this._isValidSrc(src, IMAGE_BASE_64_REGEX);\r\n    }\r\n\r\n    private static _isValidSrc(src: string, base64Regex: RegExp) {\r\n        return this._isValidUrl(src) || base64Regex.test(src);\r\n    }\r\n\r\n    private static _isValidUrl(url: string) {\r\n        return (new RegExp('^(https?:\\\\/\\\\/)?' + // validate protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // validate domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // validate OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // validate port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // validate query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i') // validate fragment locator\r\n        ).test(url);\r\n    }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
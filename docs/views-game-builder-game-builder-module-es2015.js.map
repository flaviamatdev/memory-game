{"version":3,"sources":["./src/app/shared/enums/file-upload-type.enum.ts","./src/app/views/game-builder/game-builder-values.ts","./src/app/shared/components/input/input.module.ts","./src/app/shared/components/input/upload/upload.component.ts","./src/app/shared/components/input/upload/upload.component.html","./src/app/views/game-builder/game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component.ts","./src/app/views/game-builder/game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component.html","./src/app/views/game-builder/game-builder-form/game-builder-form.component.ts","./src/app/views/game-builder/game-builder-form/game-builder-form.component.html","./src/app/shared/enums/media-src-type.enum.ts","./src/app/shared/components/input/abstract-input.component.ts","./src/app/views/game-builder/game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component.ts","./src/app/views/game-builder/game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component.html","./src/app/views/game-builder/game-builder/game-builder.component.ts","./src/app/views/game-builder/game-builder/game-builder.component.html","./src/app/views/game-builder/game-builder-form/cards/card-urls/card-urls.component.ts","./src/app/views/game-builder/game-builder-form/cards/card-urls/card-urls.component.html","./src/app/shared/components/input/select/select/select.component.ts","./src/app/shared/components/input/select/select/select.component.html","./src/app/views/game-builder/game-builder.module.ts","./src/app/shared/components/input/image/input-image-url/input-image-url.component.ts","./src/app/shared/components/input/image/input-image-url/input-image-url.component.html","./src/app/views/game-builder/game-builder-form/game-build-form-input.values.ts","./src/app/shared/components/input/input-label/input-label.component.html","./src/app/shared/components/input/input-label/input-label.component.ts","./src/app/shared/util/form.util.ts","./src/app/views/game-builder/game-builder-form/cards/card-form/card-form.component.ts","./src/app/views/game-builder/game-builder-form/cards/card-form/card-form.component.html","./src/app/views/game-builder/game-builder-form/background-image-form/background-image-form.component.ts","./src/app/views/game-builder/game-builder-form/background-image-form/background-image-form.component.html","./src/app/shared/components/input/upload/upload-values.ts","./src/app/shared/components/input/select/select-yes-no/select-yes-no.component.ts","./src/app/shared/components/input/select/select-yes-no/select-yes-no.component.html","./src/app/shared/components/input/select/select-media-src-type/select-media-src-type-values.ts","./src/app/shared/components/input/input-number/input-number.component.ts","./src/app/shared/components/input/input-number/input-number.component.html","./src/app/shared/components/input/audio/input-audio-url/input-audio-url.component.ts","./src/app/shared/components/input/audio/input-audio-url/input-audio-url.component.html","./src/app/shared/components/input/select/select-media-src-type/select-media-src-type.component.ts","./src/app/shared/components/input/select/select-media-src-type/select-media-src-type.component.html","./src/app/shared/components/input/input-text/input-text.component.ts","./src/app/shared/components/input/input-text/input-text.component.html","./src/app/views/game-builder/game-builder-form/cards/url-pair-config.model.ts","./src/app/shared/components/input/image/image-preview/image-preview.component.ts","./src/app/shared/components/input/image/image-preview/image-preview.component.html"],"names":[],"mappings":"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","file":"views-game-builder-game-builder-module-es2015.js","sourcesContent":["export enum FileUploadTypeEnum {\r\n    AUDIO,\r\n    IMAGE,\r\n    JSON\r\n}\r\n","import { VALUES } from \"src/app/shared/constants/global.values\";\r\n\r\nconst IMG_FILENAME_SEP = VALUES.upload.fileNameSeparator;\r\n\r\nconst DOWNLOAD_CONFIG_FILE = {\r\n    pt: 'Baixar arquivo',\r\n    en: 'Download game file'\r\n}\r\n\r\nexport const GAME_BUILDER_TRANSLATION = {\r\n    pageTitle: {\r\n        gameBuilder: {\r\n            pt: 'Monte o seu jogo',\r\n            en: 'Create your game'\r\n        },\r\n        demoBuilder: {\r\n            pt: 'Jogo Demonstração',\r\n            en: 'Demo Game'\r\n        }\r\n    },\r\n\r\n    instruction: {\r\n        pt: 'Preencha o formulário abaixo com as informações para o jogo OU selecione a opção abaixo caso tenha o arquivo do jogo.',\r\n        en: 'Fill out the form below with the game information OR select the option below if you have the game file.'\r\n    },\r\n\r\n    uploadConfigFile: {\r\n        checkboxLabel: {\r\n            pt: 'Já tenho arquivo do jogo',\r\n            en: 'I already have the game file'\r\n        },\r\n        instruction: {\r\n            pt: `(gerado ao clicar em \"${DOWNLOAD_CONFIG_FILE.pt}\" no pé da página)`,\r\n            en: `(generated by clicking \"${DOWNLOAD_CONFIG_FILE.en}\" at page bottom)`\r\n        }\r\n    },\r\n\r\n    sectionTitle: {\r\n        mainData: {\r\n            pt: 'Dados Principais',\r\n            en: 'Main Data'\r\n        },\r\n\r\n        backgroundImg: {\r\n            pt: 'Imagem de Fundo',\r\n            en: 'Background image'\r\n        },\r\n\r\n        cards: {\r\n            pt: 'Cartas',\r\n            en: 'Cards'\r\n        },\r\n\r\n        cardImages: {\r\n            pt: 'Imagens das Cartas',\r\n            en: 'Card Images'\r\n        },\r\n    },\r\n\r\n    gameTitle: {\r\n        demo: {\r\n            pt: 'Jogo da Memória (Demo)',\r\n            en: 'Demo Memory Game'\r\n        }\r\n    },\r\n\r\n    input: {\r\n        gameTitle: {\r\n            pt: 'Título do jogo',\r\n            en: 'Game title'\r\n        },\r\n\r\n        singleCardPerPair: {\r\n            pt: 'Cada par possui cartas iguais?',\r\n            en: 'Does each pair have the same card?'\r\n        },\r\n\r\n        addCustomSoundsPerCard: {\r\n            pt: 'Adicionar sons customizados ao abrir cada carta',\r\n            en: 'Add custom sounds when opening each card'\r\n        },\r\n\r\n        numPairs: {\r\n            pt: 'Nº de pares',\r\n            en: 'Number of pairs'\r\n        },\r\n\r\n        cardIdType: {\r\n            pt: 'Como identificar as cartas',\r\n            en: 'How to identify the cards'\r\n        },\r\n\r\n        backgroundImg: {\r\n            add: {\r\n                pt: 'Inserir imagem de fundo?',\r\n                en: 'Insert background image?'\r\n            },\r\n            url: {\r\n                pt: 'Link da imagem',\r\n                en: 'Image link'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivo',\r\n                en: 'Upload image file'\r\n            }\r\n        },\r\n\r\n        cards: {\r\n            pair: {\r\n                pt: 'Par nº ',\r\n                en: 'Pair #'\r\n            },\r\n            getCardPair: (ordinal: any) => {\r\n                return {\r\n                    pt: `Carta ${ordinal} do Par `,\r\n                    en: `Card #${ordinal} of Pair #`\r\n                }\r\n            },\r\n\r\n            url: {\r\n                image: {\r\n                    pairLink: {\r\n                        pt: 'Link da Imagem do Par ',\r\n                        en: 'Image Link of Pair #'\r\n                    },\r\n\r\n                    getPairLink: (ordinal: any) => {\r\n                        return {\r\n                            pt: `Link da Imagem ${ordinal} do Par `,\r\n                            en: `Image Link #${ordinal} of Pair #`\r\n                        }\r\n                    },\r\n                },\r\n\r\n                audio: {\r\n                    pairLink: {\r\n                        pt: 'Link do Áudio do Par ',\r\n                        en: 'Audio Link of Pair #'\r\n                    },\r\n\r\n                    getPairLink: (ordinal: any) => {\r\n                        return {\r\n                            pt: `Link do Áudio ${ordinal} do Par `,\r\n                            en: `Audio Link #${ordinal} of Pair #`\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n\r\n            upload: {\r\n                images: {\r\n                    pickDirPath: {\r\n                        pt: 'Selecione a pasta que contém as imagens das cartas',\r\n                        en: 'Select the folder containing the card images'\r\n                    },\r\n                    diffImagesPerPair: {\r\n                        warning: {\r\n                            pt: `Envio de arquivos diferentes por par: os nomes dos arquivos referentes ao mesmo par devem ter o mesmo prefixo seguido de ${IMG_FILENAME_SEP} . Veja um exemplo `,\r\n                            en: `Sending different files per pair: file names referring to the same pair must have the same prefix followed by ${IMG_FILENAME_SEP}. See an example `\r\n                        },\r\n                        warningLink: {\r\n                            pt: 'aqui',\r\n                            en: 'here'\r\n                        }\r\n                    }\r\n                },\r\n                \r\n                audios: {\r\n                    pickDirPath: {\r\n                        pt: 'Selecione a pasta que contém os áudios das cartas',\r\n                        en: 'Select the folder containing the card audios'\r\n                    },\r\n                    instruction: {\r\n                        pt: `O nome de cada arquivo de áudio de cada carta deve ser igual ao nome do arquivo de imagem correspondente. Por exemplo: 'bola.png' e 'bola.mp3'`,\r\n                        en: `The name of each audio file for each card must be the same as the name of the corresponding image file. For example: 'ball.png' and 'ball.mp3'`\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    },\r\n\r\n    btn: {\r\n        submit: {\r\n            createGame: {\r\n                pt: 'Criar jogo',\r\n                en: 'Create game'\r\n            },\r\n            playDemo: {\r\n                pt: 'Jogar',\r\n                en: 'Play'\r\n            }\r\n        },\r\n        download: {\r\n            label: DOWNLOAD_CONFIG_FILE,\r\n            comment: {\r\n                pt: 'Para jogar depois',\r\n                en: 'For play later'\r\n            }\r\n        }\r\n    },\r\n\r\n    diffImagesPerPairDialog: {\r\n        title: {\r\n            pt: 'Envio de arquivos diferentes por par',\r\n            en: 'Sending different files per pair'\r\n        },\r\n        instruction: {\r\n            pt: 'Exemplo de nome para arquivos de images para cada par',\r\n            en: 'Example name for image files for each pair'\r\n        },\r\n        pairName: {\r\n            pt: 'nome do par',\r\n            en: 'pair name'\r\n        },\r\n        imageId: {\r\n            pt: 'identificacao da imagem',\r\n            en: 'image identification'\r\n        }\r\n    },\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { ImagePreviewComponent } from './image/image-preview/image-preview.component';\r\nimport { InputLabelComponent } from './input-label/input-label.component';\r\nimport { InputNumberComponent } from './input-number/input-number.component';\r\nimport { InputTextComponent } from './input-text/input-text.component';\r\nimport { SelectMediaSrcTypeComponent } from './select/select-media-src-type/select-media-src-type.component';\r\nimport { SelectYesNoComponent } from './select/select-yes-no/select-yes-no.component';\r\nimport { SelectComponent } from './select/select/select.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { InputAudioUrlComponent } from './audio/input-audio-url/input-audio-url.component';\r\nimport { InputImageUrlComponent } from './image/input-image-url/input-image-url.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n        TranslateModule,\r\n    ],\r\n    declarations: [\r\n        InputLabelComponent,\r\n        InputNumberComponent,\r\n        InputTextComponent,\r\n        SelectComponent,\r\n        SelectMediaSrcTypeComponent,\r\n        SelectYesNoComponent,\r\n        ImagePreviewComponent,\r\n        UploadComponent,\r\n        InputAudioUrlComponent,\r\n        InputImageUrlComponent,\r\n    ],\r\n    exports: [\r\n        InputNumberComponent,\r\n        InputTextComponent,\r\n        SelectComponent,\r\n        SelectMediaSrcTypeComponent,\r\n        SelectYesNoComponent,\r\n        ImagePreviewComponent,\r\n        UploadComponent,\r\n        InputAudioUrlComponent,\r\n        InputImageUrlComponent,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class InputModule { }\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { FileUploadTypeEnum } from '../../../enums/file-upload-type.enum';\r\nimport { TranslationService } from '../../translation/translation.service';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\nimport { UPLOAD_TRANSLATION } from './upload-values';\r\n\r\n@Component({\r\n    selector: 'app-upload',\r\n    templateUrl: './upload.component.html',\r\n    styleUrls: ['./upload.component.scss', '../abstract-input.component.scss']\r\n})\r\nexport class UploadComponent extends AbstractInputComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = UPLOAD_TRANSLATION;\r\n\r\n    @Input() fileType: FileUploadTypeEnum = FileUploadTypeEnum.IMAGE;\r\n    @Input() multiple: boolean = false;\r\n    @Input() selectAllDir: boolean = false;\r\n\r\n    @Output() onClearInput = new EventEmitter();\r\n    @Output() onUpload = new EventEmitter();\r\n\r\n    accept: string;\r\n    btnTranslation: any;\r\n    singleChosedFileName: string;\r\n\r\n    @ViewChild('uploadInput') private _inputElem: ElementRef;\r\n    \r\n    private _numFiles: number = 0;\r\n    private _fileUploads: FileUpload[];\r\n\r\n    constructor(\r\n        private toastService: ToastService,\r\n        private translationService: TranslationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    get numFiles() {\r\n        return this._numFiles;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._setAccept();\r\n        this.multiple = this.multiple || this.selectAllDir;\r\n        this.btnTranslation = (this.multiple ? \r\n            this.TRANSLATION.multiple.btn : \r\n            this.TRANSLATION.nonMultiple.btn\r\n        );\r\n    }\r\n\r\n    private _setAccept() {\r\n        this.accept = ({\r\n            [FileUploadTypeEnum.AUDIO]: 'audio/*',\r\n            [FileUploadTypeEnum.IMAGE]: 'image/*',\r\n            [FileUploadTypeEnum.JSON]:  'application/json',\r\n        })[this.fileType];\r\n    }\r\n\r\n    reset() {\r\n        this._fileUploads = [];\r\n        this._clearInput();\r\n        this.formControl?.reset();\r\n        this.singleChosedFileName = null;\r\n    }\r\n\r\n    private _clearInput() {\r\n        this._numFiles = 0;\r\n        this._inputElem.nativeElement.value = \"\";\r\n    }\r\n\r\n    openInputFile() {\r\n        this._inputElem.nativeElement.click();\r\n    }\r\n\r\n    onSelectFiles($event: any) {        \r\n        this._fileUploads = [];\r\n        let fileList: FileList = $event?.target?.files;\r\n\r\n        if ( !(fileList?.length) || fileList.item(0) == null ) {\r\n            this._clearInput();\r\n            this.onClearInput.emit();\r\n            return;\r\n        }\r\n        \r\n        let { files, typeOk } = this._extractFiles(fileList);\r\n        if (!typeOk) {\r\n            this._clearInput();\r\n            this._showOutAcceptErrorMsg();\r\n            return;\r\n        }\r\n\r\n        files.sort((a,b) => a.name.localeCompare(b.name))\r\n            .forEach(file => this._readFile(file));\r\n    }\r\n\r\n    private _extractFiles(fileList: FileList) {\r\n        this._numFiles = fileList.length ?? 0;\r\n        \r\n        const accept = this.accept.replace('*', '');\r\n        let files: File[] = [];\r\n        let typeOk = true;\r\n        let i = 0;\r\n        do {\r\n            let file = fileList.item(i++);\r\n            files.push(file);\r\n            typeOk = typeOk && file.type.startsWith(accept);\r\n        } while (typeOk && i < this._numFiles);\r\n        \r\n        return {\r\n            files: files, \r\n            typeOk: typeOk\r\n        };\r\n    }\r\n\r\n    private _showOutAcceptErrorMsg() {\r\n        let translation = (this.multiple ?\r\n            this.TRANSLATION.multiple.acceptErrorMsg :\r\n            this.TRANSLATION.nonMultiple.acceptErrorMsg\r\n        );\r\n        let fileTypeTranslation = this.translationService.getTranslation(this.TRANSLATION.fileType[this.fileType]);\r\n        let msg = this.translationService.getTranslation(translation, { \r\n            fileType: fileTypeTranslation,\r\n        });\r\n        this.toastService.error(msg, 7000);\r\n    }\r\n\r\n    private _readFile(file: File) {\r\n        const reader = new FileReader();\r\n        reader.onload = (fileReaderEvent: any) => {\r\n            this._fileUploads.push(new FileUpload(fileReaderEvent.target.result, file.name));\r\n            if (this._fileUploads.length == this._numFiles) {\r\n                this._finishReadFiles();\r\n            }\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    private _finishReadFiles() {\r\n        this.formControl?.setValue(this._fileUploads);\r\n        this.singleChosedFileName = this._fileUploads[0].filename;\r\n        this.onUpload.emit(this._fileUploads);\r\n    }\r\n\r\n}\r\n","<div class=\"input-file\">\r\n    <app-input-label *ngIf=\"label || labelTranslate\" [label]=\"label\" [labelTranslate]=\"labelTranslate\" \r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <div *ngIf=\"selectAllDir else regularInput\" >\r\n        <input type=\"file\" #uploadInput hidden (change)=\"onSelectFiles($event)\" [accept]=\"accept\" multiple webkitdirectory>\r\n    </div>\r\n    <ng-template #regularInput>\r\n        <input type=\"file\" #uploadInput hidden (change)=\"onSelectFiles($event)\" [accept]=\"accept\" [multiple]=\"multiple\">\r\n    </ng-template>\r\n\r\n    <div class=\"d-flex-row\">\r\n        <button mat-raised-button type=\"button\" color=\"primary\" (click)=\"openInputFile()\">\r\n            <mat-icon>upload</mat-icon>\r\n            {{ 'TRANSLATION' | translate: btnTranslation }}\r\n        </button>\r\n\r\n        <div *ngIf=\"numFiles == 0; else showChosenFiles\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.noFileChosen }}\r\n        </div>\r\n        <ng-template #showChosenFiles>\r\n            <div [ngSwitch]=\"multiple\">\r\n                <span *ngSwitchCase=\"false\">{{ singleChosedFileName }}</span>\r\n                <span *ngSwitchCase=\"true\">\r\n                    {{ numFiles }} {{ 'TRANSLATION' | translate: TRANSLATION.multiple.chosenFilesMsg }}\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GAME_BUILDER_TRANSLATION } from '../../../../game-builder-values';\nimport { CardUrlsInputComponent } from '../card-urls.component';\nimport { UrlPairConfig } from '../../url-pair-config.model';\n\n@Component({\n    selector: 'app-card-pair-url-inputs',\n    templateUrl: './card-pair-url-inputs.component.html',\n    styleUrls: []\n})\nexport class CardPairUrlInputsComponent implements OnInit, OnChanges {\n\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.cards;\n\n    @Input() parent: CardUrlsInputComponent;\n    @Input() index: number;\n    @Input() urlPairConfig: UrlPairConfig;\n\n    form: FormGroup;\n    pairOrdinal: number;\n\n    constructor(private fb: FormBuilder) { }\n    \n\n    ngOnInit(): void {\n        this.pairOrdinal = this.index + 1;\n        this._initForm();\n    }\n\n    private _initForm() {\n        this.form = this.fb.group({\n            image: new FormControl(null, Validators.required),\n        });\n\n        this._resetControls();\n        this.parent.addSubForm(this.form);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.urlPairConfig && !changes.urlPairConfig.firstChange) {\n            this._resetControls();\n        }\n    }\n\n    private _resetControls() {\n        if (this.urlPairConfig.addCustomAudioPerPair) {\n            this._addAudioControl();\n        } else {\n            this.form.removeControl('audio');\n        }\n\n        if (this.urlPairConfig.singleCardPerPair) {\n            this.form.removeControl('image2');\n            this.form.removeControl('audio2');\n        } else {\n            this.form.addControl('image2', new FormControl(null, Validators.required));\n            if (this.urlPairConfig.addCustomAudioPerPair) {\n                this.form.addControl('audio2', new FormControl(null, Validators.required));\n            }\n        }\n    }\n\n    private _addAudioControl() {\n        this.form.addControl('audio', new FormControl(null, Validators.required));\n    }\n\n    get firstPairImageLabelTranslation() {\n        return this.urlPairConfig?.singleCardPerPair ? \n            this.TRANSLATION.url.image.pairLink :\n            this.TRANSLATION.url.image.getPairLink(1)\n    }\n\n    get firstPairAudioLabelTranslation() {\n        return this.urlPairConfig?.singleCardPerPair ? \n            this.TRANSLATION.url.audio.pairLink :\n            this.TRANSLATION.url.audio.getPairLink(1)\n    }\n\n    onInsertUrl($url: string) {\n        this.parent.onInsertUrl($url, this.index);\n    }\n\n    deleteImgUrl() {\n        this.parent.deleteUrl(this.index);\n    }\n\n}\n","<div class=\"d-flex-col\">\n    <div class=\"mt-2 fst-italic fw-bold\">{{ 'TRANSLATION' | translate: TRANSLATION.pair }}{{pairOrdinal}}</div>\n\n    <div *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"mt-2 fst-italic\">{{ 'TRANSLATION' | translate: TRANSLATION.getCardPair(1) }}{{pairOrdinal}}</div>\n    </div>\n\n    <div class=\"d-flex-row\">\n        <div class=\"form-item\">\n            <app-input-image-url label=\"{{ 'TRANSLATION' | translate: firstPairImageLabelTranslation }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"image\">\n            </app-input-image-url>\n        </div>\n    \n        <div class=\"form-item\" *ngIf=\"urlPairConfig?.addCustomAudioPerPair\">\n            <app-input-audio-url label=\"{{ 'TRANSLATION' | translate: firstPairAudioLabelTranslation }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"audio\">\n            </app-input-audio-url>\n        </div>\n    </div>\n\n    <div *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"mt-2 fst-italic\">{{ 'TRANSLATION' | translate: TRANSLATION.getCardPair(2) }}{{pairOrdinal}}</div>\n    </div>\n\n    <div class=\"d-flex-row\" *ngIf=\"!urlPairConfig?.singleCardPerPair\">\n        <div class=\"form-item\">\n            <app-input-image-url label=\"{{ 'TRANSLATION' | translate:TRANSLATION.url.image.getPairLink(2) }}{{pairOrdinal}}\" \n                [form]=\"form\" controlName=\"image2\">\n            </app-input-image-url>\n        </div>\n    \n        <div *ngIf=\"urlPairConfig.addCustomAudioPerPair\" class=\"form-item\">\n            <app-input-audio-url label=\"{{ 'TRANSLATION' | translate: TRANSLATION.url.audio.getPairLink(2) }}{{pairOrdinal}}\"\n                [form]=\"form\" controlName=\"audio2\">\n            </app-input-audio-url>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { TranslationService } from 'src/app/shared/components/translation/translation.service';\r\nimport { CardIdTypeEnum, CardIdTypeNameTranslations } from 'src/app/shared/enums/card-id-type.enum';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { Card } from 'src/app/shared/model/card';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GameConfig } from 'src/app/shared/model/game-config.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../game-builder-values';\r\nimport { GameBuilderComponent } from '../game-builder/game-builder.component';\r\nimport { GAME_BUILDER_FORM_INPUT } from './game-build-form-input.values';\r\n\r\n@Component({\r\n    selector: 'app-game-builder-form',\r\n    templateUrl: './game-builder-form.component.html',\r\n    styleUrls: ['./game-builder-form.component.scss']\r\n})\r\nexport class GameBuilderFormComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION;\r\n    readonly FORM_INPUT = GAME_BUILDER_FORM_INPUT;\r\n    readonly ACCEPT_IMG = [ 'image/png', 'image/jpeg' ];\r\n\r\n    @Input() parent: GameBuilderComponent;\r\n\r\n    form: FormGroup;\r\n    options: { [key: string]: any[] } = {};\r\n    flag: any = {};\r\n    submitBtnTranslation: any = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private gameService: GameService,\r\n        private toastService: ToastService,\r\n        private translationService: TranslationService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.flag = {\r\n            isDemo: this._isDemo\r\n        }\r\n        this._initForm();\r\n        this._setOptions();\r\n        this._setSubmitBtn();\r\n    }\r\n\r\n    private get _isDemo() {\r\n        return this.parent.isDemo;\r\n    }\r\n\r\n    private _initForm() {\r\n        this.form = this.fb.group({\r\n            title: new FormControl('Memory Game', Validators.required),\r\n            [this.FORM_INPUT.cardIdType]: new FormControl(CardIdTypeEnum.NUMBERS, Validators.required),\r\n\r\n            [this.FORM_INPUT.addBackgroundImg]: new FormControl(false, Validators.required),\r\n            [this.FORM_INPUT.backgroundImgSrc]: new FormControl(null),\r\n\r\n            [this.FORM_INPUT.card.singleCardPerPair]: new FormControl(null, Validators.required),\r\n            [this.FORM_INPUT.card.addCustomSoundsPerCard]: new FormControl(null, Validators.required),\r\n            [this.FORM_INPUT.card.cardSrcType]: new FormControl(null, Validators.required),\r\n        });\r\n\r\n        if (this._isDemo) {\r\n            this.form.addControl(this.FORM_INPUT.card.numPairs, new FormControl(null, Validators.required));\r\n            this.form.removeControl(this.FORM_INPUT.addBackgroundImg);\r\n            this.form.removeControl(this.FORM_INPUT.backgroundImgSrc);\r\n            this.form.removeControl(this.FORM_INPUT.card.addCustomSoundsPerCard);\r\n            this.form.removeControl(this.FORM_INPUT.card.cardSrcType);\r\n        }\r\n    }\r\n\r\n    private _setOptions() {\r\n        const cardIdTypeNameTranslations = CardIdTypeNameTranslations;\r\n        this.options = {\r\n            cardId: [\r\n                { \r\n                    id: CardIdTypeEnum.NUMBERS, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.NUMBERS] \r\n                },\r\n                { \r\n                    id: CardIdTypeEnum.ROW_COLUMN, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.ROW_COLUMN] \r\n                },\r\n                { \r\n                    id: CardIdTypeEnum.ICONS, \r\n                    label: cardIdTypeNameTranslations[CardIdTypeEnum.ICONS]\r\n                },\r\n            ],\r\n        }\r\n\r\n        if (this._isDemo) {\r\n            this.options.numPairs = [];\r\n            ([4, 6, 8, 10]).forEach(value => this.options.numPairs.push({ id: value, label: value }));\r\n        }\r\n    }\r\n\r\n    private _setSubmitBtn() {\r\n        this.submitBtnTranslation = (this._isDemo ? \r\n            this.TRANSLATION.btn.submit.playDemo :\r\n            this.TRANSLATION.btn.submit.createGame\r\n        );\r\n    }\r\n\r\n    onChangeAddBackgroundImg($value: boolean) {\r\n        this.flag.addBackgroundImg = $value;\r\n        this.form.get(this.FORM_INPUT.backgroundImgSrc).setValue(null);\r\n    }\r\n\r\n    download() {\r\n        if (this._isDemo) {\r\n            return;\r\n        }\r\n        if (this._isInvalidForm) {\r\n            return this.toastService.showInvalidFormError();\r\n        }\r\n        this.gameService.downloadGameConfig( this._buildGameConfig() );\r\n    }\r\n\r\n    submit() {\r\n        if (this._isInvalidForm) {\r\n            return this.toastService.showInvalidFormError();\r\n        }\r\n\r\n        if (this._isDemo) {\r\n            this.gameService.create(this._buildGameConfigForDemo());\r\n            return;\r\n        }\r\n\r\n        this.gameService.create(this._buildGameConfig());\r\n    }\r\n\r\n    private get _isInvalidForm() {\r\n        this.form.markAllAsTouched();\r\n        return this.form.invalid;\r\n    }\r\n\r\n    private _buildGameConfig() {\r\n        let data = {...this.form.value };\r\n        let gameConfig = new GameConfig();\r\n        gameConfig.title = data.title.toUpperCase();\r\n        gameConfig.singleCardPerPair = data.singleCardPerPair;\r\n        gameConfig.addCustomSoundsPerCard = data.addCustomSoundsPerCard;\r\n        gameConfig.cardIdType = data.cardIdType;\r\n        gameConfig.backgroundImgSrc = data.backgroundImgSrc;\r\n\r\n        let srcType = data[this.FORM_INPUT.card.cardSrcType] as MediaSourceTypeEnum;\r\n        gameConfig.cards = (srcType == MediaSourceTypeEnum.UPLOAD ?\r\n            this._getCardsFromUploads(data) :\r\n            this._getCardsFromUrls(data)\r\n        );\r\n\r\n        return gameConfig;\r\n    }\r\n\r\n    private _getCardsFromUploads(formValue: any) {\r\n        let images = formValue[this.FORM_INPUT.card.upload.images] as FileUpload[];\r\n        let audios = formValue[this.FORM_INPUT.card.upload.audios] as FileUpload[];\r\n        return this.gameService.buildCardsFromValidUploads(images, audios);\r\n    }\r\n\r\n    private _getCardsFromUrls(formValue: any) {\r\n        let cardUrls = formValue[this.FORM_INPUT.card.urls] as any[];\r\n        let index=1;\r\n\r\n        let singleCardPerPair = formValue[this.FORM_INPUT.card.singleCardPerPair] as boolean;\r\n        if (singleCardPerPair) {\r\n            return cardUrls.map((obj) => {\r\n                let image = new FileUpload(obj.image, `imageUrl${index}`);\r\n                let audio = obj.audio ? new FileUpload(obj.audio, `audioUrl${index}`) : null;\r\n                index++;\r\n                return new Card(null, image, audio);\r\n            });\r\n        }\r\n\r\n        let cards: Card[] = [];\r\n        cardUrls.forEach((obj) => {\r\n            let image = new FileUpload(obj.image, `imageUrl${index}_card1`);\r\n            let audio = obj.audio ? new FileUpload(obj.audio, `audioUrl${index}_card1`) : null;\r\n            cards.push(new Card(null, image, audio));\r\n\r\n            let image2 = new FileUpload(obj.image2, `imageUrl${index}_card2`);\r\n            let audio2 = obj.audio ? new FileUpload(obj.audio2, `audioUrl${index}_card2`) : null;\r\n            cards.push(new Card(null, image2, audio2));\r\n\r\n            index++;\r\n        });\r\n        return cards;\r\n    }\r\n\r\n\r\n    private _buildGameConfigForDemo() {\r\n        let data = this.form.value;\r\n\r\n        let gameConfig = new GameConfig();\r\n        gameConfig.title = this.translationService.getTranslation(this.TRANSLATION.gameTitle.demo);\r\n        gameConfig.singleCardPerPair = data[this.FORM_INPUT.card.singleCardPerPair] as boolean;\r\n        gameConfig.addCustomSoundsPerCard = false;\r\n        gameConfig.cards = [];\r\n\r\n        const imageDirPath = 'assets/images/demo-game-cards';\r\n\r\n        let numPairs: number = data.numPairs;\r\n\r\n        for (let i = 1; i <= numPairs; i++) {\r\n            let filename = `num${i}_draw.png`;\r\n            let image = new FileUpload(`${imageDirPath}/draw/${filename}`, filename);\r\n            gameConfig.cards.push(new Card(null, image, null));\r\n        }\r\n\r\n        if (!gameConfig.singleCardPerPair) {\r\n            for (let i = 1; i <= numPairs; i++) {\r\n                let filename = `num${i}_word.png`;\r\n                let image = new FileUpload(`${imageDirPath}/words/${filename}`, filename);\r\n                gameConfig.cards.push(new Card(null, image, null));\r\n            }\r\n        }\r\n\r\n        return gameConfig;\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"flag.isDemo; else showFullBuilderForm\">\r\n    <form [formGroup]=\"form\">\r\n        <div class=\"form-line\">\r\n            <app-select class=\"form-item\" \r\n                label=\"{{ 'TRANSLATION' | translate: TRANSLATION.input.cardIdType }}\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.cardIdType\" [optionsTranslate]=\"options.cardId\">\r\n            </app-select>\r\n\r\n            <app-select-yes-no class=\"form-item\" \r\n                [labelTranslate]=\"TRANSLATION.input.singleCardPerPair\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.card.singleCardPerPair\">\r\n            </app-select-yes-no>\r\n\r\n            <app-select class=\"form-item\" \r\n                [labelTranslate]=\"TRANSLATION.input.numPairs\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.card.numPairs\" [options]=\"options.numPairs\">\r\n            </app-select>\r\n        </div>\r\n    </form>\r\n</div>\r\n<ng-template #showFullBuilderForm>\r\n    <form [formGroup]=\"form\">\r\n        <span class=\"subtitle color-primary\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.mainData }}\r\n        </span>\r\n\r\n        <div class=\"form-line\">\r\n            <app-input-text class=\"input-title\" \r\n                [labelTranslate]=\"TRANSLATION.input.gameTitle\" \r\n                [form]=\"form\" controlName=\"title\">\r\n            </app-input-text>\r\n    \r\n            <app-select class=\"input-card-id\" \r\n                [labelTranslate]=\"TRANSLATION.input.cardIdType\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.cardIdType\" [optionsTranslate]=\"options.cardId\">\r\n            </app-select>\r\n        </div>\r\n    \r\n        <mat-divider></mat-divider>\r\n        <span class=\"subtitle color-primary\">{{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.backgroundImg }}</span>\r\n        <div class=\"form-line\">\r\n            <app-select-yes-no [labelTranslate]=\"TRANSLATION.input.backgroundImg.add\" \r\n                [form]=\"form\" [controlName]=\"FORM_INPUT.addBackgroundImg\" (onChange)=\"onChangeAddBackgroundImg($event)\">\r\n            </app-select-yes-no>\r\n    \r\n            <div *ngIf=\"flag.addBackgroundImg\" class=\"form-item\">\r\n                <app-background-image-form [form]=\"form\" [controlName]=\"FORM_INPUT.backgroundImgSrc\"></app-background-image-form>\r\n            </div>\r\n        </div>\r\n    \r\n        <mat-divider></mat-divider>\r\n        <span class=\"subtitle color-primary\">{{ 'TRANSLATION' | translate: TRANSLATION.sectionTitle.cards }}</span>\r\n        <app-card-form [parent]=\"this\"></app-card-form>\r\n    </form>\r\n</ng-template>\r\n\r\n<div class=\"d-flex-row mt-4\">\r\n    <div>\r\n        <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"submit()\">\r\n            <mat-icon>sports_esports</mat-icon>\r\n            {{ 'TRANSLATION' | translate: submitBtnTranslation }} \r\n        </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"!flag.isDemo\" class=\"download-btn\">\r\n        <button mat-stroked-button type=\"button\" color=\"primary\" (click)=\"download()\">\r\n            <mat-icon>download</mat-icon>\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.btn.download.label }}\r\n        </button>\r\n\r\n        <span>{{ 'TRANSLATION' | translate: TRANSLATION.btn.download.comment }}</span>\r\n    </div>\r\n</div>\r\n","export enum MediaSourceTypeEnum {\r\n    UPLOAD = 1,\r\n    URL = 2,\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-abstract-input',\r\n    template: '',\r\n    styleUrls: []\r\n})\r\nexport class AbstractInputComponent {\r\n\r\n    @Input() labelTranslate: any;\r\n    @Input() label: string;\r\n    @Input() labelComment: string;\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n    @Input() flexDirectionRow = false;\r\n    @Input() disabled = false;\r\n\r\n    @Output() onChange = new EventEmitter<any>();\r\n    \r\n    protected _originalRequired: boolean;\r\n\r\n    protected _setOriginalRequired() {\r\n        this._originalRequired = this.isRequired;\r\n    }\r\n\r\n    protected checkForm() {\r\n        if(!this.form) {\r\n            this.controlName = 'model';\r\n\r\n            this.form = new FormGroup({\r\n                model: new FormControl()\r\n            });\r\n        }\r\n    }\r\n\r\n    get formControl() {\r\n        return this.form?.controls[this.controlName];\r\n    }\r\n\r\n    get isRequired() {\r\n        return this.formControl?.hasError('required') || false;\r\n    }\r\n\r\n    get isInvalid() {\r\n        return this.hasError('invalid');\r\n    }\r\n\r\n    hasError(errorKey: string) {\r\n        let formControl = this.formControl;\r\n        return !this.isRequired && (formControl?.invalid || formControl?.hasError(errorKey));\r\n    }\r\n\r\n    get inputClass() {\r\n        return {\r\n            'd-flex-row': this.flexDirectionRow,\r\n            'd-flex-col': !this.flexDirectionRow,\r\n        }\r\n    }\r\n\r\n    get getSelectValue() {\r\n        try {\r\n            return this.formControl.value;\r\n        } \r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected _setAsInvalid() {\r\n        let control = this.formControl;\r\n        control.setErrors({'invalid': true});\r\n        control.markAsTouched();\r\n    }\r\n\r\n    protected _setAsValidByOriginalRequired() {\r\n        let control = this.formControl;\r\n        control.setErrors(this._originalRequired ? {'required': true} : null);\r\n        control.markAsTouched();\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-card-image-filename-example-dialog',\r\n    templateUrl: './card-image-filename-example-dialog.component.html',\r\n    styleUrls: ['./card-image-filename-example-dialog.component.scss']\r\n})\r\nexport class CardImageFilenameExampleDialogComponent {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.diffImagesPerPairDialog;\r\n    readonly SEP = VALUES.upload.fileNameSeparator;\r\n    \r\n}\r\n","<div class=\"dialog-header\">\r\n    <div mat-dialog-title>\r\n        <div>{{ 'TRANSLATION' | translate: TRANSLATION.title }}</div>\r\n        <button mat-icon-button mat-dialog-close id=\"modal-close-btn\" \r\n            matTooltip=\"{{ 'CLOSE' | translate }}\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-content>\r\n    <div>\r\n        {{ 'TRANSLATION' | translate: TRANSLATION.instruction }}: \r\n        <i>[{{ 'TRANSLATION' | translate: TRANSLATION.pairName }}]</i>\r\n        {{SEP}}\r\n        <i>[{{ 'TRANSLATION' | translate: TRANSLATION.imageId }}]</i>\r\n    </div>\r\n    <div class=\"image-cont\">\r\n        <img src=\"assets/images/upload_diff_images_per_pair_example.png\" alt=\"Image\">\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { UploadComponent } from 'src/app/shared/components/input/upload/upload.component';\r\nimport { FileUploadTypeEnum } from 'src/app/shared/enums/file-upload-type.enum';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-game-builder',\r\n    templateUrl: './game-builder.component.html',\r\n    styleUrls: ['./game-builder.component.scss']\r\n})\r\nexport class GameBuilderComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION;\r\n    readonly CONFIG_FILE_TYPE = FileUploadTypeEnum.JSON;\r\n\r\n    pageTitleTranslation: any = {};\r\n    flag: { [key: string]: boolean } = {};\r\n\r\n    private _isDemo: boolean;\r\n    \r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private gameService: GameService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.data?.subscribe(data => {\r\n            this._isDemo = data.demo ?? false;\r\n            this.pageTitleTranslation = (this._isDemo ? \r\n                this.TRANSLATION.pageTitle.demoBuilder :\r\n                this.TRANSLATION.pageTitle.gameBuilder\r\n            );\r\n            this._initFlags();\r\n        });\r\n    }\r\n\r\n    private _initFlags() {\r\n        this.flag = {\r\n            isDemo: this._isDemo,\r\n            uploadConfigFile: false,\r\n            showForm: true\r\n        }\r\n    }\r\n\r\n    get isDemo() {\r\n        return this._isDemo;\r\n    }\r\n\r\n    onChangeUploadConfigFile($doUpload: boolean) {\r\n        this.flag.uploadConfigFile = $doUpload;\r\n        this.flag.showForm = !$doUpload;\r\n    }\r\n\r\n    onUploadConfigFile(uploadFiles: FileUpload[], uploadChild: UploadComponent) {\r\n        try {\r\n            this.gameService.createGameFromUploadedConfigFile(uploadFiles[0]);\r\n        } catch (error) {\r\n            uploadChild.reset();\r\n        }\r\n    }\r\n    \r\n}","<h1 class=\"color-primary\">{{ 'TRANSLATION' | translate: pageTitleTranslation }}</h1>\r\n\r\n<div class=\"main-instructions mb-4\">\r\n    <mat-label>{{ 'TRANSLATION' | translate: TRANSLATION.instruction }}</mat-label>\r\n\r\n    <div *ngIf=\"!flag.isDemo\" class=\"upload-config-file\">\r\n        <mat-checkbox (change)=\"onChangeUploadConfigFile($event.checked)\" color=\"primary\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.uploadConfigFile.checkboxLabel }}\r\n        </mat-checkbox>\r\n        <span class=\"instruction\">\r\n            {{ 'TRANSLATION' | translate: TRANSLATION.uploadConfigFile.instruction }}\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<app-game-builder-form *ngIf=\"flag.showForm\" [parent]=\"this\"></app-game-builder-form>\r\n\r\n<div *ngIf=\"flag.uploadConfigFile\">\r\n    <app-upload #upload [fileType]=\"CONFIG_FILE_TYPE\" (onUpload)=\"onUploadConfigFile($event, upload)\"></app-upload>\r\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\nimport { UrlPairConfig } from '../url-pair-config.model';\r\n\r\n@Component({\r\n    selector: 'app-card-urls',\r\n    templateUrl: './card-urls.component.html',\r\n    styleUrls: ['./card-urls.component.scss']\r\n})\r\nexport class CardUrlsInputComponent implements OnInit, OnChanges  {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.cards;\r\n    private readonly _CARD_URLS_INPUT = 'cardUrls';\r\n\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n    @Input() urlPairConfig: UrlPairConfig;\r\n\r\n    indices: number[];\r\n\r\n    private _formArray: FormArray;\r\n    private _numCardImages: number;\r\n    private _cardImageMap: { [key: string]: FileUpload } = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n    ) {\r\n        // define hear to avoid ExpressionChangedAfterItHasBeenCheckedError\r\n        this.indices = [...Array(2).keys()];\r\n        this._formArray = fb.array([]);\r\n    }\r\n    \r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.indices = [...Array(this.urlPairConfig.numPairs).keys()];\r\n            this._cardImageMap = {};\r\n            this._numCardImages = this.urlPairConfig.numCards;\r\n            this.form.addControl(this._CARD_URLS_INPUT, this._formArray);\r\n        }, 1);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.form.removeControl(this._CARD_URLS_INPUT);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.urlPairConfig && !changes.urlPairConfig.firstChange) {\r\n            this.ngOnInit();\r\n        }\r\n    }\r\n\r\n    addSubForm(subForm: FormGroup) {\r\n        this._formArray.push(subForm);\r\n    }\r\n\r\n    getSubForm(index: number) {\r\n        return this._formArray?.controls[index] as FormGroup;\r\n    }\r\n\r\n    getUrl(pairIndex: number, imageIndex: number = 0): string {\r\n        try {\r\n            return this._cardImageMap[this._buildCardImageKey(pairIndex, imageIndex)]?.src;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _buildCardImageKey(pairIndex: number, imageIndex: number): string {\r\n        return `${pairIndex}${imageIndex}`;\r\n    }\r\n\r\n    onInsertUrl($url: string, pairIndex: number, imageIndex: number = 0) {\r\n        let key = this._buildCardImageKey(pairIndex, imageIndex);\r\n        this._cardImageMap[key] = new FileUpload($url, `pair${pairIndex+1}_image${imageIndex+1}`);\r\n        this._updateFormControl();\r\n    }\r\n\r\n    deleteUrl(pairIndex: number, imageIndex: number = 0) {\r\n        let sumControlName = 'url';\r\n        if (imageIndex == 1) {\r\n            sumControlName = 'url2';\r\n        }\r\n        this.getSubForm(pairIndex).get(sumControlName).reset();\r\n\r\n        let cardImageKey = this._buildCardImageKey(pairIndex, imageIndex);\r\n        delete this._cardImageMap[cardImageKey];\r\n\r\n        this._updateFormControl();\r\n    }\r\n\r\n    private _updateFormControl() {\r\n        let cardImages = Object.values(this._cardImageMap);\r\n        if (cardImages.length === this._numCardImages) {\r\n            this.form.get(this.controlName).setValue(cardImages);\r\n            return;\r\n        }\r\n\r\n        this.form.get(this.controlName).setValue(null);\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"indices\">\r\n    <div *ngFor=\"let i of (indices || [])\" class=\"card-box\">\r\n        <app-card-pair-url-inputs [parent]=\"this\" [index]=\"i\" [urlPairConfig]=\"urlPairConfig\"></app-card-pair-url-inputs>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { AbstractInputComponent } from '../../abstract-input.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-select',\r\n    templateUrl: './select.component.html',\r\n    styleUrls: ['./select.component.scss', '../../abstract-input.component.scss']\r\n})\r\nexport class SelectComponent extends AbstractInputComponent implements OnInit, OnChanges {\r\n\r\n    readonly ALL_OPTION = 'all';\r\n    \r\n    @Input() options: any[] = [];\r\n    @Input() optionsTranslate: any[] = [];\r\n    @Input() valueAttribute: string = 'id';\r\n    @Input() labelAttribute: string = 'label';\r\n    @Input() multiple = false;\r\n    @Input() allOptionLabel: string;\r\n    @Input() useFullOptionAsValue = false;\r\n\r\n    @Output() onFinishedLoading = new EventEmitter<boolean>();\r\n\r\n    showLoadingOptionsError: boolean = false;\r\n\r\n    @ViewChild('allOption') \r\n    private _allOption: MatOption;\r\n    \r\n    private _allSelected = false;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.showLoadingOptionsError = false;\r\n        this.checkForm();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.options && changes.options.currentValue == null) {\r\n            this.showLoadingOptionsError = true;\r\n        }\r\n    }\r\n\r\n    getOptionValue(option: any): any {\r\n        if (this.useFullOptionAsValue) {\r\n            return option;\r\n        }\r\n        return option[this.valueAttribute];\r\n    }\r\n\r\n    onChangeSelection($eventValue: any) {\r\n        if (this.allOptionLabel && this.multiple) {\r\n            this._onChangeSelectionMultiple($eventValue);\r\n        }\r\n\r\n        this.onChange.emit($eventValue);\r\n    }\r\n\r\n    private _onChangeSelectionMultiple($eventValue: any[]) {\r\n        if (this._allSelected) {\r\n            this.formControl.setValue([]);\r\n            this._allSelected = false;\r\n            return;\r\n        }\r\n\r\n        this._allSelected = $eventValue.includes(this.ALL_OPTION) || \r\n            $eventValue.length == this.options.length;\r\n\r\n        if (this._allSelected) {\r\n            this.formControl.setValue(\r\n                this.options.map(option => option[this.valueAttribute])\r\n            );\r\n        }\r\n    }\r\n\r\n    get allOptionSelected() {\r\n        return this._allOption?.selected || false;\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <mat-select [formControl]=\"formControl\" [multiple]=\"multiple\" \r\n            (selectionChange)=\"onChangeSelection($event.value)\">\r\n\r\n            <mat-option #allOption *ngIf=\"allOptionLabel\" [value]=\"ALL_OPTION\">\r\n                {{ allOptionLabel }}\r\n            </mat-option>            \r\n            \r\n            <div *ngIf=\"optionsTranslate?.length; else showRegularOptions\">\r\n                <mat-option *ngFor=\"let option of optionsTranslate\" [value]=\"getOptionValue(option)\" \r\n                    [disabled]=\"multiple && allOptionSelected\">\r\n                    {{ 'TRANSLATION' | translate: option[labelAttribute] }}\r\n                </mat-option>\r\n            </div>\r\n            <ng-template #showRegularOptions>\r\n                <mat-option *ngFor=\"let option of options\" [value]=\"getOptionValue(option)\" \r\n                    [disabled]=\"multiple && allOptionSelected\">\r\n                    {{ option[labelAttribute] }}\r\n                </mat-option>\r\n            </ng-template>           \r\n        </mat-select>\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingOptionsError\" class=\"loading-options-error\">\r\n    <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n    Erro ao buscar opções para {{ label }}\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { InputModule } from 'src/app/shared/components/input/input.module';\r\nimport { BackgroundImageFormComponent } from './game-builder-form/background-image-form/background-image-form.component';\r\nimport { CardFormComponent } from './game-builder-form/cards/card-form/card-form.component';\r\nimport { CardImageFilenameExampleDialogComponent } from './game-builder-form/cards/card-image-filename-example-dialog/card-image-filename-example-dialog.component';\r\nimport { CardPairUrlInputsComponent } from './game-builder-form/cards/card-urls/card-pair-url-inputs/card-pair-url-inputs.component';\r\nimport { CardUrlsInputComponent } from './game-builder-form/cards/card-urls/card-urls.component';\r\nimport { GameBuilderFormComponent } from './game-builder-form/game-builder-form.component';\r\nimport { GameBuilderComponent } from './game-builder/game-builder.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameBuilderComponent,\r\n    },\r\n    {\r\n        path: 'demo',\r\n        component: GameBuilderComponent,\r\n        data: { demo: true }\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GameBuilderComponent,\r\n        GameBuilderFormComponent,\r\n        BackgroundImageFormComponent,\r\n        CardFormComponent,\r\n        CardImageFilenameExampleDialogComponent,\r\n        CardUrlsInputComponent,\r\n        CardPairUrlInputsComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MaterialModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        TranslateModule,\r\n        InputModule,\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class GameBuilderModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-image-url',\n    templateUrl: './input-image-url.component.html',\n    styleUrls: ['./input-image-url.component.scss']\n})\nexport class InputImageUrlComponent implements OnInit {\n\n    @Input() labelTranslate: any;\n    @Input() label: string;\n    @Input() form: FormGroup;\n    @Input() controlName: string;\n\n    formControl: AbstractControl;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.formControl = this.form.get(this.controlName);\n    }\n\n    deleteUrl() {\n        this.formControl.setValue(null);\n    }\n\n}\n","<div class=\"d-flex-row\">\n    <app-input-text  class=\"flex-8\" \n        [label]=\"label\" [form]=\"form\" [controlName]=\"controlName\">\n    </app-input-text>\n\n    <app-image-preview class=\"flex-4\" [src]=\"formControl?.value\" (onDelete)=\"deleteUrl()\"></app-image-preview>\n</div>","export const GAME_BUILDER_FORM_INPUT = {\r\n    cardIdType: 'cardIdType',\r\n    addBackgroundImg: 'addBackgroundImg',\r\n    backgroundImgSrc: 'backgroundImgSrc',\r\n    card: {\r\n        singleCardPerPair: 'singleCardPerPair',\r\n        addCustomSoundsPerCard: 'addCustomSoundsPerCard',\r\n        cardSrcType: 'cardSrcType',\r\n        // for srcType UPLOAD\r\n        upload: {\r\n            images: 'cardUploadImages',\r\n            audios: 'cardUploadAudios'\r\n        },\r\n        // for srcType URL        \r\n        numPairs: 'numPairs',\r\n        urls: 'cardUrls',\r\n    }\r\n}\r\n","<mat-label *ngIf=\"labelTranslate; else showRegularLabel\">\r\n    {{ 'TRANSLATION' | translate: labelTranslate }}\r\n    <span class=\"input-label-comment\" *ngIf=\"comment\">{{ comment }}</span>\r\n    <span class=\"input-label-required\"> {{ required ? '*' : '' }}</span>\r\n</mat-label>\r\n<ng-template #showRegularLabel>\r\n    {{ label }}\r\n    <span class=\"input-label-comment\" *ngIf=\"comment\">{{ comment }}</span>\r\n    <span class=\"input-label-required\"> {{ required ? '*' : '' }}</span>\r\n</ng-template>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-input-label',\r\n    templateUrl: './input-label.component.html',\r\n    styleUrls: ['./input-label.component.scss']\r\n})\r\nexport class InputLabelComponent {\r\n\r\n    @Input() labelTranslate: any;\r\n    @Input() label: string;\r\n    @Input() required = true;\r\n    @Input() comment: string;\r\n\r\n}\r\n","import { AbstractControl, Validators } from \"@angular/forms\";\r\n\r\nexport class FormUtil {\r\n\r\n    static setFormControlAsRequiredOrNot(control: AbstractControl, required: boolean) {\r\n        if (required) {\r\n            this.setFormControlAsRequired(control);\r\n        } else {\r\n            this.setFormControlAsNotRequired(control);\r\n        }\r\n    }\r\n\r\n    static setFormControlAsRequired(control: AbstractControl) {\r\n        control.reset();\r\n        control.setValidators(Validators.required);\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    static setFormControlAsNotRequired(control: AbstractControl) {\r\n        control.reset();\r\n        control.clearValidators();\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    static setFormControlAsInvalid(control: AbstractControl) {\r\n        control?.setErrors({'invalid': true});\r\n        control?.markAsTouched();\r\n    }\r\n\r\n    static setFormControlAsValid(control: AbstractControl, required: boolean) {\r\n        control?.setErrors(required ? {'required': true} : null);\r\n        control?.markAsTouched();\r\n    }\r\n\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FeedbackService } from 'src/app/services/feedback.service';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { VALUES } from 'src/app/shared/constants/global.values';\r\nimport { FileUploadTypeEnum } from 'src/app/shared/enums/file-upload-type.enum';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { ITranslation } from 'src/app/shared/components/translation/translation.model';\r\nimport { FormUtil } from 'src/app/shared/util/form.util';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../../game-builder-values';\r\nimport { GAME_BUILDER_FORM_INPUT } from '../../game-build-form-input.values';\r\nimport { GameBuilderFormComponent } from '../../game-builder-form.component';\r\nimport { CardImageFilenameExampleDialogComponent } from '../card-image-filename-example-dialog/card-image-filename-example-dialog.component';\r\nimport { UrlPairConfig } from '../url-pair-config.model';\r\n\r\nconst ANIMATION_TIMEOUT = 500;\r\nconst STATE = {\r\n    show: 'show',\r\n    hide: 'hide'\r\n};\r\n\r\n@Component({\r\n    selector: 'app-card-form',\r\n    templateUrl: './card-form.component.html',\r\n    styleUrls: ['./card-form.component.scss'],\r\n    animations: [\r\n        trigger('showContent', [\r\n            state(STATE.show, style({\r\n                overflow: 'hidden',\r\n                height: '*'\r\n            })),\r\n            state(STATE.hide, style({\r\n                overflow: 'hidden',\r\n                height: '0px',\r\n                opacity: '0'\r\n            })),\r\n            transition('*=>*', animate(`${ANIMATION_TIMEOUT}ms ease-in-out`))\r\n        ])\r\n    ]\r\n})\r\nexport class CardFormComponent implements OnInit {\r\n\r\n    readonly UploadFileType = FileUploadTypeEnum;\r\n    readonly FORM_INPUT = GAME_BUILDER_FORM_INPUT.card;\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input;\r\n    readonly FILENAME_SEP = VALUES.upload.fileNameSeparator;\r\n    readonly MIN_NUM_PAIRS = 2;\r\n\r\n    @Input() parent: GameBuilderFormComponent;\r\n\r\n    form: FormGroup;\r\n    stateUrlInputs = STATE.hide;\r\n    urlPairConfig: UrlPairConfig;\r\n    flag: { [key: string]: boolean };\r\n    invalidUploadMsg: ITranslation;\r\n\r\n    constructor(\r\n        private feedbackService: FeedbackService,\r\n        private gameService: GameService\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.parent.form;\r\n        this._initFlags();\r\n    }\r\n\r\n    private _initFlags() {\r\n        this.flag = {\r\n            isUpload: null,\r\n            showFilePatternWarning: false,\r\n            showAudioUpload: false,\r\n        }\r\n    }\r\n\r\n    private get _addCustomSoundsPerCard() {\r\n        return this.form.get(this.FORM_INPUT.addCustomSoundsPerCard).value as boolean;\r\n    }\r\n\r\n    private get _singleCardPerPair() {\r\n        return this.form.get(this.FORM_INPUT.singleCardPerPair).value as boolean;\r\n    }\r\n\r\n    get showFilePatternWarning(): boolean {\r\n        try {\r\n            return this.flag.isUpload && this._singleCardPerPair === false;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    changeAddCustomAudios($addCustomAudios: boolean) {\r\n        this.flag.showAudioUpload = (this.flag.isUpload && $addCustomAudios);\r\n        if (this.flag.showAudioUpload) {\r\n            this._addUploadAudioControl();\r\n        } else if (this.flag.isUpload) {\r\n            this.form.removeControl(this.FORM_INPUT.upload.audios);\r\n        }\r\n\r\n        this.receivePairConfigChange();\r\n    }\r\n\r\n    onChangeNumPairsForUrl($numPairs: number) {\r\n        if ($numPairs < this.MIN_NUM_PAIRS) {\r\n            return;\r\n        }\r\n        this.receivePairConfigChange();\r\n    }\r\n\r\n    receivePairConfigChange(numPairs?: number) {\r\n        let singleCardPerPair = this._singleCardPerPair;\r\n        let addCustomAudioPerPair = this._addCustomSoundsPerCard;\r\n        numPairs = numPairs ?? (this.form.get(this.FORM_INPUT.numPairs)?.value as number);\r\n\r\n        if (this.flag.isUpload || ([ singleCardPerPair, addCustomAudioPerPair, numPairs ]).some(value => value == null)) {\r\n            this._removeUrlInputs();\r\n            return;\r\n        }\r\n\r\n        this.urlPairConfig = new UrlPairConfig(singleCardPerPair, addCustomAudioPerPair, numPairs);\r\n        this.stateUrlInputs = STATE.show;\r\n    }\r\n\r\n    private _removeUrlInputs() {\r\n        this.stateUrlInputs = STATE.hide;\r\n        setTimeout(() => {\r\n            this.urlPairConfig = null;\r\n        }, ANIMATION_TIMEOUT);\r\n    }\r\n    \r\n\r\n    onChangeCardSrcType($value: MediaSourceTypeEnum) {\r\n        this.flag.isUpload = ($value === MediaSourceTypeEnum.UPLOAD);\r\n        this.flag.showAudioUpload = (this.flag.isUpload && this._addCustomSoundsPerCard);\r\n\r\n        if (this.flag.isUpload) {\r\n            this.form.addControl(this.FORM_INPUT.upload.images, new FormControl(null, Validators.required));\r\n            if (this.flag.showAudioUpload) {\r\n                this._addUploadAudioControl();\r\n            }           \r\n            this.form.removeControl(this.FORM_INPUT.numPairs);\r\n            this._removeUrlInputs();\r\n        } else {\r\n            this.form.removeControl(this.FORM_INPUT.upload.images);\r\n            this.form.removeControl(this.FORM_INPUT.upload.audios);\r\n            this.form.addControl(this.FORM_INPUT.numPairs, new FormControl(null, [Validators.required, Validators.min(this.MIN_NUM_PAIRS)]));\r\n        }\r\n    }\r\n\r\n    private _addUploadAudioControl() {\r\n        this.form.addControl(this.FORM_INPUT.upload.audios, new FormControl(null, Validators.required));\r\n    }\r\n    \r\n\r\n    receiveUploads(siblingControlName: string) {\r\n        let siblingFileUploadLen = (this.form.get(siblingControlName)?.value ?? []).length;\r\n        if (!siblingFileUploadLen) {\r\n            return;\r\n        }\r\n\r\n        const cardUploadInput = this.FORM_INPUT.upload;\r\n        let imageControl = this.form.get(cardUploadInput.images);\r\n        let audioControl = this.form.get(cardUploadInput.audios);\r\n\r\n        try {\r\n            this.gameService.validateCardUploads(imageControl.value, audioControl.value);\r\n            this.invalidUploadMsg = null;\r\n            FormUtil.setFormControlAsValid(imageControl, false);\r\n            FormUtil.setFormControlAsValid(audioControl, false);\r\n        } \r\n        catch (error) {\r\n            this.invalidUploadMsg = this.feedbackService.handleError(error);\r\n            FormUtil.setFormControlAsInvalid(imageControl);\r\n            FormUtil.setFormControlAsInvalid(audioControl);\r\n        }\r\n    }\r\n\r\n    openExample() {\r\n        this.feedbackService.dialog.openCustomDialog(CardImageFilenameExampleDialogComponent, 80);\r\n    }\r\n\r\n}\r\n","<div class=\"form-line\">\r\n    <app-select-yes-no label=\"{{ 'TRANSLATION' | translate: TRANSLATION.singleCardPerPair }}\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.singleCardPerPair\" (onChange)=\"receivePairConfigChange()\">\r\n    </app-select-yes-no>\r\n\r\n    <app-select-yes-no label=\"{{ 'TRANSLATION' | translate: TRANSLATION.addCustomSoundsPerCard }}\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.addCustomSoundsPerCard\" (onChange)=\"changeAddCustomAudios($event)\">\r\n    </app-select-yes-no>\r\n\r\n    <app-select-media-src-type [form]=\"form\" [controlName]=\"FORM_INPUT.cardSrcType\" [multiple]=\"true\"\r\n        (onChange)=\"onChangeCardSrcType($event)\">\r\n    </app-select-media-src-type>\r\n</div>\r\n\r\n<div [ngSwitch]=\"flag.isUpload\" class=\"form-line mt-3 mb-3\">\r\n    <div *ngSwitchCase=\"true\" class=\"d-flex-col\">\r\n        <div class=\"uploads\">\r\n            <div class=\"upload-div\">\r\n                <div>\r\n                    <app-upload\r\n                        [fileType]=\"UploadFileType.IMAGE\" [labelTranslate]=\"TRANSLATION.cards.upload.images.pickDirPath\" \r\n                        [form]=\"form\" [controlName]=\"FORM_INPUT.upload.images\" [selectAllDir]=\"true\"\r\n                        (onUpload)=\"receiveUploads(FORM_INPUT.upload.audios)\">\r\n                    </app-upload>\r\n                </div>\r\n                <div *ngIf=\"showFilePatternWarning\" class=\"file-warning\">\r\n                    <mat-icon>warning</mat-icon>\r\n                    <span>\r\n                        {{ 'TRANSLATION' | translate: TRANSLATION.cards.upload.images.diffImagesPerPair.warning }}\r\n                        <a class=\"example-link\" (click)=\"openExample()\">\r\n                            {{ 'TRANSLATION' | translate: TRANSLATION.cards.upload.images.diffImagesPerPair.warningLink }}\r\n                        </a>.\r\n                    </span>\r\n                </div>\r\n            </div>            \r\n\r\n            <div *ngIf=\"flag.showAudioUpload\" class=\"upload-div\">\r\n                <div>\r\n                    <app-upload\r\n                        [fileType]=\"UploadFileType.AUDIO\" [labelTranslate]=\"TRANSLATION.cards.upload.audios.pickDirPath\" \r\n                        [form]=\"form\" [controlName]=\"FORM_INPUT.upload.audios\" [selectAllDir]=\"true\"\r\n                        (onUpload)=\"receiveUploads(FORM_INPUT.upload.images)\">\r\n                    </app-upload>\r\n                </div>\r\n                <div class=\"file-warning\">\r\n                    <mat-icon>warning</mat-icon>\r\n                    <div>{{ 'TRANSLATION' | translate: TRANSLATION.cards.upload.audios.instruction }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"invalidUploadMsg\" class=\"mat-custom-error\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'TRANSLATION' | translate: invalidUploadMsg }}</strong>\r\n        </div>\r\n    </div>\r\n\r\n    <app-input-number *ngSwitchCase=\"false\"\r\n        [labelTranslate]=\"TRANSLATION.numPairs\" \r\n        [form]=\"form\" [controlName]=\"FORM_INPUT.numPairs\" [min]=\"MIN_NUM_PAIRS\"\r\n        (onChange)=\"onChangeNumPairsForUrl($event)\">\r\n    </app-input-number>\r\n</div>\r\n\r\n<div [@showContent]=\"stateUrlInputs\">\r\n    <div *ngIf=\"urlPairConfig\" class=\"form-line\">\r\n        <div class=\"form-item mt-3\">\r\n            <app-card-urls [form]=\"form\" [controlName]=\"FORM_INPUT.urls\" [urlPairConfig]=\"urlPairConfig\">\r\n            </app-card-urls>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UploadComponent } from 'src/app/shared/components/input/upload/upload.component';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { FileUpload } from 'src/app/shared/model/file-upload.model';\r\nimport { FormUtil } from 'src/app/shared/util/form.util';\r\nimport { GAME_BUILDER_TRANSLATION } from '../../game-builder-values';\r\n\r\n@Component({\r\n    selector: 'app-background-image-form',\r\n    templateUrl: './background-image-form.component.html',\r\n    styleUrls: ['./background-image-form.component.scss']\r\n})\r\nexport class BackgroundImageFormComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = GAME_BUILDER_TRANSLATION.input.backgroundImg;\r\n\r\n    @Input() form: FormGroup;\r\n    @Input() controlName: string;\r\n\r\n    @ViewChild('upload') private _uploadChild: UploadComponent;\r\n\r\n    myControlName: { [key: string]: string } = {};\r\n    isUrl: boolean;\r\n    imgPreview: any;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.myControlName = {\r\n            srcType: `${this.controlName}SrcType`,\r\n            url:     `${this.controlName}Url`,\r\n            upload:  `${this.controlName}Upload`\r\n        }\r\n\r\n        this.form.addControl(this.myControlName.srcType, new FormControl(null, Validators.required));\r\n        this.form.addControl(this.myControlName.url, new FormControl());\r\n        this.form.addControl(this.myControlName.upload, new FormControl());\r\n\r\n        this.form.get(this.myControlName.upload).valueChanges.subscribe(value => this._onUpload(value));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        Object.values(this.myControlName).forEach(controlName => this.form.removeControl(controlName));\r\n    }\r\n\r\n    onChooseInputType($srcType: MediaSourceTypeEnum) {\r\n        this.isUrl = ($srcType == MediaSourceTypeEnum.URL);\r\n        this.imgPreview = null;\r\n        this.form.get(this.controlName).setValue(null);\r\n\r\n        if (this.isUrl) {\r\n            this._setFormControlAsRequired(this.myControlName.url);\r\n            this._setFormControlAsNotRequired(this.myControlName.upload);\r\n        } \r\n        else {\r\n            this._setFormControlAsRequired(this.myControlName.upload);\r\n            this._setFormControlAsNotRequired(this.myControlName.url);\r\n        }\r\n    }\r\n\r\n    private _setFormControlAsRequired(controlName: string) {\r\n        FormUtil.setFormControlAsRequired(this.form.get(controlName));\r\n    }\r\n\r\n    private _setFormControlAsNotRequired(controlName: string) {\r\n        FormUtil.setFormControlAsNotRequired(this.form.get(controlName));\r\n    }\r\n\r\n\r\n    private _onUpload(cardImages: FileUpload[]) {\r\n        if ( !(cardImages?.length) ) {\r\n            this._setImage(null);\r\n            return;\r\n        }\r\n        this._setImage(cardImages[0].src);\r\n    }\r\n\r\n    onInsertUrl($url: string) {\r\n        let value = $url;\r\n        if (!$url) {\r\n            value = null;\r\n        }\r\n        this._setImage(value);\r\n    }\r\n\r\n    private _setImage(src: string) {\r\n        this.imgPreview = src;\r\n        this.form.get(this.controlName).setValue(src);\r\n    }\r\n\r\n\r\n    deleteFile() {\r\n        ([\r\n            this.myControlName.url,\r\n            this.myControlName.upload\r\n        ])\r\n        .forEach(controlName => this.form.get(controlName).setValue(null));\r\n        \r\n        this._setImage(null);\r\n        this._uploadChild?.reset();\r\n    }\r\n\r\n}\r\n","<div class=\"input-image\">\r\n    <app-select-media-src-type [form]=\"form\" [controlName]=\"myControlName.srcType\"\r\n        (onChange)=\"onChooseInputType($event)\">\r\n    </app-select-media-src-type>\r\n\r\n    <div class=\"form-item\">\r\n        <div class=\"input-preview\">\r\n            <div [ngSwitch]=\"isUrl\" [ngClass]=\"isUrl ? 'form-item' : ''\">\r\n                <div *ngSwitchCase=\"true\">\r\n                    <app-input-text [labelTranslate]=\"TRANSLATION.url\" \r\n                        [form]=\"form\" [controlName]=\"myControlName.url\" (onChange)=\"onInsertUrl($event)\">\r\n                    </app-input-text>\r\n                </div>\r\n\r\n                <div *ngSwitchCase=\"false\">\r\n                    <app-upload #upload [labelTranslate]=\"TRANSLATION.upload\" \r\n                        [form]=\"form\" [controlName]=\"myControlName.upload\" (onClearInput)=\"deleteFile()\">\r\n                    </app-upload>\r\n                </div>\r\n            </div>\r\n\r\n            <app-image-preview [src]=\"imgPreview\" (onDelete)=\"deleteFile()\"></app-image-preview>\r\n        </div>\r\n    </div>\r\n</div>","import { FileUploadTypeEnum } from \"../../../enums/file-upload-type.enum\";\r\n\r\nexport const UPLOAD_TRANSLATION = {\r\n    noFileChosen: {\r\n        pt: 'Nenhum arquivo escolhido',\r\n        en: 'No file chosen'\r\n    },\r\n\r\n    nonMultiple: {\r\n        btn: {\r\n            pt: 'Escolher arquivo',\r\n            en: 'Choose file'\r\n        },\r\n        acceptErrorMsg: {\r\n            pt: 'O arquivo selecionado não é {{ fileType }}. Tente novamente!',\r\n            en: 'The selected file is not {{ fileType }}. Try again!'\r\n        }\r\n    },\r\n\r\n    multiple: {\r\n        btn: {\r\n            pt: 'Escolher arquivos',\r\n            en: 'Choose files'\r\n        },\r\n        acceptErrorMsg: {\r\n            pt: 'Pelo menos 1 arquivo da pasta selecionada não é {{ fileType }}. Tente novamente!',\r\n            en: 'At least 1 file in the selected folder is not {{ fileType }} type. Try again!'\r\n        },\r\n        chosenFilesMsg: {\r\n            pt: 'arquivo(s)',\r\n            en: 'file(s)'\r\n        }\r\n    },\r\n\r\n    fileType: {\r\n        [FileUploadTypeEnum.IMAGE]: {\r\n            pt: 'uma imagem',\r\n            en: 'an image'\r\n        },\r\n        [FileUploadTypeEnum.AUDIO]: {\r\n            pt: 'um áudio',\r\n            en: 'an audio'\r\n        },\r\n        [FileUploadTypeEnum.JSON]: {\r\n            pt: 'válido',\r\n            en: 'valid'\r\n        },\r\n    },\r\n    \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectComponent } from '../select/select.component';\r\n\r\n@Component({\r\n    selector: 'app-select-yes-no',\r\n    templateUrl: './select-yes-no.component.html',\r\n    styleUrls: []\r\n})\r\nexport class SelectYesNoComponent extends SelectComponent implements OnInit {\r\n\r\n    ngOnInit(): void {\r\n        this.options = [\r\n            { \r\n                id: true, \r\n                label: { \r\n                    pt: 'Sim', \r\n                    en: 'Yes' \r\n                } \r\n            },\r\n            { \r\n                id: false, \r\n                label: {\r\n                    pt: 'Não',\r\n                    en: 'No'\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n}\r\n","<app-select [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n    [form]=\"form\" [controlName]=\"controlName\" [optionsTranslate]=\"options\" \r\n    (onChange)=\"onChangeSelection($event)\">\r\n</app-select>","export const SRC_TYPE_TRANSLATION_VALUES = {\r\n\r\n    nonMultiple: {\r\n        input: {\r\n            pt: 'Como deseja inserir a imagem?',\r\n            en: 'How do you want to insert the image?'\r\n        },\r\n        options: {\r\n            url: {\r\n                pt: 'Link da imagem',\r\n                en: 'Image link'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivo',\r\n                en: 'Upload image file'\r\n            }\r\n        },\r\n    },\r\n\r\n    multiple: {\r\n        input: {\r\n            pt: 'Como deseja inserir as cartas (imagens e sons)?',\r\n            en: 'How do you want to insert the cards (images and sounds)?'\r\n        },\r\n        options: {\r\n            url: {\r\n                pt: 'Links (URLs)',\r\n                en: 'Links (URLs)'\r\n            },\r\n            upload: {\r\n                pt: 'Enviar arquivos',\r\n                en: 'Upload files'\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-number',\r\n    templateUrl: './input-number.component.html',\r\n    styleUrls: [\r\n        './input-number.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputNumberComponent extends AbstractInputComponent {\r\n\r\n    @Input() min: number = null;\r\n    @Input() max: number = null;\r\n\r\n    sendValueChange($event: any) {\r\n        let value: number = $event?.target?.valueAsNumber;\r\n        if(isNaN(value)) {\r\n            value = null;\r\n        }\r\n        this.onChange.emit(value);\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label *ngIf=\"label || labelTranslate\" \r\n        [label]=\"label\" [labelTranslate]=\"labelTranslate\" [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput \r\n            type=\"number\" \r\n            [formControl]=\"formControl\" \r\n            (change)=\"sendValueChange($event)\" \r\n            [min]=\"min\"\r\n            [max]=\"max\"\r\n        >\r\n    \r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min!=null && formControl.hasError('min')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MIN_VALUE' | translate: { min: min } }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"max!=null && formControl.hasError('max')\">\r\n            <mat-icon aria-hidden=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MAX_VALUE' | translate: { max: max } }}</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"min==null && max==null && isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.INVALID' | translate }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-input-audio-url',\n    templateUrl: './input-audio-url.component.html',\n    styleUrls: ['./input-audio-url.component.scss']\n})\nexport class InputAudioUrlComponent implements OnInit {\n\n    @Input() labelTranslate: any;\n    @Input() label: string;\n    @Input() form: FormGroup;\n    @Input() controlName: string;\n\n    flag: { [key: string]: boolean } = {};\n\n    private _audio: HTMLAudioElement;\n\n    ngOnInit(): void {\n        this.flag = {\n            hasValue: false,\n            isPlaying: false,\n        }\n\n        this._audio = new Audio();\n\n        this.form.get(this.controlName).valueChanges.subscribe(value => {\n            this.flag.hasValue = !!value;\n            this._audio.src = value;\n            if (value) {\n                this._audio.load();\n            }\n        });\n    }\n\n    playPause() {\n        this.flag.isPlaying = !this.flag.isPlaying;\n        if (this.flag.isPlaying) {\n            this._audio.play();\n        } else {\n            this._audio.pause();\n        }\n    }\n\n    delete() {\n        this.flag.isPlaying = false;\n        this.form.get(this.controlName).setValue(null);\n    }\n\n}\n","<div class=\"d-flex-row\">\n    <app-input-text class=\"flex-8\" [labelTranslate]=\"labelTranslate\" [label]=\"label\" [form]=\"form\" [controlName]=\"controlName\"></app-input-text>\n    \n    <div class=\"flex-4\">\n        <div class=\"d-flex-row mt-2\">\n            <button mat-icon-button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"playPause()\" [disabled]=\"!flag.hasValue\">\n                <mat-icon>{{flag.isPlaying ? 'pause' : 'play_arrow'}}</mat-icon>\n            </button>\n    \n            <button mat-icon-button mat-stroked-button color=\"accent\" type=\"button\" (click)=\"delete()\" [disabled]=\"!flag.hasValue\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </div>        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SelectComponent } from '../select/select.component';\r\nimport { MediaSourceTypeEnum } from 'src/app/shared/enums/media-src-type.enum';\r\nimport { SRC_TYPE_TRANSLATION_VALUES } from './select-media-src-type-values';\r\n\r\n@Component({\r\n    selector: 'app-select-media-src-type',\r\n    templateUrl: './select-media-src-type.component.html',\r\n    styleUrls: []\r\n})\r\nexport class SelectMediaSrcTypeComponent extends SelectComponent implements OnInit {\r\n\r\n    readonly TRANSLATION = SRC_TYPE_TRANSLATION_VALUES;\r\n\r\n    ngOnInit(): void {\r\n        let translation = (this.multiple ? \r\n            this.TRANSLATION.multiple : \r\n            this.TRANSLATION.nonMultiple\r\n        );\r\n\r\n        this.labelTranslate = translation.input;\r\n        \r\n        this.options = [\r\n            { \r\n                id: MediaSourceTypeEnum.UPLOAD, \r\n                label: translation.options.upload\r\n            },\r\n            { \r\n                id: MediaSourceTypeEnum.URL, \r\n                label: translation.options.url\r\n            },\r\n        ];\r\n    }\r\n\r\n    // override\r\n    onChangeSelection($eventValue: any) {\r\n        this.onChange.emit($eventValue);\r\n    }\r\n\r\n}\r\n","<app-select [labelTranslate]=\"labelTranslate\" \r\n    [form]=\"form\" [controlName]=\"controlName\" [optionsTranslate]=\"options\" \r\n    (onChange)=\"onChangeSelection($event)\">\r\n</app-select>","import { Component, Input } from '@angular/core';\r\nimport { AbstractInputComponent } from '../abstract-input.component';\r\n\r\n@Component({\r\n    selector: 'app-input-text',\r\n    templateUrl: './input-text.component.html',\r\n    styleUrls: [\r\n        './input-text.component.scss',\r\n        '../abstract-input.component.scss'\r\n    ]\r\n})\r\nexport class InputTextComponent extends AbstractInputComponent {\r\n\r\n    @Input() placeholder = '';\r\n    @Input() minLength: number;\r\n    @Input() maxLength = 100;\r\n    @Input() title = '';\r\n    \r\n    clear() {\r\n        this.formControl.setValue(null);\r\n    }\r\n\r\n    sendChangeEvent($event) {\r\n        if( !($event?.target) ) {\r\n            return;\r\n        }\r\n        this.onChange.emit($event.target.value);\r\n    }\r\n\r\n    protected _eventTypeDeleteContent($event: any) {\r\n        return $event?.inputType === 'deleteContentBackward';\r\n    }\r\n\r\n}\r\n","<div id=\"{{controlName}}-div\" [ngClass]=\"inputClass\">\r\n    <app-input-label [label]=\"label\" [labelTranslate]=\"labelTranslate\"\r\n        [comment]=\"labelComment\" [required]=\"isRequired\">\r\n    </app-input-label>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"w-100 mat-form-field-label-out\" floatLabel=\"never\" color=\"primary\">\r\n        <input matInput\r\n            type=\"text\"\r\n            [formControl]=\"formControl\"\r\n            [id]=\"controlName\"\r\n            [name]=\"controlName\"\r\n            [minLength]=\"minLength\"\r\n            [maxLength]=\"maxLength\"\r\n            [title]=\"title\"\r\n            [placeholder]=\"placeholder\"\r\n            [readonly]=\"disabled\"\r\n            (change)=\"sendChangeEvent($event)\"\r\n        >\r\n\r\n        <mat-error *ngIf=\"isRequired\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.REQUIRED' | translate }}</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"isInvalid\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.INVALID' | translate }}</strong>\r\n        </mat-error>\r\n\r\n        <mat-error *ngIf=\"minLength && hasError('minLength')\">\r\n            <mat-icon aria-label=\"false\">cancel</mat-icon>\r\n            <strong>{{ 'FORM_INPUT.MIN_LENGTH' | translate: { minLength: minLength } }}</strong>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","export class UrlPairConfig {\r\n    \r\n    constructor(\r\n        public singleCardPerPair: boolean,\r\n        public addCustomAudioPerPair: boolean,\r\n        public numPairs: number,\r\n    ) {}\r\n\r\n    get numCards(): number {\r\n        return this.numPairs * (this.singleCardPerPair ? 1 : 2);\r\n    }\r\n    \r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-image-preview',\n    templateUrl: './image-preview.component.html',\n    styleUrls: ['./image-preview.component.scss']\n})\nexport class ImagePreviewComponent {\n\n    @Input() src: string;\n\n    @Output() onDelete = new EventEmitter();\n\n    deleteFile() {\n        this.src = null;\n        this.onDelete.emit();\n    }\n\n}\n","<div *ngIf=\"src\" class=\"form-line\">\r\n    <img [src]=\"src\" alt=\"Image\">\r\n\r\n    <div class=\"delete-btn\">\r\n        <button mat-icon-button mat-stroked-button type=\"button\" (click)=\"deleteFile()\" \r\n            matTooltip=\"{{ 'DELETE_IMAGE' | translate }}\" color=\"accent\">\r\n            <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}